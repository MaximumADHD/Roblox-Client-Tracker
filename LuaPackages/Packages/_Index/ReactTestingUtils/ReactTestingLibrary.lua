--[[
	Package link auto-generated by Rotriever
]]
local PackageIndex = script.Parent.Parent.Parent._Index

local Package = require(PackageIndex["ReactTestingLibrary"]["ReactTestingLibrary"])

export type within = Package.within
export type QueryByBoundAttribute<T = Instance> = Package.QueryByBoundAttribute<T > 
export type AllByBoundAttribute<T = Instance> = Package.AllByBoundAttribute<T > 
export type FindAllByBoundAttribute<T = Instance> = Package.FindAllByBoundAttribute<T > 
export type GetByBoundAttribute<T = Instance> = Package.GetByBoundAttribute<T > 
export type FindByBoundAttribute<T = Instance> = Package.FindByBoundAttribute<T > 
export type QueryByText<T = Instance> = Package.QueryByText<T > 
export type AllByText<T = Instance> = Package.AllByText<T > 
export type FindAllByText<T = Instance> = Package.FindAllByText<T > 
export type GetByText<T = Instance> = Package.GetByText<T > 
export type FindByText<T = Instance> = Package.FindByText<T > 
export type getByPlaceholderText<T = Instance> = Package.getByPlaceholderText<T > 
export type getAllByPlaceholderText<T = Instance> = Package.getAllByPlaceholderText<T > 
export type queryByPlaceholderText<T = Instance> = Package.queryByPlaceholderText<T > 
export type queryAllByPlaceholderText<T = Instance> = Package.queryAllByPlaceholderText<T > 
export type findByPlaceholderText<T = Instance> = Package.findByPlaceholderText<T > 
export type findAllByPlaceholderText<T = Instance> = Package.findAllByPlaceholderText<T > 
export type getByText<T = Instance> = Package.getByText<T > 
export type getAllByText<T = Instance> = Package.getAllByText<T > 
export type queryByText<T = Instance> = Package.queryByText<T > 
export type queryAllByText<T = Instance> = Package.queryAllByText<T > 
export type findByText<T = Instance> = Package.findByText<T > 
export type findAllByText<T = Instance> = Package.findAllByText<T > 
export type getByDisplayValue<T = Instance> = Package.getByDisplayValue<T > 
export type getAllByDisplayValue<T = Instance> = Package.getAllByDisplayValue<T > 
export type queryByDisplayValue<T = Instance> = Package.queryByDisplayValue<T > 
export type queryAllByDisplayValue<T = Instance> = Package.queryAllByDisplayValue<T > 
export type findByDisplayValue<T = Instance> = Package.findByDisplayValue<T > 
export type findAllByDisplayValue<T = Instance> = Package.findAllByDisplayValue<T > 
export type getByTestId<T = Instance> = Package.getByTestId<T > 
export type getAllByTestId<T = Instance> = Package.getAllByTestId<T > 
export type queryByTestId<T = Instance> = Package.queryByTestId<T > 
export type queryAllByTestId<T = Instance> = Package.queryAllByTestId<T > 
export type findByTestId<T = Instance> = Package.findByTestId<T > 
export type findAllByTestId<T = Instance> = Package.findAllByTestId<T > 
export type WithSuggest = Package.WithSuggest
export type GetErrorFunction<Argument = any> = Package.GetErrorFunction<Argument > 
export type SelectorMatcherOptions = Package.SelectorMatcherOptions
export type QueryByAttribute = Package.QueryByAttribute
export type AllByAttribute = Package.AllByAttribute
export type queryByAttribute = Package.queryByAttribute
export type queryAllByAttribute = Package.queryAllByAttribute
export type getElementError = Package.getElementError
export type QueryMethod<Argument, Return> = Package.QueryMethod<Argument, Return> 
export type QueryBy<Argument> = Package.QueryBy<Argument> 
export type GetAllBy<Argument> = Package.GetAllBy<Argument> 
export type FindAllBy<Argument> = Package.FindAllBy<Argument> 
export type GetBy<Argument> = Package.GetBy<Argument> 
export type FindBy<Argument> = Package.FindBy<Argument> 
export type BuiltQueryMethods<Argument> = Package.BuiltQueryMethods<Argument> 
export type buildQueries<Argument> = Package.buildQueries<Argument> 
export type Screen<Q> = Package.Screen<Q> 
export type screen = Package.screen
export type waitForOptions = Package.waitForOptions
export type waitFor = Package.waitFor
export type waitForElementToBeRemoved<T> = Package.waitForElementToBeRemoved<T> 
export type MatcherFunction = Package.MatcherFunction
export type Matcher = Package.Matcher
export type ByRoleMatcher = Package.ByRoleMatcher
export type NormalizerFn = Package.NormalizerFn
export type NormalizerOptions = Package.NormalizerOptions
export type MatcherOptions = Package.MatcherOptions
export type Match = Package.Match
export type DefaultNormalizerOptio = Package.DefaultNormalizerOptio
export type getDefaultNormalizer = Package.getDefaultNormalizer
export type getNodeText = Package.getNodeText
export type EventType = Package.EventType
export type FireFunction = Package.FireFunction
export type FireObject = Package.FireObject
export type CreateFunction = Package.CreateFunction
export type CreateObject = Package.CreateObject
export type createEvent = Package.createEvent
export type fireEvent = Package.fireEvent
export type BoundFunction<T> = Package.BoundFunction<T> 
export type BoundFunctions<Q> = Package.BoundFunctions<Q> 
export type Query = Package.Query
export type Queries = Package.Queries
export type getQueriesForElement = Package.getQueriesForElement
export type PrettyDOMOptions = Package.PrettyDOMOptions
export type prettyDOM = Package.prettyDOM
export type logDOM = Package.logDOM
export type prettyFormat_Colors = Package.prettyFormat_Colors
export type prettyFormat_CompareKeys = Package.prettyFormat_CompareKeys
export type prettyFormat_Options = Package.prettyFormat_Options
export type prettyFormat_OptionsReceived = Package.prettyFormat_OptionsReceived
export type prettyFormat_OldPlugin = Package.prettyFormat_OldPlugin
export type prettyFormat_NewPlugin = Package.prettyFormat_NewPlugin
export type prettyFormat_Plugin = Package.prettyFormat_Plugin
export type prettyFormat_Plugins = Package.prettyFormat_Plugins
export type prettyFormat_PrettyFormatOptions = Package.prettyFormat_PrettyFormatOptions
export type prettyFormat_Printer = Package.prettyFormat_Printer
export type prettyFormat_Refs = Package.prettyFormat_Refs
export type prettyFormat_Theme = Package.prettyFormat_Theme
export type Config = Package.Config
export type ConfigFn = Package.ConfigFn
export type configure = Package.configure
export type getConfig = Package.getConfig
export type QueryOptions = Package.QueryOptions
export type QueryArgs = Package.QueryArgs
export type Suggestion = Package.Suggestion
export type Variant = Package.Variant
export type Method = Package.Method
export type getSuggestedQuery = Package.getSuggestedQuery
export type RenderResult<Q> = Package.RenderResult<Q> 
export type RenderOptions<Q, Container, BaseElement> = Package.RenderOptions<Q, Container, BaseElement> 
export type render<Q, Container = Instance, BaseElement = Container> = Package.render<Q, Container , BaseElement > 
export type cleanup = Package.cleanup
export type act = Package.act


return Package
