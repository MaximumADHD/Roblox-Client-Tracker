PROTO_0:
  GETTABLEKS R5 R0 K0 ["X"]
  GETTABLEKS R6 R1 K0 ["X"]
  SUB R4 R5 R6
  FASTCALL1 MATH_ABS R4 [+2]
  GETIMPORT R3 K3 [math.abs]
  CALL R3 1 1
  LOADK R4 K4 [1E-05]
  JUMPIFNOTLE R3 R4 [+10]
  GETTABLEKS R3 R0 K5 ["Y"]
  GETTABLEKS R4 R1 K5 ["Y"]
  JUMPIFLT R3 R4 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1
  GETTABLEKS R3 R0 K0 ["X"]
  GETTABLEKS R4 R1 K0 ["X"]
  JUMPIFLT R3 R4 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1

PROTO_1:
  LOADK R3 K0 ["WrapTarget"]
  NAMECALL R1 R0 K1 ["IsA"]
  CALL R1 2 -1
  RETURN R1 -1

PROTO_2:
  GETUPVAL R5 0
  GETTABLE R4 R5 R0
  JUMPIFNOTEQKNIL R4 [+5]
  GETUPVAL R4 0
  NEWTABLE R5 0 0
  SETTABLE R5 R4 R0
  GETUPVAL R6 0
  GETTABLE R5 R6 R0
  GETTABLE R4 R5 R1
  JUMPIFNOTEQKNIL R4 [+6]
  GETUPVAL R5 0
  GETTABLE R4 R5 R0
  NEWTABLE R5 0 0
  SETTABLE R5 R4 R1
  GETUPVAL R7 0
  GETTABLE R6 R7 R0
  GETTABLE R5 R6 R1
  DUPTABLE R6 K2 [{"targetName", "vertex"}]
  SETTABLEKS R2 R6 K0 ["targetName"]
  SETTABLEKS R3 R6 K1 ["vertex"]
  FASTCALL2 TABLE_INSERT R5 R6 [+3]
  GETIMPORT R4 K5 [table.insert]
  CALL R4 2 0
  RETURN R0 0

PROTO_3:
  GETUPVAL R2 0
  FASTCALL2 BUFFER_READF64 R2 R0 [+4]
  MOVE R3 R0
  GETIMPORT R1 K2 [buffer.readf64]
  CALL R1 2 1
  GETUPVAL R3 0
  ADDK R4 R0 K3 [8]
  FASTCALL2 BUFFER_READF64 R3 R4 [+3]
  GETIMPORT R2 K2 [buffer.readf64]
  CALL R2 2 1
  FASTCALL2 VECTOR R1 R2 [+5]
  MOVE R4 R1
  MOVE R5 R2
  GETIMPORT R3 K6 [Vector3.new]
  CALL R3 2 1
  GETUPVAL R5 1
  LOADK R6 K7 [1E-07]
  NAMECALL R3 R3 K8 ["FuzzyEq"]
  CALL R3 3 1
  JUMPIFNOT R3 [+2]
  LOADK R3 K9 ["equal"]
  RETURN R3 1
  GETUPVAL R6 1
  GETTABLEKS R5 R6 K10 ["X"]
  SUB R4 R1 R5
  FASTCALL1 MATH_ABS R4 [+2]
  GETIMPORT R3 K13 [math.abs]
  CALL R3 1 1
  LOADK R4 K7 [1E-07]
  JUMPIFNOTLT R4 R3 [+10]
  GETUPVAL R5 1
  GETTABLEKS R4 R5 K10 ["X"]
  JUMPIFNOTLT R4 R1 [+3]
  LOADK R3 K14 ["bigger"]
  RETURN R3 1
  LOADK R3 K15 ["smaller"]
  RETURN R3 1
  GETUPVAL R5 1
  GETTABLEKS R4 R5 K16 ["Y"]
  JUMPIFNOTLT R4 R2 [+3]
  LOADK R3 K14 ["bigger"]
  RETURN R3 1
  LOADK R3 K15 ["smaller"]
  RETURN R3 1

PROTO_4:
  SUBK R2 R0 K1 [1]
  MULK R1 R2 K0 [32]
  RETURN R1 1

PROTO_5:
  GETUPVAL R1 0
  GETIMPORT R3 K3 [buffer.len]
  GETUPVAL R4 1
  CALL R3 1 1
  IDIVK R2 R3 K0 [32]
  NEWCLOSURE R3 P0
  CAPTURE UPVAL U1
  CAPTURE VAL R0
  DUPCLOSURE R4 K4 [PROTO_4]
  CALL R1 3 1
  NEWTABLE R2 0 0
  MOVE R3 R1
  LOADNIL R4
  LOADNIL R5
  FORGPREP R3
  SUBK R9 R7 K5 [1]
  MULK R8 R9 K0 [32]
  GETUPVAL R10 1
  ADDK R11 R8 K6 [16]
  FASTCALL2 BUFFER_READF64 R10 R11 [+3]
  GETIMPORT R9 K8 [buffer.readf64]
  CALL R9 2 1
  GETUPVAL R11 1
  ADDK R12 R8 K9 [24]
  FASTCALL2 BUFFER_READF64 R11 R12 [+3]
  GETIMPORT R10 K8 [buffer.readf64]
  CALL R10 2 1
  FASTCALL2 VECTOR R9 R10 [+5]
  MOVE R14 R9
  MOVE R15 R10
  GETIMPORT R13 K12 [Vector3.new]
  CALL R13 2 1
  FASTCALL2 TABLE_INSERT R2 R13 [+4]
  MOVE R12 R2
  GETIMPORT R11 K15 [table.insert]
  CALL R11 2 0
  FORGLOOP R3 2 [-30]
  RETURN R2 1

PROTO_6:
  GETTABLEKS R1 R0 K0 ["uv"]
  GETUPVAL R3 0
  NAMECALL R1 R1 K1 ["FuzzyEq"]
  CALL R1 2 1
  JUMPIFNOT R1 [+2]
  LOADK R1 K2 ["equal"]
  RETURN R1 1
  GETTABLEKS R3 R0 K0 ["uv"]
  GETUPVAL R4 0
  GETTABLEKS R7 R3 K3 ["X"]
  GETTABLEKS R8 R4 K3 ["X"]
  SUB R6 R7 R8
  FASTCALL1 MATH_ABS R6 [+2]
  GETIMPORT R5 K6 [math.abs]
  CALL R5 1 1
  LOADK R6 K7 [1E-05]
  JUMPIFNOTLE R5 R6 [+10]
  GETTABLEKS R5 R3 K8 ["Y"]
  GETTABLEKS R6 R4 K8 ["Y"]
  JUMPIFLT R5 R6 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  JUMP [+8]
  GETTABLEKS R5 R3 K3 ["X"]
  GETTABLEKS R6 R4 K3 ["X"]
  JUMPIFLT R5 R6 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  JUMPIFNOT R2 [+2]
  LOADK R1 K9 ["smaller"]
  RETURN R1 1
  LOADK R1 K10 ["bigger"]
  RETURN R1 1

PROTO_7:
  GETUPVAL R2 0
  GETTABLE R1 R2 R0
  RETURN R1 1

PROTO_8:
  NEWTABLE R1 0 0
  MOVE R2 R0
  LOADNIL R3
  LOADNIL R4
  FORGPREP R2
  GETUPVAL R7 0
  GETUPVAL R9 1
  LENGTH R8 R9
  NEWCLOSURE R9 P0
  CAPTURE VAL R6
  NEWCLOSURE R10 P1
  CAPTURE UPVAL U1
  CALL R7 3 1
  MOVE R8 R7
  LOADNIL R9
  LOADNIL R10
  FORGPREP R8
  GETUPVAL R16 1
  GETTABLE R15 R16 R12
  FASTCALL2 TABLE_INSERT R1 R15 [+4]
  MOVE R14 R1
  GETIMPORT R13 K2 [table.insert]
  CALL R13 2 0
  FORGLOOP R8 2 [-9]
  FORGLOOP R2 2 [-23]
  RETURN R1 1

PROTO_9:
  GETTABLEKS R3 R0 K0 ["uv"]
  GETTABLEKS R4 R1 K0 ["uv"]
  GETTABLEKS R7 R3 K1 ["X"]
  GETTABLEKS R8 R4 K1 ["X"]
  SUB R6 R7 R8
  FASTCALL1 MATH_ABS R6 [+2]
  GETIMPORT R5 K4 [math.abs]
  CALL R5 1 1
  LOADK R6 K5 [1E-05]
  JUMPIFNOTLE R5 R6 [+10]
  GETTABLEKS R5 R3 K6 ["Y"]
  GETTABLEKS R6 R4 K6 ["Y"]
  JUMPIFLT R5 R6 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1
  GETTABLEKS R5 R3 K1 ["X"]
  GETTABLEKS R6 R4 K1 ["X"]
  JUMPIFLT R5 R6 [+2]
  LOADB R2 0 +1
  LOADB R2 1
  RETURN R2 1

PROTO_10:
  GETIMPORT R2 K1 [require]
  GETUPVAL R8 0
  GETTABLEKS R7 R8 K2 ["Src"]
  GETTABLEKS R6 R7 K3 ["Components"]
  GETTABLEKS R5 R6 K4 ["EditingTools"]
  GETTABLEKS R4 R5 K5 ["CageEditingTool"]
  GETTABLEKS R3 R4 K6 ["SymmetricalUVs"]
  CALL R2 1 1
  GETIMPORT R6 K10 [buffer.len]
  MOVE R7 R2
  CALL R6 1 1
  DIVK R5 R6 K7 [32]
  GETIMPORT R7 K10 [buffer.len]
  MOVE R8 R2
  CALL R7 1 1
  IDIVK R6 R7 K7 [32]
  JUMPIFEQ R5 R6 [+2]
  LOADB R4 0 +1
  LOADB R4 1
  FASTCALL2K ASSERT R4 K11 [+4]
  LOADK R5 K11 ["SymmetricalUVs buffer is not divisible by cursor offset"]
  GETIMPORT R3 K13 [assert]
  CALL R3 2 0
  GETUPVAL R4 1
  GETTABLEKS R3 R4 K14 ["filter"]
  NAMECALL R4 R0 K15 ["GetDescendants"]
  CALL R4 1 1
  DUPCLOSURE R5 K16 [PROTO_1]
  CALL R3 2 1
  JUMPIFNOTEQKNIL R1 [+3]
  GETIMPORT R1 K18 [warn]
  JUMPIFNOTEQKNIL R1 [+2]
  LOADB R5 0 +1
  LOADB R5 1
  FASTCALL2K ASSERT R5 K19 [+4]
  LOADK R6 K19 ["Luau"]
  GETIMPORT R4 K13 [assert]
  CALL R4 2 0
  NEWTABLE R4 0 0
  NEWTABLE R5 0 0
  NEWCLOSURE R6 P1
  CAPTURE VAL R4
  NEWCLOSURE R7 P2
  CAPTURE UPVAL U2
  CAPTURE VAL R2
  NEWCLOSURE R8 P3
  CAPTURE UPVAL U2
  CAPTURE VAL R5
  GETIMPORT R9 K22 [debug.profilebegin]
  LOADK R10 K23 ["Collect points and UVs"]
  CALL R9 1 0
  MOVE R9 R3
  LOADNIL R10
  LOADNIL R11
  FORGPREP R9
  GETIMPORT R16 K27 [Enum.CageType.Outer]
  NAMECALL R14 R13 K28 ["GetUVs"]
  CALL R14 2 3
  FORGPREP R14
  DUPTABLE R21 K32 [{"targetName", "vertex", "uv"}]
  GETTABLEKS R22 R13 K33 ["Name"]
  SETTABLEKS R22 R21 K29 ["targetName"]
  SETTABLEKS R17 R21 K30 ["vertex"]
  GETTABLEKS R23 R18 K34 ["X"]
  GETTABLEKS R24 R18 K35 ["Y"]
  FASTCALL2 VECTOR R23 R24 [+3]
  GETIMPORT R22 K38 [Vector3.new]
  CALL R22 2 1
  SETTABLEKS R22 R21 K31 ["uv"]
  FASTCALL2 TABLE_INSERT R5 R21 [+4]
  MOVE R20 R5
  GETIMPORT R19 K41 [table.insert]
  CALL R19 2 0
  FORGLOOP R14 2 [-25]
  FORGLOOP R9 2 [-33]
  GETIMPORT R9 K43 [debug.profileend]
  CALL R9 0 0
  GETIMPORT R9 K22 [debug.profilebegin]
  LOADK R10 K44 ["Sort points and UVs"]
  CALL R9 1 0
  GETIMPORT R9 K46 [table.sort]
  MOVE R10 R5
  DUPCLOSURE R11 K47 [PROTO_9]
  CALL R9 2 0
  GETIMPORT R9 K43 [debug.profileend]
  CALL R9 0 0
  GETIMPORT R9 K22 [debug.profilebegin]
  LOADK R10 K48 ["Create symmetry map"]
  CALL R9 1 0
  MOVE R9 R5
  LOADNIL R10
  LOADNIL R11
  FORGPREP R9
  GETIMPORT R14 K22 [debug.profilebegin]
  LOADK R15 K49 ["Find what UVs are symmetrical"]
  CALL R14 1 0
  MOVE R14 R7
  GETTABLEKS R15 R13 K31 ["uv"]
  CALL R14 1 1
  GETIMPORT R15 K43 [debug.profileend]
  CALL R15 0 0
  LENGTH R15 R14
  JUMPIFNOTEQKN R15 K50 [0] [+58]
  LOADNIL R15
  LOADN R18 0
  GETIMPORT R19 K10 [buffer.len]
  MOVE R20 R2
  CALL R19 1 1
  SUBK R16 R19 K7 [32]
  LOADN R17 32
  FORNPREP R16
  FASTCALL2 BUFFER_READF64 R2 R18 [+5]
  MOVE R20 R2
  MOVE R21 R18
  GETIMPORT R19 K52 [buffer.readf64]
  CALL R19 2 1
  ADDK R22 R18 K53 [8]
  FASTCALL2 BUFFER_READF64 R2 R22 [+4]
  MOVE R21 R2
  GETIMPORT R20 K52 [buffer.readf64]
  CALL R20 2 1
  FASTCALL2 VECTOR R19 R20 [+5]
  MOVE R22 R19
  MOVE R23 R20
  GETIMPORT R21 K38 [Vector3.new]
  CALL R21 2 1
  GETTABLEKS R23 R13 K31 ["uv"]
  LOADK R24 K54 [1E-07]
  NAMECALL R21 R21 K55 ["FuzzyEq"]
  CALL R21 3 1
  JUMPIFNOT R21 [+4]
  LOADN R21 1
  IDIVK R22 R18 K7 [32]
  ADD R15 R21 R22
  JUMP [+1]
  FORNLOOP R16
  MOVE R16 R1
  LOADK R18 K56 ["Couldn't find symmetrical UVs for %*:%* (at %*), was supposed to find it at index %*"]
  GETTABLEKS R20 R13 K29 ["targetName"]
  GETTABLEKS R21 R13 K30 ["vertex"]
  GETTABLEKS R22 R13 K31 ["uv"]
  MOVE R23 R15
  NAMECALL R18 R18 K57 ["format"]
  CALL R18 5 1
  MOVE R17 R18
  CALL R16 1 0
  JUMP [+33]
  GETIMPORT R15 K22 [debug.profilebegin]
  LOADK R16 K58 ["Find points with UV"]
  CALL R15 1 0
  MOVE R15 R8
  MOVE R16 R14
  CALL R15 1 3
  FORGPREP R15
  MOVE R20 R6
  GETTABLEKS R21 R13 K29 ["targetName"]
  GETTABLEKS R22 R13 K30 ["vertex"]
  GETTABLEKS R23 R19 K29 ["targetName"]
  GETTABLEKS R24 R19 K30 ["vertex"]
  CALL R20 4 0
  MOVE R20 R6
  GETTABLEKS R21 R19 K29 ["targetName"]
  GETTABLEKS R22 R19 K30 ["vertex"]
  GETTABLEKS R23 R13 K29 ["targetName"]
  GETTABLEKS R24 R13 K30 ["vertex"]
  CALL R20 4 0
  FORGLOOP R15 2 [-21]
  GETIMPORT R15 K43 [debug.profileend]
  CALL R15 0 0
  FORGLOOP R9 2 [-105]
  GETIMPORT R9 K43 [debug.profileend]
  CALL R9 0 0
  RETURN R4 1

MAIN:
  PREPVARARGS 0
  GETIMPORT R0 K1 [script]
  LOADK R2 K2 ["AvatarCompatibilityPreviewer"]
  NAMECALL R0 R0 K3 ["FindFirstAncestor"]
  CALL R0 2 1
  GETIMPORT R1 K5 [require]
  GETTABLEKS R3 R0 K6 ["Packages"]
  GETTABLEKS R2 R3 K7 ["Dash"]
  CALL R1 1 1
  GETIMPORT R2 K5 [require]
  GETTABLEKS R5 R0 K6 ["Packages"]
  GETTABLEKS R4 R5 K8 ["LuaMeshEditingModule"]
  GETTABLEKS R3 R4 K9 ["Types"]
  CALL R2 1 1
  GETIMPORT R3 K5 [require]
  GETTABLEKS R5 R0 K10 ["Src"]
  GETTABLEKS R4 R5 K9 ["Types"]
  CALL R3 1 1
  GETIMPORT R4 K5 [require]
  GETTABLEKS R7 R0 K10 ["Src"]
  GETTABLEKS R6 R7 K11 ["Util"]
  GETTABLEKS R5 R6 K12 ["binarySearchRange"]
  CALL R4 1 1
  DUPCLOSURE R5 K13 [PROTO_0]
  DUPCLOSURE R6 K14 [PROTO_10]
  CAPTURE VAL R0
  CAPTURE VAL R1
  CAPTURE VAL R4
  RETURN R6 1
