Class Instance : <<<ROOT>>> [NotCreatable] [NotBrowsable]
	Property Instance.Archivable: boolean
	Property Instance.Attributes: string {RobloxSecurity} [Hidden] [ReadOnly] [NotScriptable]
	Property Instance.AttributesReplicate: string {RobloxSecurity} [Hidden] [NotScriptable]
	Property Instance.AttributesSerialize: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property Instance.ClassName: string [ReadOnly]
	Property Instance.DataCost: number {LocalUserSecurity} [Hidden] [ReadOnly] [Deprecated]
	Property Instance.HistoryId: UniqueId {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property Instance.Name: string
	Property Instance.Parent: Instance? [📁 LoadOnly] [NotReplicated]
	Property Instance.PropertyStatusStudio: Enum.PropertyStatus {RobloxSecurity} [Hidden] [ReadOnly] [NotScriptable]
	Property Instance.RobloxLocked: boolean {PluginSecurity} [Hidden]
	Property Instance.SourceAssetId: number {RobloxScriptSecurity} [Hidden]
	Property Instance.Tags: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property Instance.UniqueId: UniqueId {RobloxSecurity} [NotReplicated] [NotScriptable]
	Property Instance.Capabilities: SecurityCapabilities {RobloxScriptSecurity}
	Property Instance.DefinesCapabilities: boolean {RobloxSecurity} [Hidden] [NotScriptable]
	Property Instance.Sandboxed: boolean {RobloxScriptSecurity} [NotReplicated]
	Property Instance.numExpectedDirectChildren: number [Hidden] [NotScriptable]
	Function Instance:AddTag(tag: string) -> ()
	Function Instance:ClearAllChildren() -> ()
	Function Instance:Clone() -> Instance?
	Function Instance:Destroy() -> ()
	Function Instance:FindFirstAncestor(name: string) -> Instance? {🧬Safe}
	Function Instance:FindFirstAncestorOfClass(className: string) -> Instance? {🧬Safe}
	Function Instance:FindFirstAncestorWhichIsA(className: string) -> Instance? {🧬Safe}
	Function Instance:FindFirstChild(name: string, recursive: boolean? = false) -> Instance? {🧬Safe}
	Function Instance:FindFirstChildOfClass(className: string) -> Instance? {🧬Safe}
	Function Instance:FindFirstChildWhichIsA(className: string, recursive: boolean? = false) -> Instance? {🧬Safe}
	Function Instance:FindFirstDescendant(name: string) -> Instance? {🧬Safe}
	Function Instance:GetActor() -> Actor {🧬Safe}
	Function Instance:GetAttribute(attribute: string) -> any {🧬Safe}
	Function Instance:GetAttributeChangedSignal(attribute: string) -> RBXScriptSignal
	Function Instance:GetAttributes() -> { [string]: any } [CustomLuaState] {🧬Safe}
	Function Instance:GetChildren() -> { Instance } {🧬Safe}
	Function Instance:GetDebugId(scopeLength: number? = 4) -> string {PluginSecurity} [NotBrowsable]
	Function Instance:GetDescendants() -> { any } [CustomLuaState] {🧬Safe}
	Function Instance:GetFullName() -> string {🧬Safe}
	Function Instance:GetPropertyChangedSignal(property: string) -> RBXScriptSignal
	Function Instance:GetStyled(name: string) -> any
	Function Instance:GetTags() -> { any } {🧬Safe}
	Function Instance:HasTag(tag: string) -> boolean {🧬Safe}
	Function Instance:IsA(className: string) -> boolean [CustomLuaState] {🧬Safe}
	Function Instance:IsAncestorOf(descendant: Instance) -> boolean {🧬Safe}
	Function Instance:IsDescendantOf(ancestor: Instance) -> boolean {🧬Safe}
	Function Instance:IsPropertyModified(name: string) -> boolean
	Function Instance:Remove() -> () [Deprecated]
	Function Instance:RemoveTag(tag: string) -> ()
	Function Instance:ResetPropertyToDefault(name: string) -> ()
	Function Instance:SetAttribute(attribute: string, value: any) -> ()
	Function Instance:WaitForChild(childName: string, timeOut: number) -> Instance? [CustomLuaState] [CanYield]
	Function Instance:children() -> { Instance } [Deprecated]
	Event Instance.AncestryChanged(child: Instance, parent: Instance)
	Event Instance.AttributeChanged(attribute: string)
	Event Instance.Changed(property: string)
	Event Instance.ChildAdded(child: Instance)
	Event Instance.ChildRemoved(child: Instance)
	Event Instance.DescendantAdded(descendant: Instance)
	Event Instance.DescendantRemoving(descendant: Instance)
	Event Instance.Destroying()
Class AccessoryDescription : Instance
	Property AccessoryDescription.AccessoryType: Enum.AccessoryType
	Property AccessoryDescription.AssetId: number
	Property AccessoryDescription.Instance: Instance?
	Property AccessoryDescription.IsLayered: boolean
	Property AccessoryDescription.Order: number
	Property AccessoryDescription.Position: Vector3
	Property AccessoryDescription.Puffiness: number
	Property AccessoryDescription.Rotation: Vector3
	Property AccessoryDescription.Scale: Vector3
	Function AccessoryDescription:GetAppliedInstance() -> Instance?
Class AccountService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AccountService:DeviceAccessTokenAvailable() -> boolean {RobloxScriptSecurity}
	Function AccountService:DeviceIntegrityAvailable() -> boolean {RobloxScriptSecurity}
	Function AccountService:GetCredentialsHeaders() -> string {RobloxScriptSecurity} [Yields]
	Function AccountService:GetDeviceAccessToken() -> string {RobloxScriptSecurity} [Yields]
	Function AccountService:GetDeviceIntegrityToken(data: string) -> string {RobloxScriptSecurity}
	Function AccountService:GetDeviceIntegrityTokenYield(data: string) -> string {RobloxScriptSecurity} [Yields]
Class Accoutrement : Instance
	Property Accoutrement.BackendAccoutrementState: number [Hidden] [NotScriptable]
	Property Accoutrement.AttachmentForward: Vector3 [Hidden] [NotReplicated]
	Property Accoutrement.AttachmentPoint: CFrame
	Property Accoutrement.AttachmentPos: Vector3 [Hidden] [NotReplicated]
	Property Accoutrement.AttachmentRight: Vector3 [Hidden] [NotReplicated]
	Property Accoutrement.AttachmentUp: Vector3 [Hidden] [NotReplicated]
	Event Accoutrement.ServerEquipAccoutrement(character: Instance) {RobloxSecurity} [Hidden]
	Event Accoutrement.ServerUnequipAccoutrement(oldCharacter: Instance) {RobloxSecurity} [Hidden]
Class Accessory : Accoutrement
	Property Accessory.AccessoryType: Enum.AccessoryType
Class Hat : Accoutrement [Deprecated]
Class AchievementService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AchievementService:GrantAchievement(achievementName: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function AchievementService:HasAchieved(achievementName: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function AchievementService:IsAvailable() -> boolean {RobloxScriptSecurity}
Class AdPortal : Instance
	Property AdPortal.Status: Enum.AdUnitStatus [ReadOnly]
	Property AdPortal.PortalInvalidReason: string [ReadOnly] [NotScriptable]
	Property AdPortal.PortalVersion: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function AdPortal:TeleportConfirmed(placeId: number, player: Player) -> () {RobloxScriptSecurity}
	Function AdPortal:TeleportRejected(shouldCooldown: boolean, rejectedByDistance: boolean) -> () {RobloxScriptSecurity}
Class AdService : Instance [NotCreatable] [Service]
	Function AdService:GetAdTeleportInfo() -> ...any {RobloxScriptSecurity}
	Function AdService:GetReportAdInfo() -> { any } {RobloxScriptSecurity}
	Function AdService:HideEudsaDisclosure() -> () {RobloxScriptSecurity}
	Function AdService:ReturnToPublisherExperience(adTeleportMethod: Enum.AdTeleportMethod) -> () {RobloxScriptSecurity}
	Function AdService:SetAdGuiInteractivityHandlerInitialized() -> () {RobloxScriptSecurity}
	Function AdService:ShowVideoAd() -> () [Deprecated]
	Event AdService.AdTeleportEnded() {RobloxScriptSecurity}
	Event AdService.AdTeleportInitiated() {RobloxScriptSecurity}
	Event AdService.PortalPrompt(destinationId: number, portal: Instance, requiresNoButton: boolean) {RobloxScriptSecurity}
	Event AdService.ReportImpressionSignal(ad_instance_name: string, encrypted_ad_tracking_data: string, encryption_metadata: string) {RobloxSecurity} [Hidden]
	Event AdService.ReportTeleportSignal(ad_instance_name: string, encrypted_ad_tracking_data: string, encryption_metadata: string, teleport_type: string, teleport_source_universe_id: number, teleport_source_place_id: number, teleport_dest_place_id: number) {RobloxSecurity} [Hidden]
	Event AdService.ServeAdResponseSignal(uuid: string, response: string, isError: boolean) {RobloxSecurity} [Hidden]
	Event AdService.ServeAdSignal(uuid: string, request: string) {RobloxSecurity} [Hidden]
	Event AdService.ShowDynamicEudsaDisclosure(advertiserName: string, payerName: string) {RobloxScriptSecurity}
	Event AdService.ShowStaticEudsaDisclosure() {RobloxScriptSecurity}
	Event AdService.VideoAdClosed(adShown: boolean) [Deprecated]
	Event AdService.adGuiRegisterUI(adGui: Instance) {RobloxScriptSecurity}
Class AdvancedDragger : Instance
Class AnalyticsService : Instance [NotCreatable] [Service] [NotReplicated]
	Property AnalyticsService.ApiKey: string {LocalUserSecurity} [Deprecated]
	Function AnalyticsService:FireCustomEvent(player: Instance, eventCategory: string, customData: any) -> () [Deprecated]
	Function AnalyticsService:FireEvent(category: string, value: any) -> () [Deprecated]
	Function AnalyticsService:FireInGameEconomyEvent(player: Instance, itemName: string, economyAction: Enum.AnalyticsEconomyAction, itemCategory: string, amount: number, currency: string, location: any, customData: any) -> () [Deprecated]
	Function AnalyticsService:FireLogEvent(player: Instance, logLevel: Enum.AnalyticsLogLevel, message: string, debugInfo: any, customData: any) -> () [Deprecated]
	Function AnalyticsService:FirePlayerProgressionEvent(player: Instance, category: string, progressionStatus: Enum.AnalyticsProgressionStatus, location: any, statistics: any, customData: any) -> () [Deprecated]
	Function AnalyticsService:LogCustomEvent(player: Player, eventName: string, value: number? = 1, customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogEconomyEvent(player: Player, flowType: Enum.AnalyticsEconomyFlowType, currencyType: string, amount: number, endingBalance: number, transactionType: string, itemSku: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogFunnelStepEvent(player: Player, funnelName: string, funnelSessionId: string? = "", step: number? = 1, stepName: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogOnboardingFunnelStepEvent(player: Player, step: number, stepName: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogProgressionCompleteEvent(player: Player, progressionPathName: string, level: number, levelName: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogProgressionEvent(player: Player, progressionPathName: string, status: Enum.AnalyticsProgressionType, level: number, levelName: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogProgressionFailEvent(player: Player, progressionPathName: string, level: number, levelName: string? = "", customFields: { [string]: any }? = nil) -> ()
	Function AnalyticsService:LogProgressionStartEvent(player: Player, progressionPathName: string, level: number, levelName: string? = "", customFields: { [string]: any }? = nil) -> ()
Class Animation : Instance
	Property Animation.AnimationId: ContentId
Class AnimationClip : Instance [NotCreatable]
	Property AnimationClip.Guid: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property AnimationClip.GuidBinaryString: BinaryString {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property AnimationClip.Loop: boolean
	Property AnimationClip.Priority: Enum.AnimationPriority
Class CurveAnimation : AnimationClip
Class KeyframeSequence : AnimationClip
	Property KeyframeSequence.AuthoredHipHeight: number {PluginSecurity} [Hidden]
	Function KeyframeSequence:AddKeyframe(keyframe: Instance) -> ()
	Function KeyframeSequence:GetKeyframes() -> { Instance }
	Function KeyframeSequence:RemoveKeyframe(keyframe: Instance) -> ()
Class AnimationClipProvider : Instance [NotCreatable] [Service] [NotReplicated]
	Function AnimationClipProvider:GetAnimationClip(assetId: ContentId) -> AnimationClip {PluginSecurity} [Deprecated]
	Function AnimationClipProvider:GetAnimationClipAsync(assetId: ContentId) -> AnimationClip [Yields]
	Function AnimationClipProvider:GetAnimationClipById(assetId: number, useCache: boolean) -> AnimationClip {PluginSecurity} [Deprecated]
	Function AnimationClipProvider:GetAnimations(userId: number) -> Instance? [Yields]
	Function AnimationClipProvider:GetClipEvaluatorAsync(assetId: ContentId) -> ClipEvaluator [Yields]
	Function AnimationClipProvider:GetMemStats() -> { [string]: any } {RobloxScriptSecurity}
	Function AnimationClipProvider:RegisterActiveAnimationClip(animationClip: AnimationClip) -> ContentId
	Function AnimationClipProvider:RegisterAnimationClip(animationClip: AnimationClip) -> ContentId
Class AnimationController : Instance [Deprecated]
	Function AnimationController:GetPlayingAnimationTracks() -> { any } [Deprecated]
	Function AnimationController:LoadAnimation(animation: Animation) -> AnimationTrack [Deprecated]
	Event AnimationController.AnimationPlayed(animationTrack: AnimationTrack) [Deprecated]
Class AnimationFromVideoCreatorService : Instance [NotCreatable] [Service]
	Function AnimationFromVideoCreatorService:CreateJob(filePath: string) -> string {RobloxScriptSecurity} [Yields]
	Function AnimationFromVideoCreatorService:DownloadJobResult(jobId: string, outputFilePath: string) -> string {RobloxScriptSecurity} [Yields]
	Function AnimationFromVideoCreatorService:FullProcess(videoFilePath: string, progressCallback: (...any) -> ...any) -> string {RobloxScriptSecurity} [Yields]
	Function AnimationFromVideoCreatorService:GetJobStatus(jobId: string) -> string {RobloxScriptSecurity} [Yields]
Class AnimationFromVideoCreatorStudioService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AnimationFromVideoCreatorStudioService:CreateAnimationByUploadingVideo(progressCallback: (...any) -> ...any) -> string {RobloxScriptSecurity} [Yields]
	Function AnimationFromVideoCreatorStudioService:ImportVideoWithPrompt() -> string {RobloxScriptSecurity} [Yields]
	Function AnimationFromVideoCreatorStudioService:IsAgeRestricted() -> boolean {RobloxScriptSecurity}
Class AnimationRigData : Instance
	Property AnimationRigData.label: BinaryString [Hidden] [NotScriptable]
	Property AnimationRigData.name: BinaryString [Hidden] [NotScriptable]
	Property AnimationRigData.parent: BinaryString [Hidden] [NotScriptable]
	Property AnimationRigData.postTransform: BinaryString [Hidden] [NotScriptable]
	Property AnimationRigData.preTransform: BinaryString [Hidden] [NotScriptable]
	Property AnimationRigData.transform: BinaryString [Hidden] [NotScriptable]
	Function AnimationRigData:LoadFromHumanoid(humanoid: Instance) -> boolean {RobloxScriptSecurity}
Class AnimationStreamTrack : Instance [NotCreatable] [NotReplicated]
	Property AnimationStreamTrack.Animation: TrackerStreamAnimation? [Hidden] [ReadOnly]
	Property AnimationStreamTrack.FACSDataLod: Enum.FACSDataLod [Hidden] [ReadOnly]
	Property AnimationStreamTrack.IsPlaying: boolean [Hidden] [ReadOnly]
	Property AnimationStreamTrack.Priority: Enum.AnimationPriority [Hidden] [NotReplicated]
	Property AnimationStreamTrack.WeightCurrent: number [Hidden] [ReadOnly]
	Property AnimationStreamTrack.WeightTarget: number [Hidden] [ReadOnly]
	Function AnimationStreamTrack:AdjustWeight(weight: number? = 1, fadeTime: number? = 0.100000001) -> () {RobloxScriptSecurity}
	Function AnimationStreamTrack:GetActive() -> boolean {RobloxScriptSecurity}
	Function AnimationStreamTrack:GetTrackerData() -> ...any {RobloxScriptSecurity}
	Function AnimationStreamTrack:Play(fadeTime: number? = 0.100000001, weight: number? = 1) -> () {RobloxScriptSecurity}
	Function AnimationStreamTrack:Stop(fadeTime: number? = 0.100000001) -> () {RobloxScriptSecurity}
	Function AnimationStreamTrack:TogglePause(paused: boolean) -> () {RobloxScriptSecurity}
	Event AnimationStreamTrack.Stopped() {RobloxScriptSecurity}
Class AnimationTrack : Instance [NotCreatable]
	Property AnimationTrack.Animation: Animation? [ReadOnly]
	Property AnimationTrack.IsPlaying: boolean [ReadOnly]
	Property AnimationTrack.Length: number [ReadOnly]
	Property AnimationTrack.Looped: boolean
	Property AnimationTrack.Priority: Enum.AnimationPriority
	Property AnimationTrack.Speed: number [ReadOnly]
	Property AnimationTrack.TimePosition: number [📁 LoadOnly] [NotReplicated]
	Property AnimationTrack.WeightCurrent: number [ReadOnly]
	Property AnimationTrack.WeightTarget: number [ReadOnly]
	Function AnimationTrack:AdjustSpeed(speed: number? = 1) -> () [CustomLuaState]
	Function AnimationTrack:AdjustWeight(weight: number? = 1, fadeTime: number? = 0.100000001) -> () [CustomLuaState]
	Function AnimationTrack:GetMarkerReachedSignal(name: string) -> RBXScriptSignal
	Function AnimationTrack:GetTimeOfKeyframe(keyframeName: string) -> number
	Function AnimationTrack:Play(fadeTime: number? = 0.100000001, weight: number? = 1, speed: number? = 1) -> () [CustomLuaState]
	Function AnimationTrack:Stop(fadeTime: number? = 0.100000001) -> () [CustomLuaState]
	Event AnimationTrack.DidLoop()
	Event AnimationTrack.Ended()
	Event AnimationTrack.KeyframeReached(keyframeName: string)
	Event AnimationTrack.Stopped()
Class Animator : Instance
	Property Animator.EvaluationThrottled: boolean [ReadOnly] [NotBrowsable]
	Property Animator.PreferLodEnabled: boolean
	Property Animator.RootMotion: CFrame [ReadOnly] [NotBrowsable]
	Property Animator.RootMotionWeight: number [ReadOnly] [NotBrowsable]
	Property Animator.FacsReplicationData: FacsReplicationData {RobloxSecurity} [Hidden] [NotScriptable]
	Function Animator:ApplyJointVelocities(motors: any) -> ()
	Function Animator:GetPlayingAnimationTracks() -> { any }
	Function Animator:GetPlayingAnimationTracksCoreScript() -> { any } {RobloxScriptSecurity}
	Function Animator:LoadAnimation(animation: Animation) -> AnimationTrack
	Function Animator:LoadAnimationCoreScript(animation: Animation) -> AnimationTrack {RobloxScriptSecurity}
	Function Animator:LoadStreamAnimation(animation: TrackerStreamAnimation) -> AnimationStreamTrack {RobloxScriptSecurity}
	Function Animator:LoadStreamAnimationForSelfieView_deprecated(animation: TrackerStreamAnimation, player: Player) -> AnimationStreamTrack {RobloxScriptSecurity}
	Function Animator:LoadStreamAnimationV2(animation: TrackerStreamAnimation, player: Player? = nil, shouldLookupPlayer: boolean? = true, shouldReplicate: boolean? = true) -> AnimationStreamTrack {RobloxScriptSecurity}
	Function Animator:RegisterEvaluationParallelCallback(callback: (...any) -> ...any) -> ()
	Function Animator:StepAnimations(deltaTime: number) -> () {PluginSecurity}
	Function Animator:SynchronizeWith(otherAnimator: Animator) -> () {RobloxScriptSecurity}
	Event Animator.AnimationPlayed(animationTrack: AnimationTrack)
	Event Animator.AnimationPlayedCoreScript(animationTrack: AnimationTrack) {RobloxScriptSecurity}
	Event Animator.AnimationStreamTrackPlayed(animationTrack: AnimationStreamTrack) {RobloxScriptSecurity}
	Event Animator.OnCombinedUpdate(animation: ContentId, playState: boolean, fadeTime: number, weight: number, speed: number, timePosition: number, priority: Enum.AnimationPriority, looping: boolean, valuesUpdated: number) {RobloxSecurity} [Hidden]
	Event Animator.OnCombinedUpdate2(animation: ContentId, playState: boolean, fadeTime: number, weight: number, speed: number, timePosition: number, priority: Enum.AnimationPriority, valuesUpdated: number) {RobloxSecurity} [Hidden]
	Event Animator.OnStreamingUpdated(fadeTime: number, weight: number, priority: Enum.AnimationPriority, valuesUpdated: number) {RobloxSecurity} [Hidden]
	Event Animator.OnStreamingUpdated2(fadeTime: number, weight: number, priority: Enum.AnimationPriority, maskEnabled: boolean, valuesUpdated: number) {RobloxSecurity} [Hidden]
	Event Animator.StreamSyncRequest(player: Player) {RobloxSecurity} [Hidden]
Class Annotation : Instance
	Property Annotation.AuthorColor3: Color3 {RobloxScriptSecurity} [Hidden]
	Property Annotation.AuthorId: number {RobloxScriptSecurity} [Hidden]
	Property Annotation.Contents: string {RobloxScriptSecurity} [Hidden]
	Property Annotation.CreationTimeUnix: number {RobloxScriptSecurity} [Hidden]
	Property Annotation.LastModifiedTimeUnix: number {RobloxScriptSecurity} [Hidden]
	Property Annotation.LoadingReplies: boolean {RobloxScriptSecurity} [Hidden]
	Property Annotation.ReplyCount: number {RobloxScriptSecurity} [Hidden]
	Property Annotation.Resolved: boolean {RobloxScriptSecurity} [Hidden]
	Property Annotation.TaggedUsers: string {RobloxScriptSecurity} [Hidden]
	Function Annotation:GetStringUniqueId() -> string {RobloxScriptSecurity}
Class WorkspaceAnnotation : Annotation
	Property WorkspaceAnnotation.Adornee: PVInstance? {RobloxScriptSecurity} [Hidden]
	Property WorkspaceAnnotation.Position: CFrame {RobloxScriptSecurity} [Hidden]
Class AnnotationsService : Instance [NotCreatable] [Service]
	Property AnnotationsService.Hovered: Annotation? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property AnnotationsService.Mode: Enum.AnnotationEditingMode {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property AnnotationsService.Selected: Annotation? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function AnnotationsService:CreateAnnotation(annotation: Annotation) -> () {RobloxScriptSecurity}
	Function AnnotationsService:DeleteAnnotation(annotation: Annotation) -> () {RobloxScriptSecurity}
	Function AnnotationsService:GetAnnotationThreads() -> { Instance } {RobloxScriptSecurity}
	Function AnnotationsService:LoadAnnotationReplies(annotation: Annotation, count: number? = 25) -> () {RobloxScriptSecurity}
	Function AnnotationsService:ResolveAnnotation(userId: number, annotation: Annotation, resolved: boolean) -> () {RobloxScriptSecurity}
	Event AnnotationsService.AnnotationAdded(annotation: Annotation, parentId: string) {RobloxScriptSecurity}
	Event AnnotationsService.AnnotationDeleted(annotation: Annotation) {RobloxScriptSecurity}
	Event AnnotationsService.AnnotationResolved(userId: number, annotation: Annotation, resolved: boolean) {RobloxScriptSecurity}
	Event AnnotationsService.ServerLoadAnnotationReplies(annotation: Annotation) {RobloxSecurity}
Class AppLifecycleObserverService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AppLifecycleObserverService:GetCurrentState() -> Enum.AppLifecycleManagerState {RobloxScriptSecurity}
	Function AppLifecycleObserverService:IsDidDetachSupported() -> boolean {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnBecomeActive() {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnDetach() {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnHide() {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnResignActive() {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnStart() {RobloxScriptSecurity}
	Event AppLifecycleObserverService.OnUnhide() {RobloxScriptSecurity}
Class AppUpdateService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AppUpdateService:CanPerformBinaryUpdate() -> boolean {RobloxScriptSecurity}
	Function AppUpdateService:CheckForUpdate(handler: ((...any) -> ...any)? = nil) -> () {RobloxScriptSecurity}
	Function AppUpdateService:PerformManagedUpdate() -> boolean {RobloxScriptSecurity}
Class AssetCounterService : Instance [NotCreatable] [Service] [NotReplicated]
Class AssetDeliveryProxy : Instance [NotCreatable] [Service] [NotReplicated]
	Property AssetDeliveryProxy.Interface: string
	Property AssetDeliveryProxy.Port: number
	Property AssetDeliveryProxy.StartServer: boolean
Class AssetImportService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AssetImportService:GetAllPresets() -> { [string]: any } {RobloxScriptSecurity}
	Function AssetImportService:GetPreset(name: string) -> { [string]: any } {RobloxScriptSecurity}
	Function AssetImportService:PickImageFileWithPrompt() -> string {RobloxScriptSecurity} [Yields]
	Function AssetImportService:PickMeshFileWithPrompt() -> string {RobloxScriptSecurity} [Yields]
	Function AssetImportService:PickMultipleFilesWithPrompt() -> { any } {RobloxScriptSecurity} [Yields]
	Function AssetImportService:RemovePreset(name: string) -> () {RobloxScriptSecurity}
	Function AssetImportService:SavePreset(name: string, preset: { [string]: any }) -> boolean {RobloxScriptSecurity}
	Function AssetImportService:StartSessionWithPath(filePath: string) -> AssetImportSession {RobloxScriptSecurity}
	Function AssetImportService:StartSessionWithPathAsync(filePath: string) -> AssetImportSession {RobloxScriptSecurity} [Yields]
	Function AssetImportService:StartSessionWithPrompt() -> AssetImportSession {RobloxScriptSecurity} [Yields]
Class AssetImportSession : Instance [NotCreatable] [NotReplicated]
	Function AssetImportSession:ApplyPreset(preset: { [string]: any }) -> () {RobloxScriptSecurity}
	Function AssetImportSession:Cancel() -> () {RobloxScriptSecurity}
	Function AssetImportSession:CreatePresetFromData(importData: Instance) -> { [string]: any } {RobloxScriptSecurity}
	Function AssetImportSession:GetFilename() -> string {RobloxScriptSecurity}
	Function AssetImportSession:GetImportTree() -> Instance? {RobloxScriptSecurity}
	Function AssetImportSession:GetRigVisualization(importDataInstance: Instance) -> Instance? {RobloxScriptSecurity}
	Function AssetImportSession:GetStatuses() -> { [string]: any } {RobloxScriptSecurity}
	Function AssetImportSession:HasAnimation() -> boolean {RobloxScriptSecurity}
	Function AssetImportSession:IsAvatar() -> boolean {RobloxScriptSecurity}
	Function AssetImportSession:IsGltf() -> boolean {RobloxScriptSecurity}
	Function AssetImportSession:IsR15() -> boolean {RobloxScriptSecurity}
	Function AssetImportSession:Reset() -> () {RobloxScriptSecurity}
	Function AssetImportSession:Upload() -> () {RobloxScriptSecurity}
	Function AssetImportSession:usesCustomRestPoseLua() -> boolean {RobloxScriptSecurity}
	Event AssetImportSession.UploadComplete(results: { [string]: any })
	Event AssetImportSession.UploadProgress(progressRatio: number)
Class AssetManagerService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AssetManagerService:AddNewPlace() -> number {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:CreateAlias(assetType: number, assetId: number, aliasName: string) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:DeleteAlias(aliasName: string) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:GetMeshIdFromAliasName(aliasName: string) -> number {RobloxScriptSecurity}
	Function AssetManagerService:GetMeshIdFromAssetId(assetId: number) -> number {RobloxScriptSecurity}
	Function AssetManagerService:GetTextureIdFromAliasName(aliasName: string) -> number {RobloxScriptSecurity}
	Function AssetManagerService:GetTextureIdFromAssetId(assetId: number) -> number {RobloxScriptSecurity}
	Function AssetManagerService:InsertAudio(assetId: number, assetName: string) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertImage(assetId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertImages(assetIds: { any }) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertMesh(aliasName: string, insertWithLocation: boolean, sourceAssetId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertMeshesWithLocation(aliasNames: { any }, meshIds: { any }) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertModel(modelId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertPackage(packageId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:InsertVideo(assetId: number, assetName: string) -> () {RobloxScriptSecurity}
	Function AssetManagerService:OpenPlace(placeId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:RemovePlace(placeId: number) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:RenameAlias(assetType: number, assetId: number, oldAliasName: string, newAliasName: string) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:RenameModel(modelId: number, newName: string) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:RenamePlace(placeId: number, newName: string) -> () {RobloxScriptSecurity} [Yields]
	Function AssetManagerService:ShowPackageDetails(packageId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:UpdateAllPackages(packageId: number) -> () {RobloxScriptSecurity}
	Function AssetManagerService:ViewPackageOnWebsite(packageId: number) -> () {RobloxScriptSecurity}
	Event AssetManagerService.AssetImportedSignal(assetType: Enum.AssetType, assetId: string, assetName: number) {RobloxScriptSecurity}
	Event AssetManagerService.ImportSessionFinished() {RobloxScriptSecurity}
	Event AssetManagerService.ImportSessionStarted() {RobloxScriptSecurity}
Class AssetPatchSettings : Instance [NotCreatable] [NotReplicated]
	Property AssetPatchSettings.ContentId: string
	Property AssetPatchSettings.OutputPath: string
	Property AssetPatchSettings.PatchId: string
Class AssetService : Instance [NotCreatable] [Service]
	Function AssetService:CreateEditableImageAsync(textureId: ContentId) -> EditableImage [Yields]
	Function AssetService:CreateEditableMeshAsync(meshId: ContentId) -> EditableMesh [Yields]
	Function AssetService:CreateEditableMeshFromPartAsync(meshPart: Instance) -> EditableMesh [Yields]
	Function AssetService:CreateEditableMeshStripSkinningAsync(meshId: ContentId) -> EditableMesh {RobloxScriptSecurity} [Yields]
	Function AssetService:CreateMeshPartAsync(meshId: ContentId, options: { [string]: any }? = nil) -> MeshPart {PluginSecurity} [Yields]
	Function AssetService:CreatePlaceAsync(placeName: string, templatePlaceID: number, description: string? = "") -> number [Yields]
	Function AssetService:CreatePlaceInPlayerInventoryAsync(player: Instance, placeName: string, templatePlaceID: number, description: string? = "") -> number [Yields]
	Function AssetService:DeserializeInstance(serializedInstance: string) -> Instance? {RobloxScriptSecurity}
	Function AssetService:GetAssetIdsForPackage(packageAssetId: number) -> { any } [Yields]
	Function AssetService:GetAudioMetadataAsync(idList: { any }) -> { any } [Yields]
	Function AssetService:GetBundleDetailsAsync(bundleId: number) -> { [string]: any } [Yields]
	Function AssetService:GetBundleDetailsSync(bundleId: number) -> { [string]: any } {RobloxScriptSecurity}
	Function AssetService:GetCreatorAssetID(creationID: number) -> number [Yields] [Deprecated]
	Function AssetService:GetGamePlacesAsync() -> Instance? [Yields]
	Function AssetService:PromptCreateAssetAsync(player: Player, instance: Instance, assetType: Enum.AssetType) -> ...any [Yields]
	Function AssetService:PromptImportAnimationClipFromVideoAsync(player: Player, progressCallback: (...any) -> ...any) -> ...any [Yields]
	Function AssetService:RegisterUGCValidationFunction(function: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function AssetService:SavePlaceAsync() -> () [Yields]
	Function AssetService:SearchAudio(searchParameters: AudioSearchParams) -> AudioPages [Yields]
	Event AssetService.AudioMetadataFailedResponse(requestid: number) {RobloxScriptSecurity}
	Event AssetService.AudioMetadataRequest(requestid: number, request: { any }) {RobloxScriptSecurity}
	Event AssetService.AudioMetadataResponse(requestid: number, response: { any }) {RobloxScriptSecurity}
	Event AssetService.OpenCreateResultModal(resultType: Enum.PromptCreateAssetResult) {RobloxScriptSecurity}
	Event AssetService.OpenPublishResultModal(resultType: Enum.PromptPublishAssetResult) {RobloxScriptSecurity}
Class Atmosphere : Instance
	Property Atmosphere.Density: number
	Property Atmosphere.Offset: number
	Property Atmosphere.Color: Color3
	Property Atmosphere.Decay: Color3
	Property Atmosphere.Glare: number
	Property Atmosphere.Haze: number
Class Attachment : Instance
	Property Attachment.Visible: boolean
	Property Attachment.Axis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property Attachment.SecondaryAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property Attachment.WorldAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property Attachment.WorldCFrame: CFrame [📁 LoadOnly] [NotReplicated]
	Property Attachment.WorldOrientation: Vector3 [Hidden] [NotReplicated]
	Property Attachment.WorldPosition: Vector3 [Hidden] [NotReplicated]
	Property Attachment.WorldRotation: Vector3 [Hidden] [ReadOnly] [Deprecated]
	Property Attachment.WorldSecondaryAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property Attachment.CFrame: CFrame
	Property Attachment.Orientation: Vector3 [Hidden] [NotReplicated]
	Property Attachment.Position: Vector3 [Hidden] [NotReplicated]
	Property Attachment.Rotation: Vector3 [Hidden] [NotReplicated] [Deprecated]
	Function Attachment:GetAxis() -> Vector3 [Deprecated]
	Function Attachment:GetConstraints() -> { Instance }
	Function Attachment:GetSecondaryAxis() -> Vector3 [Deprecated]
	Function Attachment:SetAxis(axis: Vector3) -> () [Deprecated]
	Function Attachment:SetSecondaryAxis(axis: Vector3) -> () [Deprecated]
Class Bone : Attachment
	Property Bone.TransformedCFrame: CFrame [Hidden] [ReadOnly]
	Property Bone.TransformedWorldCFrame: CFrame [ReadOnly] {🧬Unsafe}
	Property Bone.Transform: CFrame [📁 LoadOnly] [NotReplicated]
Class AudioAnalyzer : Instance
	Property AudioAnalyzer.PeakLevel: number [ReadOnly]
	Property AudioAnalyzer.RmsLevel: number [ReadOnly]
	Property AudioAnalyzer.SpectrumEnabled: boolean
	Function AudioAnalyzer:GetConnectedWires(pin: string) -> { Instance }
	Function AudioAnalyzer:GetSpectrum() -> { any } [CustomLuaState]
Class AudioChorus : Instance
	Property AudioChorus.Bypass: boolean
	Property AudioChorus.Depth: number
	Property AudioChorus.Mix: number
	Property AudioChorus.Rate: number
	Function AudioChorus:GetConnectedWires(pin: string) -> { Instance }
Class AudioCompressor : Instance
	Property AudioCompressor.Attack: number
	Property AudioCompressor.Bypass: boolean
	Property AudioCompressor.MakeupGain: number
	Property AudioCompressor.Ratio: number
	Property AudioCompressor.Release: number
	Property AudioCompressor.Threshold: number
	Function AudioCompressor:GetConnectedWires(pin: string) -> { Instance }
Class AudioDeviceInput : Instance
	Property AudioDeviceInput.AccessList: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property AudioDeviceInput.AccessType: Enum.AccessModifierType
	Property AudioDeviceInput.Active: boolean {✏️RobloxScriptSecurity}
	Property AudioDeviceInput.IsReady: boolean {RobloxScriptSecurity} [ReadOnly]
	Property AudioDeviceInput.Muted: boolean
	Property AudioDeviceInput.MutedByLocalUser: boolean {RobloxScriptSecurity} [NotReplicated]
	Property AudioDeviceInput.Player: Player?
	Property AudioDeviceInput.Volume: number
	Function AudioDeviceInput:GetConnectedWires(pin: string) -> { Instance }
	Function AudioDeviceInput:GetUserIdAccessList() -> { any }
	Function AudioDeviceInput:SetUserIdAccessList(userIds: { any }) -> ()
Class AudioDeviceOutput : Instance
	Property AudioDeviceOutput.Player: Player?
	Function AudioDeviceOutput:GetConnectedWires(pin: string) -> { Instance }
Class AudioDistortion : Instance
	Property AudioDistortion.Bypass: boolean
	Property AudioDistortion.Level: number
	Function AudioDistortion:GetConnectedWires(pin: string) -> { Instance }
Class AudioEcho : Instance
	Property AudioEcho.Bypass: boolean
	Property AudioEcho.DelayTime: number
	Property AudioEcho.DryLevel: number
	Property AudioEcho.Feedback: number
	Property AudioEcho.WetLevel: number
	Function AudioEcho:GetConnectedWires(pin: string) -> { Instance }
Class AudioEmitter : Instance
	Property AudioEmitter.DistanceAttenuation: BinaryString {RobloxSecurity}
	Property AudioEmitter.AudioInteractionGroup: string
	Function AudioEmitter:GetAudibilityFor(listener: AudioListener) -> number {RobloxScriptSecurity}
	Function AudioEmitter:GetConnectedWires(pin: string) -> { Instance }
	Function AudioEmitter:GetDistanceAttenuation() -> { [string]: any } [CustomLuaState]
	Function AudioEmitter:GetInteractingListeners() -> { Instance }
	Function AudioEmitter:SetDistanceAttenuation(curve: { [string]: any }) -> () [CustomLuaState]
Class AudioEqualizer : Instance
	Property AudioEqualizer.Bypass: boolean
	Property AudioEqualizer.HighGain: number
	Property AudioEqualizer.LowGain: number
	Property AudioEqualizer.MidGain: number
	Property AudioEqualizer.MidRange: NumberRange
	Property AudioEqualizer.Editor: boolean {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Function AudioEqualizer:GetConnectedWires(pin: string) -> { Instance }
Class AudioFader : Instance
	Property AudioFader.Bypass: boolean
	Property AudioFader.Volume: number
	Function AudioFader:GetConnectedWires(pin: string) -> { Instance }
Class AudioFilter : Instance
	Property AudioFilter.Bypass: boolean
	Property AudioFilter.FilterType: Enum.AudioFilterType
	Property AudioFilter.Frequency: number
	Property AudioFilter.Gain: number
	Property AudioFilter.Q: number
	Property AudioFilter.Editor: boolean {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Function AudioFilter:GetConnectedWires(pin: string) -> { Instance }
	Function AudioFilter:GetGainAt(frequency: number) -> number
Class AudioFlanger : Instance
	Property AudioFlanger.Bypass: boolean
	Property AudioFlanger.Depth: number
	Property AudioFlanger.Mix: number
	Property AudioFlanger.Rate: number
	Function AudioFlanger:GetConnectedWires(pin: string) -> { Instance }
Class AudioFocusService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AudioFocusService:AcquireFocus(contextId: number) -> boolean {RobloxScriptSecurity}
	Function AudioFocusService:GetFocusedContextId() -> number {RobloxScriptSecurity}
	Function AudioFocusService:GetRegisteredContexts() -> { any } {RobloxScriptSecurity}
	Function AudioFocusService:RegisterContextIdFromLua(contextId: number) -> () {RobloxScriptSecurity}
	Function AudioFocusService:RequestFocus(contextId: number, priority: number) -> boolean {RobloxScriptSecurity}
	Event AudioFocusService.OnContextRegistered(contextId: number) {RobloxScriptSecurity}
	Event AudioFocusService.OnContextUnregistered(contextId: number) {RobloxScriptSecurity}
	Event AudioFocusService.OnDeafenVoiceAudio(contextId: number) {RobloxScriptSecurity}
	Event AudioFocusService.OnUndeafenVoiceAudio(contextId: number) {RobloxScriptSecurity}
Class AudioLimiter : Instance
	Property AudioLimiter.Bypass: boolean
	Property AudioLimiter.MaxLevel: number
	Property AudioLimiter.Release: number
	Function AudioLimiter:GetConnectedWires(pin: string) -> { Instance }
Class AudioListener : Instance
	Property AudioListener.AudioInteractionGroup: string
	Property AudioListener.DistanceAttenuation: BinaryString {RobloxSecurity}
	Function AudioListener:GetAudibilityOf(emitter: AudioEmitter) -> number {RobloxScriptSecurity}
	Function AudioListener:GetConnectedWires(pin: string) -> { Instance }
	Function AudioListener:GetDistanceAttenuation() -> { [string]: any } [CustomLuaState]
	Function AudioListener:GetInteractingEmitters() -> { Instance }
	Function AudioListener:SetDistanceAttenuation(curve: { [string]: any }) -> () [CustomLuaState]
Class AudioPitchShifter : Instance
	Property AudioPitchShifter.Bypass: boolean
	Property AudioPitchShifter.Pitch: number
	Function AudioPitchShifter:GetConnectedWires(pin: string) -> { Instance }
Class AudioPlayer : Instance
	Property AudioPlayer.Asset: ContentId [📁 LoadOnly] [Hidden] [NotScriptable]
	Property AudioPlayer.AssetId: string
	Property AudioPlayer.AutoLoad: boolean
	Property AudioPlayer.IsReady: boolean [ReadOnly]
	Property AudioPlayer.TimeLength: number [ReadOnly]
	Property AudioPlayer.IsPlaying: boolean {✏️RobloxSecurity}
	Property AudioPlayer.Looping: boolean
	Property AudioPlayer.PlaybackSpeed: number
	Property AudioPlayer.TimePosition: number
	Property AudioPlayer.LoopRegion: NumberRange
	Property AudioPlayer.PlaybackRegion: NumberRange
	Property AudioPlayer.Volume: number
	Function AudioPlayer:GetConnectedWires(pin: string) -> { Instance }
	Function AudioPlayer:Play() -> ()
	Function AudioPlayer:Stop() -> ()
	Event AudioPlayer.Ended()
	Event AudioPlayer.Looped()
Class AudioReverb : Instance
	Property AudioReverb.Bypass: boolean
	Property AudioReverb.DecayRatio: number
	Property AudioReverb.DecayTime: number
	Property AudioReverb.Density: number
	Property AudioReverb.Diffusion: number
	Property AudioReverb.DryLevel: number
	Property AudioReverb.EarlyDelayTime: number
	Property AudioReverb.HighCutFrequency: number
	Property AudioReverb.LateDelayTime: number
	Property AudioReverb.LowShelfFrequency: number
	Property AudioReverb.LowShelfGain: number
	Property AudioReverb.ReferenceFrequency: number
	Property AudioReverb.WetLevel: number
	Function AudioReverb:GetConnectedWires(pin: string) -> { Instance }
Class AudioSearchParams : Instance [NotReplicated]
	Property AudioSearchParams.Album: string
	Property AudioSearchParams.Artist: string
	Property AudioSearchParams.AudioSubType: Enum.AudioSubType
	Property AudioSearchParams.AudioSubtype: Enum.AudioSubType [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property AudioSearchParams.MaxDuration: number
	Property AudioSearchParams.MinDuration: number
	Property AudioSearchParams.SearchKeyword: string
	Property AudioSearchParams.Tag: string
	Property AudioSearchParams.Title: string
Class AvatarChatService : Instance [NotCreatable] [Service]
	Property AvatarChatService.ClientFeatures: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property AvatarChatService.ClientFeaturesInitialized: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property AvatarChatService.ServerFeatures: number {RobloxScriptSecurity} {✏️RobloxSecurity} [Hidden]
	Function AvatarChatService:EnableVoice() -> boolean {RobloxScriptSecurity}
	Function AvatarChatService:GetClientFeaturesAsync() -> number {RobloxScriptSecurity} [Yields]
	Function AvatarChatService:GetServerFeaturesAsync() -> number {RobloxScriptSecurity} [Yields]
	Function AvatarChatService:IsEnabled(mask: number, feature: Enum.AvatarChatServiceFeature) -> boolean {RobloxScriptSecurity}
	Function AvatarChatService:IsPlaceEnabled() -> boolean {RobloxScriptSecurity}
	Function AvatarChatService:IsUniverseEnabled() -> boolean {RobloxScriptSecurity}
	Function AvatarChatService:PollClientFeatures() -> number {RobloxScriptSecurity}
	Function AvatarChatService:PollServerFeatures() -> number {RobloxScriptSecurity}
	Function AvatarChatService:deviceMeetsRequirementsForFeature(feature: Enum.DeviceFeatureType) -> boolean {RobloxScriptSecurity}
	Event AvatarChatService.OnClientFeatures(features: number) {RobloxSecurity} [Hidden]
	Event AvatarChatService.RefreshClientFeatures() {RobloxSecurity} [Hidden]
Class AvatarCreationService : Instance [NotCreatable] [Service]
	Function AvatarCreationService:GenerateAvatarAsync(sessionId: string, previewId: string) -> string [Yields]
	Function AvatarCreationService:GenerateAvatarModelAsync(player: Player, previewJobId: string, options: { [string]: any }, progressCallback: (...any) -> ...any) -> string [Yields]
	Function AvatarCreationService:GenerateAvatarPreviewAsync(player: Player, textPrompt: string, options: { [string]: any }, progressCallback: (...any) -> ...any) -> string [Yields]
	Function AvatarCreationService:GenerateAvatarPreviewAsync2(sessionId: string, fileId: string, textPrompt: string, options: { [string]: any }) -> string [Yields]
	Function AvatarCreationService:GetAvatarGenerationConfig() -> { [string]: any } [Yields]
	Function AvatarCreationService:GetBatchTokenDetailsAsync(tokenIds: { any }) -> { any } [Yields]
	Function AvatarCreationService:GetValidationRules() -> { [string]: any } [CustomLuaState]
	Function AvatarCreationService:LoadAvatarHumanoidDescriptionAsync(id: string) -> HumanoidDescription [Yields]
	Function AvatarCreationService:LoadAvatarModelAsync(id: string) -> Instance? [Yields]
	Function AvatarCreationService:LoadAvatarPreviewImageAsync(avatarPreview: string) -> EditableImage [Yields]
	Function AvatarCreationService:PromptCreateAvatarAsync(player: Player, humanoidDescription: HumanoidDescription) -> ...any [Yields]
	Function AvatarCreationService:PromptSelectAvatarGenerationImageAsync(player: Player) -> string [Yields]
	Function AvatarCreationService:RequestAvatarGenerationSessionAsync(player: Player, callback: (...any) -> ...any) -> ...any [Yields]
	Function AvatarCreationService:SendAnalyticsEvent(eventName: string, params: { [string]: any }) -> ()
	Function AvatarCreationService:ValidateUGCAccessoryAsync(player: Player, accessory: Instance, accessoryType: Enum.AccessoryType) -> ...any [Yields]
	Function AvatarCreationService:ValidateUGCBodyPartAsync(player: Player, instance: Instance, bodyPart: Enum.BodyPart) -> ...any [Yields]
	Function AvatarCreationService:ValidateUGCFullBodyAsync(player: Player, humanoidDescription: HumanoidDescription) -> ...any [Yields]
	Event AvatarCreationService.ReplicateAvatarGenerationImageId(fileId: string, error: string) {RobloxSecurity} [Hidden]
	Event AvatarCreationService.ReplicateAvatarModel(id: string, success: boolean, serializedModel: string, bufferTable: { [string]: any }) {RobloxSecurity} [Hidden]
	Event AvatarCreationService.ReplicateAvatarPreviewUrl(id: string, downloadUrl: string) {RobloxSecurity} [Hidden]
	Event AvatarCreationService.RequestAvatarGenerationImage() {RobloxSecurity} [Hidden]
	Event AvatarCreationService.RequestAvatarModel(id: string) {RobloxSecurity} [Hidden]
	Event AvatarCreationService.RequestAvatarPreviewUrl(id: string) {RobloxSecurity} [Hidden]
	Event AvatarCreationService.UgcValidationFailure(guid: string, errorMessage: string) {RobloxScriptSecurity}
	Event AvatarCreationService.UgcValidationSuccess(guid: string, serializedModel: string) {RobloxScriptSecurity}
Class AvatarEditorService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AvatarEditorService:CheckApplyDefaultClothing(humanoidDescription: HumanoidDescription) -> HumanoidDescription [Yields]
	Function AvatarEditorService:ConformToAvatarRules(humanoidDescription: HumanoidDescription) -> HumanoidDescription [Yields]
	Function AvatarEditorService:GetAccessoryType(avatarAssetType: Enum.AvatarAssetType) -> Enum.AccessoryType
	Function AvatarEditorService:GetAvatarRules() -> { [string]: any } [Yields]
	Function AvatarEditorService:GetBatchItemDetails(itemIds: { any }, itemType: Enum.AvatarItemType) -> { any } [Yields]
	Function AvatarEditorService:GetFavorite(itemId: number, itemType: Enum.AvatarItemType) -> boolean [Yields]
	Function AvatarEditorService:GetInventory(assetTypes: { any }) -> InventoryPages [Yields]
	Function AvatarEditorService:GetItemDetails(itemId: number, itemType: Enum.AvatarItemType) -> { [string]: any } [Yields]
	Function AvatarEditorService:GetOutfitDetails(outfitId: number) -> { [string]: any } [Yields]
	Function AvatarEditorService:GetOutfits(outfitSource: Enum.OutfitSource? = "All", outfitType: Enum.OutfitType? = "All") -> OutfitPages [Yields]
	Function AvatarEditorService:GetRecommendedAssets(assetType: Enum.AvatarAssetType, contextAssetId: number? = 0) -> { any } [Yields]
	Function AvatarEditorService:GetRecommendedBundles(bundleId: number) -> { any } [Yields]
	Function AvatarEditorService:NoPromptCreateOutfit(humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType, name: string, gearAssetId: number? = 0) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptDeleteOutfit(outfitId: number) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptRenameOutfit(outfitId: number, name: string) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptSaveAvatar(humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType, saveDict: { [string]: any }, gearAssetId: number? = 0) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptSaveAvatarThumbnailCustomization(thumbnailType: Enum.AvatarThumbnailCustomizationType, emoteAssetId: number, cameraDistanceScale: number, yRotDeg: number, fieldOfViewDeg: number? = 0) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptSetFavorite(itemId: number, itemType: Enum.AvatarItemType, shouldFavorite: boolean) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:NoPromptUpdateOutfit(outfitId: number, humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType, gearAssetId: number? = 0) -> boolean {RobloxScriptSecurity}
	Function AvatarEditorService:PerformCreateOutfitWithDescription(humanoidDescription: HumanoidDescription, name: string) -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PerformDeleteOutfit() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PerformRenameOutfit(name: string) -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PerformSaveAvatarWithDescription(humanoidDescription: HumanoidDescription, addedAssets: { any }, removedAssets: { any }) -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PerformSetFavorite() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PerformUpdateOutfit(humanoidDescription: HumanoidDescription) -> () {RobloxScriptSecurity}
	Function AvatarEditorService:PromptAllowInventoryReadAccess() -> ()
	Function AvatarEditorService:PromptCreateOutfit(outfit: HumanoidDescription, rigType: Enum.HumanoidRigType) -> ()
	Function AvatarEditorService:PromptDeleteOutfit(outfitId: number) -> ()
	Function AvatarEditorService:PromptRenameOutfit(outfitId: number) -> ()
	Function AvatarEditorService:PromptSaveAvatar(humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType) -> ()
	Function AvatarEditorService:PromptSetFavorite(itemId: number, itemType: Enum.AvatarItemType, shouldFavorite: boolean) -> ()
	Function AvatarEditorService:PromptUpdateOutfit(outfitId: number, updatedOutfit: HumanoidDescription, rigType: Enum.HumanoidRigType) -> ()
	Function AvatarEditorService:SearchCatalog(searchParameters: CatalogSearchParams) -> CatalogPages [Yields]
	Function AvatarEditorService:SetAllowInventoryReadAccess(inventoryReadAccessGranted: boolean) -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalCreateOutfitFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalCreateOutfitPermissionDenied() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalDeleteOutfitFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalDeleteOutfitPermissionDenied() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalRenameOutfitFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalRenameOutfitPermissionDenied() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalSaveAvatarFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalSaveAvatarPermissionDenied() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalSetFavoriteFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalSetFavoritePermissionDenied() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalUpdateOutfitFailed() -> () {RobloxScriptSecurity}
	Function AvatarEditorService:SignalUpdateOutfitPermissionDenied() -> () {RobloxScriptSecurity}
	Event AvatarEditorService.OpenAllowInventoryReadAccess() {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptCreateOufit(humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType) {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptDeleteOutfit(outfitId: number) {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptRenameOutfit(outfitId: number) {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptSaveAvatar(humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType) {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptSetFavorite(itemId: number, itemType: Enum.AvatarItemType, shouldFavorite: boolean) {RobloxScriptSecurity}
	Event AvatarEditorService.OpenPromptUpdateOutfit(outfitId: number, humanoidDescription: HumanoidDescription, rigType: Enum.HumanoidRigType) {RobloxScriptSecurity}
	Event AvatarEditorService.PromptAllowInventoryReadAccessCompleted(result: Enum.AvatarPromptResult)
	Event AvatarEditorService.PromptCreateOutfitCompleted(result: Enum.AvatarPromptResult, failureType: any)
	Event AvatarEditorService.PromptDeleteOutfitCompleted(result: Enum.AvatarPromptResult)
	Event AvatarEditorService.PromptRenameOutfitCompleted(result: Enum.AvatarPromptResult)
	Event AvatarEditorService.PromptSaveAvatarCompleted(result: Enum.AvatarPromptResult, humanoidDescription: HumanoidDescription)
	Event AvatarEditorService.PromptSaveAvatarThumbnailCustomizationCompleted(result: Enum.AvatarPromptResult, failureType: any) {RobloxScriptSecurity}
	Event AvatarEditorService.PromptSetFavoriteCompleted(result: Enum.AvatarPromptResult)
	Event AvatarEditorService.PromptUpdateOutfitCompleted(result: Enum.AvatarPromptResult)
Class AvatarImportService : Instance [NotCreatable] [Service] [NotReplicated]
	Function AvatarImportService:ImportFBXAnimationFromFilePathUserMayChooseModel(fbxFilePath: string, selectedRig: Instance, userChooseModelThenImportCB: (...any) -> ...any) -> Instance? {RobloxScriptSecurity} [Yields]
	Function AvatarImportService:ImportFBXAnimationUserMayChooseModel(selectedRig: Instance, userChooseModelThenImportCB: (...any) -> ...any) -> Instance? {RobloxScriptSecurity} [Yields]
	Function AvatarImportService:ImportFbxRigWithoutSceneLoad(isR15: boolean? = true) -> Instance? {RobloxScriptSecurity} [Yields]
	Function AvatarImportService:ImportLoadedFBXAnimation(useFBXModel: boolean) -> Instance? {RobloxScriptSecurity} [Yields]
	Function AvatarImportService:LoadRigAndDetectType(promptR15Callback: (...any) -> ...any) -> Instance? {RobloxScriptSecurity} [Yields]
Class Backpack : Instance
Class BadgeService : Instance [NotCreatable] [Service]
	Function BadgeService:AwardBadge(userId: number, badgeId: number) -> boolean [Yields]
	Function BadgeService:CheckUserBadgesAsync(userId: number, badgeIds: { any }) -> { any } [Yields]
	Function BadgeService:GetBadgeInfoAsync(badgeId: number) -> { [string]: any } [Yields]
	Function BadgeService:IsDisabled(badgeId: number) -> boolean [Yields] [Deprecated]
	Function BadgeService:IsLegal(badgeId: number) -> boolean [Yields] [Deprecated]
	Function BadgeService:UserHasBadge(userId: number, badgeId: number) -> boolean [Yields] [Deprecated]
	Function BadgeService:UserHasBadgeAsync(userId: number, badgeId: number) -> boolean [Yields]
	Event BadgeService.BadgeAwarded(message: string, userId: number, badgeId: number) {RobloxScriptSecurity}
	Event BadgeService.OnBadgeAwarded(userId: number, creatorId: number, badgeId: number) {RobloxScriptSecurity}
Class BaseImportData : Instance [NotCreatable] [NotReplicated]
	Property BaseImportData.Id: string [ReadOnly]
	Property BaseImportData.ImportName: string
	Property BaseImportData.ShouldImport: boolean
	Function BaseImportData:CreatePresetFromData() -> { [string]: any } {RobloxScriptSecurity}
	Function BaseImportData:GetPreview() -> Instance? {RobloxScriptSecurity}
	Function BaseImportData:GetStatuses() -> { [string]: any } {RobloxScriptSecurity}
	Event BaseImportData.StatusRemoved(status: { [string]: any })
	Event BaseImportData.StatusReported(status: { [string]: any })
Class AnimationImportData : BaseImportData [NotCreatable] [NotReplicated]
Class FacsImportData : BaseImportData [NotCreatable] [NotReplicated]
Class GroupImportData : BaseImportData [NotCreatable] [NotReplicated]
	Property GroupImportData.Anchored: boolean
	Property GroupImportData.ImportAsModelAsset: boolean
	Property GroupImportData.InsertInWorkspace: boolean
Class JointImportData : BaseImportData [NotCreatable] [NotReplicated]
Class MaterialImportData : BaseImportData [NotCreatable] [NotReplicated]
	Property MaterialImportData.DiffuseFilePath: string
	Property MaterialImportData.IsPbr: boolean [ReadOnly]
	Property MaterialImportData.MetalnessFilePath: string
	Property MaterialImportData.NormalFilePath: string
	Property MaterialImportData.RoughnessFilePath: string
Class MeshImportData : BaseImportData [NotCreatable] [NotReplicated]
	Property MeshImportData.Anchored: boolean
	Property MeshImportData.CageManifold: boolean [ReadOnly]
	Property MeshImportData.CageMeshIntersectedPreview: boolean
	Property MeshImportData.CageMeshNotIntersected: boolean [ReadOnly]
	Property MeshImportData.CageNoOverlappingVertices: boolean [ReadOnly]
	Property MeshImportData.CageNonManifoldPreview: boolean
	Property MeshImportData.CageOverlappingVerticesPreview: boolean
	Property MeshImportData.CageUVMatched: boolean [ReadOnly]
	Property MeshImportData.CageUVMisMatchedPreview: boolean
	Property MeshImportData.Dimensions: Vector3 [ReadOnly]
	Property MeshImportData.DoubleSided: boolean
	Property MeshImportData.IgnoreVertexColors: boolean
	Property MeshImportData.IrrelevantCageModifiedPreview: boolean
	Property MeshImportData.MeshHoleDetectedPreview: boolean
	Property MeshImportData.MeshNoHoleDetected: boolean [ReadOnly]
	Property MeshImportData.NoIrrelevantCageModified: boolean [ReadOnly]
	Property MeshImportData.NoOuterCageFarExtendedFromMesh: boolean [ReadOnly]
	Property MeshImportData.OuterCageFarExtendedFromMeshPreview: boolean
	Property MeshImportData.PolygonCount: number [ReadOnly]
	Property MeshImportData.UseImportedPivot: boolean
Class RootImportData : BaseImportData [NotCreatable] [NotReplicated]
	Property RootImportData.AddModelToInventory: boolean
	Property RootImportData.Anchored: boolean
	Property RootImportData.AnimationIdForRestPose: number
	Property RootImportData.ExistingPackageId: string
	Property RootImportData.FileDimensions: Vector3 [ReadOnly]
	Property RootImportData.ImportAsModelAsset: boolean
	Property RootImportData.ImportAsPackage: boolean
	Property RootImportData.InsertInWorkspace: boolean
	Property RootImportData.InsertWithScenePosition: boolean
	Property RootImportData.InvertNegativeFaces: boolean
	Property RootImportData.KeepZeroInfluenceBones: boolean
	Property RootImportData.MergeMeshes: boolean
	Property RootImportData.PolygonCount: number [ReadOnly]
	Property RootImportData.PreferredUploadId: number
	Property RootImportData.RestPose: Enum.RestPose
	Property RootImportData.RigScale: Enum.RigScale
	Property RootImportData.RigType: Enum.RigType
	Property RootImportData.RigVisualization: boolean
	Property RootImportData.ScaleUnit: Enum.MeshScaleUnit
	Property RootImportData.UseSceneOriginAsCFrame: boolean
	Property RootImportData.UseSceneOriginAsPivot: boolean
	Property RootImportData.UsesCages: boolean
	Property RootImportData.ValidateUgcBody: boolean
	Property RootImportData.WorldForward: Enum.NormalId
	Property RootImportData.WorldUp: Enum.NormalId
Class BasePlayerGui : Instance [NotCreatable]
	Function BasePlayerGui:GetGuiObjectsAtPosition(x: number, y: number) -> { Instance }
	Function BasePlayerGui:GetGuiObjectsInCircle(position: Vector2, radius: number) -> { Instance } {RobloxScriptSecurity}
Class CoreGui : BasePlayerGui [NotCreatable] [Service] [NotReplicated]
	Property CoreGui.SelectionImageObject: GuiObject? {RobloxScriptSecurity}
	Property CoreGui.Version: number [ReadOnly]
	Function CoreGui:SetUserGuiRendering(enabled: boolean, guiAdornee: Instance, faceId: Enum.NormalId, horizontalCurvature: number? = 0) -> () {RobloxScriptSecurity}
	Function CoreGui:TakeScreenshot() -> () {RobloxScriptSecurity}
	Function CoreGui:ToggleRecording() -> () {RobloxScriptSecurity}
	Event CoreGui.UserGuiRenderingChanged(enabled: boolean, guiAdornee: Instance, faceId: Enum.NormalId, horizontalCurvature: number) {RobloxScriptSecurity}
Class PlayerGui : BasePlayerGui [NotCreatable] [PlayerReplicated]
	Property PlayerGui.SelectionImageObject: GuiObject?
	Property PlayerGui.CurrentScreenOrientation: Enum.ScreenOrientation [ReadOnly]
	Property PlayerGui.ScreenOrientation: Enum.ScreenOrientation
	Function PlayerGui:GetTopbarTransparency() -> number [Deprecated]
	Function PlayerGui:SetTopbarTransparency(transparency: number) -> () [Deprecated]
	Event PlayerGui.TopbarTransparencyChangedSignal(transparency: number) [Deprecated]
Class StarterGui : BasePlayerGui [NotCreatable] [Service]
	Property StarterGui.ProcessUserInput: boolean {PluginSecurity} [Hidden] [NotReplicated]
	Property StarterGui.RtlTextSupport: Enum.RtlTextSupport [NotScriptable]
	Property StarterGui.VirtualCursorMode: Enum.VirtualCursorMode [NotScriptable]
	Property StarterGui.ResetPlayerGuiOnSpawn: boolean [Deprecated]
	Property StarterGui.ScreenOrientation: Enum.ScreenOrientation
	Property StarterGui.ShowDevelopmentGui: boolean
	Function StarterGui:GetCore(parameterName: string) -> any [Yields]
	Function StarterGui:GetCoreGuiEnabled(coreGuiType: Enum.CoreGuiType) -> boolean
	Function StarterGui:RegisterGetCore(parameterName: string, getFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function StarterGui:RegisterSetCore(parameterName: string, setFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function StarterGui:SetCore(parameterName: string, value: any) -> ()
	Function StarterGui:SetCoreGuiEnabled(coreGuiType: Enum.CoreGuiType, enabled: boolean) -> ()
	Event StarterGui.CoreGuiChangedSignal(coreGuiType: Enum.CoreGuiType, enabled: boolean) {RobloxScriptSecurity}
Class BaseRemoteEvent : Instance [NotCreatable]
Class RemoteEvent : BaseRemoteEvent
	Function RemoteEvent:FireAllClients(arguments: ...any) -> ()
	Function RemoteEvent:FireClient(player: Player, arguments: ...any) -> ()
	Function RemoteEvent:FireServer(arguments: ...any) -> ()
	Event RemoteEvent.OnClientEvent(arguments: ...any)
	Event RemoteEvent.OnRemoteServerEvent(arguments: ...any) {RobloxSecurity} [Hidden]
	Event RemoteEvent.OnServerEvent(player: Player, arguments: ...any)
Class UnreliableRemoteEvent : BaseRemoteEvent
	Function UnreliableRemoteEvent:FireAllClients(arguments: ...any) -> ()
	Function UnreliableRemoteEvent:FireClient(player: Player, arguments: ...any) -> ()
	Function UnreliableRemoteEvent:FireServer(arguments: ...any) -> ()
	Event UnreliableRemoteEvent.OnClientEvent(arguments: ...any)
	Event UnreliableRemoteEvent.OnRemoteServerEvent(arguments: ...any) {RobloxSecurity} [Hidden]
	Event UnreliableRemoteEvent.OnServerEvent(player: Player, arguments: ...any)
Class BaseWrap : Instance [NotCreatable]
	Property BaseWrap.CageMeshId: ContentId {✏️PluginSecurity}
	Property BaseWrap.CageOrigin: CFrame {✏️PluginSecurity}
	Property BaseWrap.ImportOrigin: CFrame {✏️PluginSecurity}
	Property BaseWrap.TemporaryCageMeshId: ContentId {RobloxSecurity} [Hidden] [NotScriptable]
	Property BaseWrap.CageOriginWorld: CFrame [ReadOnly]
	Property BaseWrap.HSRAssetId: ContentId {RobloxSecurity} [NotScriptable]
	Property BaseWrap.HSRData: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
	Property BaseWrap.HSRMeshIdData: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
	Property BaseWrap.ImportInProcess: boolean {✏️RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property BaseWrap.ImportOriginWorld: CFrame [ReadOnly]
	Function BaseWrap:GetCageOffset() -> Vector3 {RobloxScriptSecurity}
	Function BaseWrap:GetFaces(cageType: Enum.CageType) -> { any } {RobloxScriptSecurity}
	Function BaseWrap:GetUVs(cageType: Enum.CageType) -> { any } {RobloxScriptSecurity}
	Function BaseWrap:GetVertices(cageType: Enum.CageType) -> { any } {RobloxScriptSecurity}
	Function BaseWrap:IsHSRReady() -> boolean {RobloxScriptSecurity}
	Function BaseWrap:ModifyVertices(cageType: Enum.CageType, vertices: { any }) -> () {RobloxScriptSecurity}
	Event BaseWrap.VerticesModified(vertices: { any }) {RobloxScriptSecurity}
Class WrapDeformer : BaseWrap [NotBrowsable]
	Function WrapDeformer:CreateEditableMeshAsync() -> EditableMesh [Yields]
	Function WrapDeformer:GetDeformedCFrame(originalCFrame: CFrame) -> CFrame
Class WrapLayer : BaseWrap
	Property WrapLayer.Order: number
	Property WrapLayer.Puffiness: number
	Property WrapLayer.ReferenceMeshId: ContentId {✏️PluginSecurity}
	Property WrapLayer.ReferenceOrigin: CFrame {✏️PluginSecurity}
	Property WrapLayer.TemporaryReferenceId: ContentId {RobloxSecurity} [Hidden] [NotScriptable]
	Property WrapLayer.AutoSkin: Enum.WrapLayerAutoSkin
	Property WrapLayer.Enabled: boolean
	Property WrapLayer.ReferenceOriginWorld: CFrame [ReadOnly]
	Property WrapLayer.Color: Color3 [NotReplicated] [NotScriptable]
	Property WrapLayer.DebugMode: Enum.WrapLayerDebugMode [NotReplicated] [NotScriptable]
	Property WrapLayer.BindOffset: CFrame {✏️PluginSecurity}
	Property WrapLayer.ShrinkFactor: number {✏️PluginSecurity}
Class WrapTarget : BaseWrap
	Property WrapTarget.Stiffness: number {✏️PluginSecurity}
	Property WrapTarget.Color: Color3 [NotReplicated] [NotScriptable]
	Property WrapTarget.DebugMode: Enum.WrapTargetDebugMode [NotReplicated] [NotScriptable]
Class Beam : Instance
	Property Beam.Brightness: number
	Property Beam.Color: ColorSequence
	Property Beam.Enabled: boolean
	Property Beam.LightEmission: number
	Property Beam.LightInfluence: number
	Property Beam.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Beam.Texture: ContentId
	Property Beam.TextureLength: number
	Property Beam.TextureMode: Enum.TextureMode
	Property Beam.TextureSpeed: number
	Property Beam.Transparency: NumberSequence
	Property Beam.ZOffset: number
	Property Beam.Attachment0: Attachment?
	Property Beam.Attachment1: Attachment?
	Property Beam.CurveSize0: number
	Property Beam.CurveSize1: number
	Property Beam.FaceCamera: boolean
	Property Beam.Segments: number
	Property Beam.Width0: number
	Property Beam.Width1: number
	Function Beam:SetTextureOffset(offset: number? = 0) -> ()
Class BindableEvent : Instance
	Function BindableEvent:Fire(arguments: ...any) -> () {🧬Safe}
	Event BindableEvent.Event(arguments: ...any)
Class BindableFunction : Instance
	Function BindableFunction:Invoke(arguments: ...any) -> ...any [Yields]
	Callback BindableFunction.OnInvoke(arguments: ...any) -> ...any
Class BodyMover : Instance [NotCreatable] [Deprecated]
Class BodyAngularVelocity : BodyMover [Deprecated]
	Property BodyAngularVelocity.AngularVelocity: Vector3 [Deprecated]
	Property BodyAngularVelocity.MaxTorque: Vector3 [Deprecated]
	Property BodyAngularVelocity.P: number [Deprecated]
	Property BodyAngularVelocity.angularvelocity: Vector3 [📁 LoadOnly] [NotReplicated] [Deprecated] [Deprecated]
Class BodyForce : BodyMover [Deprecated]
	Property BodyForce.Force: Vector3 [Deprecated]
Class BodyGyro : BodyMover [Deprecated]
	Property BodyGyro.CFrame: CFrame [Deprecated]
	Property BodyGyro.D: number [Deprecated]
	Property BodyGyro.MaxTorque: Vector3 [Deprecated]
	Property BodyGyro.P: number [Deprecated]
	Property BodyGyro.cframe: CFrame [📁 LoadOnly] [NotReplicated] [Deprecated] [Deprecated]
Class BodyPosition : BodyMover [Deprecated]
	Property BodyPosition.D: number [Deprecated]
	Property BodyPosition.MaxForce: Vector3 [Deprecated]
	Property BodyPosition.P: number [Deprecated]
	Property BodyPosition.Position: Vector3 [Deprecated]
	Function BodyPosition:GetLastForce() -> Vector3 [Deprecated]
	Function BodyPosition:lastForce() -> Vector3 [Deprecated] [Deprecated]
	Event BodyPosition.ReachedTarget() [Deprecated]
Class BodyThrust : BodyMover [Deprecated]
	Property BodyThrust.Force: Vector3 [Deprecated]
	Property BodyThrust.Location: Vector3 [Deprecated]
Class BodyVelocity : BodyMover [Deprecated]
	Property BodyVelocity.MaxForce: Vector3 [Deprecated]
	Property BodyVelocity.P: number [Deprecated]
	Property BodyVelocity.Velocity: Vector3 [Deprecated]
	Function BodyVelocity:GetLastForce() -> Vector3 [Deprecated]
	Function BodyVelocity:lastForce() -> Vector3 [Deprecated]
Class RocketPropulsion : BodyMover [Deprecated]
	Property RocketPropulsion.CartoonFactor: number [Deprecated]
	Property RocketPropulsion.Target: BasePart? [Deprecated]
	Property RocketPropulsion.TargetOffset: Vector3 [Deprecated]
	Property RocketPropulsion.TargetRadius: number [Deprecated]
	Property RocketPropulsion.Active: boolean [Hidden] [NotScriptable] [Deprecated]
	Property RocketPropulsion.MaxSpeed: number [Deprecated]
	Property RocketPropulsion.MaxThrust: number [Deprecated]
	Property RocketPropulsion.ThrustD: number [Deprecated]
	Property RocketPropulsion.ThrustP: number [Deprecated]
	Property RocketPropulsion.MaxTorque: Vector3 [Deprecated]
	Property RocketPropulsion.TurnD: number [Deprecated]
	Property RocketPropulsion.TurnP: number [Deprecated]
	Function RocketPropulsion:Abort() -> () [Deprecated]
	Function RocketPropulsion:Fire() -> () [Deprecated]
	Event RocketPropulsion.ReachedTarget() [Deprecated]
Class BodyPartDescription : Instance
	Property BodyPartDescription.AssetId: number
	Property BodyPartDescription.BodyPart: Enum.BodyPart
	Property BodyPartDescription.Color: Color3
	Property BodyPartDescription.Instance: Instance?
Class Breakpoint : Instance [NotReplicated]
	Property Breakpoint.Condition: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Breakpoint.Id: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Breakpoint.Line: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Breakpoint.LogMessage: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Breakpoint.MetaBreakpointId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Breakpoint.Script: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Breakpoint.ContinueExecution: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Breakpoint.Enabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Breakpoint.RemoveOnHit: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Breakpoint.Valid: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Breakpoint.Verified: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
Class BrowserService : Instance [NotCreatable] [Service] [NotReplicated]
	Function BrowserService:CloseBrowserWindow() -> () {RobloxScriptSecurity}
	Function BrowserService:CopyAuthCookieFromBrowserToEngine() -> () {RobloxScriptSecurity}
	Function BrowserService:EmitHybridEvent(moduleName: string, eventName: string, params: string) -> () {RobloxScriptSecurity}
	Function BrowserService:ExecuteJavaScript(javascript: string) -> () {RobloxScriptSecurity}
	Function BrowserService:OpenBrowserWindow(url: string) -> () {RobloxScriptSecurity}
	Function BrowserService:OpenNativeOverlay(title: string, url: string) -> () {RobloxScriptSecurity}
	Function BrowserService:OpenWeChatAuthWindow() -> () {RobloxScriptSecurity}
	Function BrowserService:ReturnToJavaScript(callbackId: string, success: boolean, params: string) -> () {RobloxScriptSecurity}
	Function BrowserService:SendCommand(command: string) -> () {RobloxScriptSecurity}
	Event BrowserService.AuthCookieCopiedToEngine() {RobloxScriptSecurity}
	Event BrowserService.BrowserWindowClosed() {RobloxScriptSecurity}
	Event BrowserService.BrowserWindowWillNavigate(url: string) {RobloxScriptSecurity}
	Event BrowserService.JavaScriptCallback(content: string) {RobloxScriptSecurity}
Class BulkImportService : Instance [NotCreatable] [Service] [NotReplicated]
	Function BulkImportService:LaunchBulkImport(assetTypeToImport: number) -> () {RobloxScriptSecurity}
	Function BulkImportService:ShowBulkImportView() -> () {RobloxScriptSecurity}
	Event BulkImportService.AssetImported(assetType: Enum.AssetType, name: string, id: number) {RobloxScriptSecurity}
	Event BulkImportService.BulkImportFinished(state: number) {RobloxScriptSecurity}
	Event BulkImportService.BulkImportStarted() {RobloxScriptSecurity}
Class CacheableContentProvider : Instance [NotCreatable] [Service] [NotReplicated]
Class HSRDataContentProvider : CacheableContentProvider [NotCreatable] [Service] [NotReplicated]
Class MeshContentProvider : CacheableContentProvider [NotCreatable] [Service] [NotReplicated]
	Function MeshContentProvider:GetContentMemoryData() -> { [string]: any } {RobloxScriptSecurity}
Class SolidModelContentProvider : CacheableContentProvider [NotCreatable] [Service] [NotReplicated]
Class CalloutService : Instance [NotCreatable] [Service] [NotReplicated]
	Function CalloutService:AttachCallout(definitionId: string, locationId: string, target: Instance) -> () {RobloxScriptSecurity}
	Function CalloutService:DefineCallout(definitionId: string, title: string, description: string, learnMoreURL: string) -> () {RobloxScriptSecurity}
	Function CalloutService:DetachCalloutsByDefinitionId(definitionId: string) -> () {RobloxScriptSecurity}
Class Camera : Instance [NotReplicated]
	Property Camera.CameraSubject: Instance?
	Property Camera.CameraType: Enum.CameraType
	Property Camera.DiagonalFieldOfView: number [NotReplicated]
	Property Camera.FieldOfView: number
	Property Camera.FieldOfViewMode: Enum.FieldOfViewMode
	Property Camera.MaxAxisFieldOfView: number [NotReplicated]
	Property Camera.CFrame: CFrame
	Property Camera.CoordinateFrame: CFrame [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property Camera.Focus: CFrame
	Property Camera.HeadLocked: boolean
	Property Camera.HeadScale: number
	Property Camera.NearPlaneZ: number [ReadOnly]
	Property Camera.VRTiltAndRollEnabled: boolean
	Property Camera.ViewportSize: Vector2 [ReadOnly]
	Function Camera:GetLargestCutoffDistance(ignoreList: { Instance }) -> number [Deprecated]
	Function Camera:GetPanSpeed() -> number [Deprecated]
	Function Camera:GetPartsObscuringTarget(castPoints: { any }, ignoreList: { Instance }) -> { Instance }
	Function Camera:GetRenderCFrame() -> CFrame
	Function Camera:GetRoll() -> number
	Function Camera:GetTiltSpeed() -> number [Deprecated]
	Function Camera:Interpolate(endPos: CFrame, endFocus: CFrame, duration: number) -> () [Deprecated]
	Function Camera:PanUnits(units: number) -> () [Deprecated]
	Function Camera:ScreenPointToRay(x: number, y: number, depth: number? = 0) -> Ray {🧬Safe}
	Function Camera:SetCameraPanMode(mode: Enum.CameraPanMode? = "Classic") -> () [Deprecated]
	Function Camera:SetImageServerView(modelCoord: CFrame) -> () {RobloxScriptSecurity}
	Function Camera:SetRoll(rollAngle: number) -> ()
	Function Camera:TiltUnits(units: number) -> boolean [Deprecated]
	Function Camera:ViewportPointToRay(x: number, y: number, depth: number? = 0) -> Ray {🧬Safe}
	Function Camera:WorldToScreenPoint(worldPoint: Vector3) -> ...any {🧬Safe}
	Function Camera:WorldToViewportPoint(worldPoint: Vector3) -> ...any {🧬Safe}
	Function Camera:Zoom(distance: number) -> boolean {RobloxScriptSecurity}
	Function Camera:ZoomToExtents(boundingBoxCFrame: CFrame, boundingBoxSize: Vector3) -> ()
	Event Camera.FirstPersonTransition(entering: boolean) {LocalUserSecurity}
	Event Camera.InterpolationFinished()
Class CaptureService : Instance [NotCreatable] [Service]
	Function CaptureService:CaptureScreenshot(onCaptureReady: (...any) -> ...any) -> ()
	Function CaptureService:CreatePostAsync(pathArr: { any }, caption: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function CaptureService:DeleteCapture(capturePath: string) -> () {RobloxScriptSecurity}
	Function CaptureService:DeleteCapturesAsync(pathArr: { any }) -> number {RobloxScriptSecurity} [Yields]
	Function CaptureService:GetCaptureFilePathAsync(captureContentId: ContentId) -> string {RobloxScriptSecurity} [Yields]
	Function CaptureService:GetCaptureSizeAsync(captureContentId: ContentId) -> Vector2 {RobloxScriptSecurity} [Yields]
	Function CaptureService:GetCaptureStorageSizeAsync(pathArr: { any }) -> number {RobloxScriptSecurity} [Yields]
	Function CaptureService:GetCaptureUploadDataAsync(capturePath: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function CaptureService:OnCaptureBegan() -> () {RobloxScriptSecurity}
	Function CaptureService:OnCaptureEnded() -> () {RobloxScriptSecurity}
	Function CaptureService:OnCaptureShared(capturePath: string) -> () {RobloxScriptSecurity}
	Function CaptureService:OnSavePromptFinished(promptId: number, results: { [string]: any }) -> () {RobloxScriptSecurity}
	Function CaptureService:OnSharePromptFinished(promptId: number, accepted: boolean) -> () {RobloxScriptSecurity}
	Function CaptureService:PostToFeedAsync(capturePath: string, feedCategory: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function CaptureService:PromptSaveCapturesToGallery(contentIds: { any }, resultCallback: (...any) -> ...any) -> ()
	Function CaptureService:PromptShareCapture(contentId: ContentId, launchData: string, onAcceptedCallback: (...any) -> ...any, onDeniedCallback: (...any) -> ...any) -> ()
	Function CaptureService:RetrieveCaptures() -> { any } {RobloxScriptSecurity}
	Function CaptureService:SaveCaptureToExternalStorage(capturePath: string) -> () {RobloxScriptSecurity}
	Function CaptureService:SaveCapturesToExternalStorageAsync(pathArr: { any }) -> number {RobloxScriptSecurity} [Yields]
	Function CaptureService:SaveScreenshotCapture(additionalInfo: string? = "") -> () {RobloxScriptSecurity}
	Event CaptureService.CaptureBegan()
	Event CaptureService.CaptureEnded()
	Event CaptureService.CaptureSaved(captureInfo: { [string]: any }) [Deprecated]
	Event CaptureService.CaptureSavedInternal(captureInfo: { [string]: any }, triggerSource: string) {RobloxScriptSecurity}
	Event CaptureService.OnCaptureSignatureResult(content: string, signature: string, signatureVersion: number) {RobloxSecurity} [Hidden]
	Event CaptureService.OpenSaveCapturesPrompt(promptId: number, contentIds: { any }) {RobloxScriptSecurity}
	Event CaptureService.OpenShareCapturePrompt(promptId: number, contentId: ContentId, launchData: string) {RobloxScriptSecurity}
	Event CaptureService.RequestCaptureSignature(content: string) {RobloxSecurity} [Hidden]
	Event CaptureService.UserCaptureSaved(captureContentId: ContentId)
Class ChangeHistoryService : Instance [NotCreatable] [Service]
	Function ChangeHistoryService:FinishRecording(identifier: string, operation: Enum.FinishRecordingOperation, finalOptions: { [string]: any }?) -> () {PluginSecurity}
	Function ChangeHistoryService:GetCanRedo() -> ...any {PluginSecurity}
	Function ChangeHistoryService:GetCanUndo() -> ...any {PluginSecurity}
	Function ChangeHistoryService:IsRecordingInProgress(identifier: string?) -> boolean {PluginSecurity}
	Function ChangeHistoryService:Redo() -> () {PluginSecurity}
	Function ChangeHistoryService:ResetWaypoints() -> () {PluginSecurity}
	Function ChangeHistoryService:SetEnabled(state: boolean) -> () {PluginSecurity}
	Function ChangeHistoryService:SetWaypoint(name: string) -> () {PluginSecurity}
	Function ChangeHistoryService:TryBeginRecording(name: string, displayName: string?) -> string? {PluginSecurity}
	Function ChangeHistoryService:Undo() -> () {PluginSecurity}
	Event ChangeHistoryService.OnRecordingFinished(name: string, displayName: string?, identifier: string?, operationn: Enum.FinishRecordingOperation, finalOptions: { [string]: any }?) {PluginSecurity}
	Event ChangeHistoryService.OnRecordingStarted(name: string, displayName: string?) {PluginSecurity}
	Event ChangeHistoryService.OnRedo(waypoint: string) {PluginSecurity}
	Event ChangeHistoryService.OnUndo(waypoint: string) {PluginSecurity}
Class CharacterAppearance : Instance [NotCreatable]
Class BodyColors : CharacterAppearance
	Property BodyColors.HeadColor: BrickColor [📁 LoadOnly]
	Property BodyColors.HeadColor3: Color3
	Property BodyColors.LeftArmColor: BrickColor [📁 LoadOnly]
	Property BodyColors.LeftArmColor3: Color3
	Property BodyColors.LeftLegColor: BrickColor [📁 LoadOnly]
	Property BodyColors.LeftLegColor3: Color3
	Property BodyColors.RightArmColor: BrickColor [📁 LoadOnly]
	Property BodyColors.RightArmColor3: Color3
	Property BodyColors.RightLegColor: BrickColor [📁 LoadOnly]
	Property BodyColors.RightLegColor3: Color3
	Property BodyColors.TorsoColor: BrickColor [📁 LoadOnly]
	Property BodyColors.TorsoColor3: Color3
Class CharacterMesh : CharacterAppearance
	Property CharacterMesh.BaseTextureId: number
	Property CharacterMesh.BodyPart: Enum.BodyPart
	Property CharacterMesh.MeshId: number
	Property CharacterMesh.OverlayTextureId: number
Class Clothing : CharacterAppearance [NotCreatable]
	Property Clothing.Color3: Color3
	Property Clothing.Outfit1: ContentId [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable]
	Property Clothing.Outfit2: ContentId [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable]
Class Pants : Clothing
	Property Pants.PantsTemplate: ContentId
Class Shirt : Clothing
	Property Shirt.ShirtTemplate: ContentId
Class ShirtGraphic : CharacterAppearance
	Property ShirtGraphic.Color3: Color3
	Property ShirtGraphic.Graphic: ContentId
Class Skin : CharacterAppearance [Deprecated]
	Property Skin.SkinColor: BrickColor [Deprecated]
Class Chat : Instance [NotCreatable] [Service] [NotReplicated]
	Property Chat.BubbleChatEnabled: boolean
	Property Chat.LoadDefaultChat: boolean {✏️NotAccessibleSecurity}
	Function Chat:CanUserChatAsync(userId: number) -> boolean [Yields]
	Function Chat:CanUsersChatAsync(userIdFrom: number, userIdTo: number) -> boolean [Yields]
	Function Chat:Chat(partOrCharacter: Instance, message: string, color: Enum.ChatColor? = "Blue") -> ()
	Function Chat:ChatLocal(partOrCharacter: Instance, message: string, color: Enum.ChatColor? = "Blue") -> () {RobloxScriptSecurity}
	Function Chat:FilterStringAsync(stringToFilter: string, playerFrom: Player, playerTo: Player) -> string [Yields]
	Function Chat:FilterStringForBroadcast(stringToFilter: string, playerFrom: Player) -> string [Yields]
	Function Chat:FilterStringForPlayerAsync(stringToFilter: string, playerToFilterFor: Player) -> string [Yields] [Deprecated]
	Function Chat:GetShouldUseLuaChat() -> boolean {RobloxScriptSecurity}
	Function Chat:InvokeChatCallback(callbackType: Enum.ChatCallbackType, callbackArguments: ...any) -> ...any
	Function Chat:RegisterChatCallback(callbackType: Enum.ChatCallbackType, callbackFunction: (...any) -> ...any) -> ()
	Function Chat:SetBubbleChatSettings(settings: any) -> ()
	Event Chat.BubbleChatSettingsChanged(settings: any) {RobloxScriptSecurity}
	Event Chat.Chatted(part: Instance, message: string, color: Enum.ChatColor)
	Event Chat.ClientToServerFilterMessageSignalV2(sender: Instance, receiver: Instance, unfilteredMessage: string) {RobloxSecurity} [Hidden]
	Event Chat.ClientToServerReportUnfilteredSignal(unfilteredText: string, match: string, instancePath: string, instanceType: string) {RobloxSecurity} [Hidden]
	Event Chat.ServerToClientUnderOver13FilteredResponseSignal(sender: Instance, unfilteredMessage: string, isError: boolean, errorStr: string, under13: string, over13: string) {RobloxSecurity} [Hidden]
Class ChatbotUIService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ChatbotUIService:DisplayContent(contentType: string, data: { [string]: any }) -> () {RobloxScriptSecurity}
	Function ChatbotUIService:GetSettings() -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Event ChatbotUIService.ActionActivatedSignal(action: string) {RobloxScriptSecurity}
	Event ChatbotUIService.FindVariationsSignal(action: string) {RobloxScriptSecurity}
	Event ChatbotUIService.SetMaterialSettingsSignal(guid: string, studsPerTile: number, isOrganic: boolean) {RobloxScriptSecurity}
	Event ChatbotUIService.SettingChangedSignal(setting: string, value: any) {RobloxScriptSecurity}
	Event ChatbotUIService.ShiftToAssetIdSignal(action: string, change: number) {RobloxScriptSecurity}
	Event ChatbotUIService.ShiftVariationSignal(action: string, change: number) {RobloxScriptSecurity}
Class ClickDetector : Instance
	Property ClickDetector.MaxActivationDistance: number
	Property ClickDetector.CursorIcon: ContentId
	Event ClickDetector.MouseActionReplicated(player: Player, actionType: number) {RobloxSecurity} [Hidden]
	Event ClickDetector.MouseClick(playerWhoClicked: Player)
	Event ClickDetector.MouseHoverEnter(playerWhoHovered: Player)
	Event ClickDetector.MouseHoverLeave(playerWhoHovered: Player)
	Event ClickDetector.RightMouseClick(playerWhoClicked: Player)
Class DragDetector : ClickDetector
	Property DragDetector.DragStyle: Enum.DragDetectorDragStyle
	Property DragDetector.Enabled: boolean
	Property DragDetector.PermissionPolicy: Enum.DragDetectorPermissionPolicy
	Property DragDetector.ResponseStyle: Enum.DragDetectorResponseStyle
	Property DragDetector.RunLocally: boolean
	Property DragDetector.TrackballRadialPullFactor: number
	Property DragDetector.TrackballRollFactor: number
	Property DragDetector.ReferenceInstance: Instance?
	Property DragDetector.Axis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property DragDetector.Orientation: Vector3
	Property DragDetector.SecondaryAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property DragDetector.WorldAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property DragDetector.WorldSecondaryAxis: Vector3 [📁 LoadOnly] [NotReplicated]
	Property DragDetector.MaxDragAngle: number
	Property DragDetector.MaxDragTranslation: Vector3
	Property DragDetector.MinDragAngle: number
	Property DragDetector.MinDragTranslation: Vector3
	Property DragDetector.DragFrame: CFrame
	Property DragDetector.ActivatedCursorIcon: ContentId
	Property DragDetector.PhysicalDragClickedPart: Instance? [Hidden] [NotScriptable]
	Property DragDetector.PhysicalDragHitPoint: Vector3 [Hidden] [NotScriptable]
	Property DragDetector.PhysicalDragIsInVR: boolean [Hidden] [NotScriptable]
	Property DragDetector.PhysicalDragTargetFrame: CFrame [Hidden] [NotScriptable]
	Property DragDetector.GamepadModeSwitchKeyCode: Enum.KeyCode
	Property DragDetector.KeyboardModeSwitchKeyCode: Enum.KeyCode
	Property DragDetector.VRSwitchKeyCode: Enum.KeyCode
	Property DragDetector.ApplyAtCenterOfMass: boolean
	Property DragDetector.MaxForce: number
	Property DragDetector.MaxTorque: number
	Property DragDetector.Responsiveness: number
	Function DragDetector:AddConstraintFunction(priority: number, function: (...any) -> ...any) -> RBXScriptConnection
	Function DragDetector:GetReferenceFrame() -> CFrame
	Function DragDetector:RestartDrag() -> ()
	Function DragDetector:SetDragStyleFunction(function: (...any) -> ...any) -> ()
	Function DragDetector:SetPermissionPolicyFunction(function: (...any) -> ...any) -> ()
	Event DragDetector.DragContinue(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, vrInputFrame: CFrame?, isModeSwitchKeyDown: boolean)
	Event DragDetector.DragContinueReplicate(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, vrInputFrame: CFrame?, isModeSwitchKeyDown: boolean) [Hidden]
	Event DragDetector.DragEnd(playerWhoDragged: Player)
	Event DragDetector.DragEndReplicate(playerWhoDragged: Player) [Hidden]
	Event DragDetector.DragStart(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, hitFrame: CFrame, clickedPart: BasePart, vrInputFrame: CFrame?, isModeSwitchKeyDown: boolean)
	Event DragDetector.DragStartReplicate(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, hitFrame: CFrame, clickedPart: BasePart, vrInputFrame: CFrame?, isModeSwitchKeyDown: boolean) [Hidden]
Class CloudCRUDService : Instance [NotCreatable] [Service] [NotReplicated]
Class Clouds : Instance
	Property Clouds.Cover: number
	Property Clouds.Density: number
	Property Clouds.Color: Color3
	Property Clouds.Enabled: boolean
Class ClusterPacketCache : Instance [NotCreatable] [Service] [NotReplicated]
Class Collaborator : Instance [NotCreatable]
	Property Collaborator.CFrame: CFrame [Hidden]
	Property Collaborator.CollaboratorColor: number [Hidden] [Deprecated]
	Property Collaborator.CollaboratorColor3: Color3 [Hidden]
	Property Collaborator.CurDocGUID: string [Hidden]
	Property Collaborator.CurScriptLineNumber: number [Hidden]
	Property Collaborator.IsIdle: boolean [Hidden]
	Property Collaborator.Status: Enum.CollaboratorStatus [Hidden]
	Property Collaborator.UserId: number [Hidden]
	Property Collaborator.Username: string [Hidden]
Class CollaboratorsService : Instance [NotCreatable] [Service]
	Function CollaboratorsService:GetCollaboratorsList() -> { Instance } {RobloxScriptSecurity}
	Function CollaboratorsService:GetSelectionHighlightsEnabled() -> boolean {RobloxScriptSecurity}
	Function CollaboratorsService:RequestFlyToCollaborator(collaboratorId: number) -> () {RobloxScriptSecurity}
	Function CollaboratorsService:ToggleSelectionHighlights(showHighlights: boolean) -> () {RobloxScriptSecurity}
	Function CollaboratorsService:ToggleTeamCreate(on: boolean) -> () {RobloxScriptSecurity}
	Event CollaboratorsService.CollaboratorIdleUpdate(collaboratorId: number, isIdle: boolean) {RobloxScriptSecurity}
	Event CollaboratorsService.CollaboratorInstanceCreatedSignal(collaboratorId: number) {RobloxScriptSecurity}
	Event CollaboratorsService.CollaboratorInstanceDestroyedSignal(collaboratorId: number) {RobloxScriptSecurity}
	Event CollaboratorsService.CollaboratorStatusUpdateRequestedSignal(collaboratorId: number, newStatus: Enum.CollaboratorStatus) {RobloxScriptSecurity} [Hidden]
	Event CollaboratorsService.CollaboratorStatusUpdatedSignal(collaboratorId: number, newStatus: Enum.CollaboratorStatus) {RobloxScriptSecurity}
Class CollectionService : Instance [NotCreatable] [Service]
	Function CollectionService:AddTag(instance: Instance, tag: string) -> () [CustomLuaState]
	Function CollectionService:GetAllTags() -> { any } {🧬Safe}
	Function CollectionService:GetCollection(class: string) -> { Instance } [Deprecated]
	Function CollectionService:GetInstanceAddedSignal(tag: string) -> RBXScriptSignal
	Function CollectionService:GetInstanceRemovedSignal(tag: string) -> RBXScriptSignal
	Function CollectionService:GetTagged(tag: string) -> { Instance } {🧬Safe}
	Function CollectionService:GetTags(instance: Instance) -> { any } [CustomLuaState] {🧬Safe}
	Function CollectionService:HasTag(instance: Instance, tag: string) -> boolean [CustomLuaState] {🧬Safe}
	Function CollectionService:RemoveTag(instance: Instance, tag: string) -> () [CustomLuaState]
	Event CollectionService.ItemAdded(instance: Instance) [Deprecated]
	Event CollectionService.ItemRemoved(instance: Instance) [Deprecated]
	Event CollectionService.TagAdded(tag: string)
	Event CollectionService.TagRemoved(tag: string)
Class CommandInstance : Instance [NotCreatable] [NotReplicated]
	Property CommandInstance.AllowGUIAccessPoints: boolean [ReadOnly]
	Property CommandInstance.Checked: boolean {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property CommandInstance.DefaultShortcut: string {RobloxScriptSecurity} [ReadOnly]
	Property CommandInstance.DisplayName: string [📁 LoadOnly] [NotReplicated]
	Property CommandInstance.Enabled: boolean {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property CommandInstance.Icon: string {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property CommandInstance.Name: string [ReadOnly]
	Property CommandInstance.Permission: Enum.CommandPermission {RobloxScriptSecurity} [ReadOnly]
	Property CommandInstance.StatusTip: string {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Function CommandInstance:EnableGuiAccess(displayName: string, statusTip: string, defaultShortcut: string) -> () {RobloxScriptSecurity}
	Function CommandInstance:RegisterExecutionCallback(callbackFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
Class CommandService : Instance [NotCreatable] [Service] [NotReplicated]
	Function CommandService:Execute(name: string, params: any) -> any {RobloxScriptSecurity} [Yields]
	Function CommandService:RegisterCommand(plugin: Plugin, name: string, context: string, permission: Enum.CommandPermission? = "LocalUser") -> CommandInstance {RobloxScriptSecurity} [Yields]
	Event CommandService.CommandExecuting(name: string, params: any) {RobloxScriptSecurity}
Class CommerceService : Instance [NotCreatable] [Service]
	Function CommerceService:PromptCommerceProductPurchase(user: Player, commerceProductId: number) -> ()
	Function CommerceService:PromptRealWorldCommerceBrowser(player: Player, url: string) -> ()
	Function CommerceService:UserEligibleForRealWorldCommerceAsync() -> boolean [Yields]
	Event CommerceService.InExperienceBrowserRequested(url: string) {RobloxSecurity}
	Event CommerceService.PromptCommerceProductPurchaseFinished(user: Player, productId: number)
	Event CommerceService.PromptCommerceProductPurchaseRequested(commerceProductId: number) {RobloxSecurity} [Hidden]
Class Configuration : Instance
Class ConfigureServerService : Instance [NotCreatable] [Service]
Class ConnectivityService : Instance [NotCreatable] [Service] [NotReplicated]
	Property ConnectivityService.NetworkStatus: Enum.NetworkStatus {RobloxScriptSecurity} [ReadOnly]
	Function ConnectivityService:IsNetworkStateAvailable() -> boolean {RobloxScriptSecurity}
Class Constraint : Instance [NotCreatable]
	Property Constraint.Color: BrickColor
	Property Constraint.Visible: boolean
	Property Constraint.Attachment0: Attachment?
	Property Constraint.Attachment1: Attachment?
	Property Constraint.Active: boolean [ReadOnly]
	Property Constraint.Enabled: boolean
	Function Constraint:GetDebugAppliedForce(bodyId: number) -> Vector3 [Deprecated]
	Function Constraint:GetDebugAppliedTorque(bodyId: number) -> Vector3 [Deprecated]
Class AlignOrientation : Constraint
	Property AlignOrientation.Mode: Enum.OrientationAlignmentMode
	Property AlignOrientation.AlignType: Enum.AlignType
	Property AlignOrientation.PrimaryAxisOnly: boolean
	Property AlignOrientation.ReactionTorqueEnabled: boolean
	Property AlignOrientation.RigidityEnabled: boolean
	Property AlignOrientation.MaxAngularVelocity: number
	Property AlignOrientation.MaxTorque: number
	Property AlignOrientation.Responsiveness: number
	Property AlignOrientation.CFrame: CFrame
	Property AlignOrientation.LookAtPosition: Vector3 [NotReplicated]
	Property AlignOrientation.PrimaryAxis: Vector3 [NotReplicated]
	Property AlignOrientation.SecondaryAxis: Vector3 [NotReplicated]
Class AlignPosition : Constraint
	Property AlignPosition.Mode: Enum.PositionAlignmentMode
	Property AlignPosition.ApplyAtCenterOfMass: boolean
	Property AlignPosition.Position: Vector3
	Property AlignPosition.ReactionForceEnabled: boolean
	Property AlignPosition.RigidityEnabled: boolean
	Property AlignPosition.ForceLimitMode: Enum.ForceLimitMode
	Property AlignPosition.ForceRelativeTo: Enum.ActuatorRelativeTo
	Property AlignPosition.MaxAxesForce: Vector3
	Property AlignPosition.MaxForce: number
	Property AlignPosition.MaxVelocity: number
	Property AlignPosition.Responsiveness: number
Class AngularVelocity : Constraint
	Property AngularVelocity.AngularVelocity: Vector3
	Property AngularVelocity.MaxTorque: number
	Property AngularVelocity.ReactionTorqueEnabled: boolean
	Property AngularVelocity.RelativeTo: Enum.ActuatorRelativeTo
Class AnimationConstraint : Constraint [NotBrowsable]
	Property AnimationConstraint.MaxForce: number
	Property AnimationConstraint.MaxTorque: number
	Property AnimationConstraint.C0: CFrame [Hidden] [ReadOnly] [Deprecated]
	Property AnimationConstraint.C1: CFrame [Hidden] [ReadOnly] [Deprecated]
	Property AnimationConstraint.IsKinematic: boolean
	Property AnimationConstraint.Part0: BasePart? [Hidden] [ReadOnly] [Deprecated]
	Property AnimationConstraint.Part1: BasePart? [Hidden] [ReadOnly] [Deprecated]
	Property AnimationConstraint.Transform: CFrame
Class BallSocketConstraint : Constraint
	Property BallSocketConstraint.Radius: number
	Property BallSocketConstraint.LimitsEnabled: boolean
	Property BallSocketConstraint.MaxFrictionTorque: number
	Property BallSocketConstraint.MaxFrictionTorqueXml: number [Hidden] [NotReplicated] [NotScriptable]
	Property BallSocketConstraint.Restitution: number
	Property BallSocketConstraint.TwistLimitsEnabled: boolean
	Property BallSocketConstraint.UpperAngle: number
	Property BallSocketConstraint.TwistLowerAngle: number
	Property BallSocketConstraint.TwistUpperAngle: number
Class HingeConstraint : Constraint
	Property HingeConstraint.Radius: number
	Property HingeConstraint.CurrentAngle: number [ReadOnly]
	Property HingeConstraint.ActuatorType: Enum.ActuatorType
	Property HingeConstraint.LimitsEnabled: boolean
	Property HingeConstraint.LowerAngle: number
	Property HingeConstraint.Restitution: number
	Property HingeConstraint.UpperAngle: number
	Property HingeConstraint.AngularVelocity: number
	Property HingeConstraint.MotorMaxAcceleration: number
	Property HingeConstraint.MotorMaxTorque: number
	Property HingeConstraint.AngularResponsiveness: number
	Property HingeConstraint.AngularSpeed: number
	Property HingeConstraint.ServoMaxTorque: number
	Property HingeConstraint.SoftlockServoUponReachingTarget: boolean [Deprecated]
	Property HingeConstraint.TargetAngle: number
Class LineForce : Constraint
	Property LineForce.ApplyAtCenterOfMass: boolean
	Property LineForce.InverseSquareLaw: boolean
	Property LineForce.Magnitude: number
	Property LineForce.MaxForce: number
	Property LineForce.ReactionForceEnabled: boolean
Class LinearVelocity : Constraint
	Property LinearVelocity.ForceLimitMode: Enum.ForceLimitMode
	Property LinearVelocity.MaxAxesForce: Vector3
	Property LinearVelocity.MaxForce: number
	Property LinearVelocity.MaxPlanarAxesForce: Vector2
	Property LinearVelocity.LineDirection: Vector3
	Property LinearVelocity.LineVelocity: number
	Property LinearVelocity.ForceLimitsEnabled: boolean
	Property LinearVelocity.RelativeTo: Enum.ActuatorRelativeTo
	Property LinearVelocity.VelocityConstraintMode: Enum.VelocityConstraintMode
	Property LinearVelocity.PlaneVelocity: Vector2
	Property LinearVelocity.PrimaryTangentAxis: Vector3
	Property LinearVelocity.SecondaryTangentAxis: Vector3
	Property LinearVelocity.VectorVelocity: Vector3
Class PlaneConstraint : Constraint
Class Plane : PlaneConstraint [Deprecated]
Class RigidConstraint : Constraint
Class RodConstraint : Constraint
	Property RodConstraint.Thickness: number
	Property RodConstraint.CurrentDistance: number [ReadOnly]
	Property RodConstraint.LimitAngle0: number
	Property RodConstraint.LimitAngle1: number
	Property RodConstraint.Length: number
	Property RodConstraint.LimitsEnabled: boolean
Class RopeConstraint : Constraint
	Property RopeConstraint.Thickness: number
	Property RopeConstraint.CurrentDistance: number [ReadOnly]
	Property RopeConstraint.Length: number
	Property RopeConstraint.Restitution: number
	Property RopeConstraint.WinchEnabled: boolean
	Property RopeConstraint.WinchForce: number
	Property RopeConstraint.WinchResponsiveness: number
	Property RopeConstraint.WinchSpeed: number
	Property RopeConstraint.WinchTarget: number
Class SlidingBallConstraint : Constraint [NotCreatable]
	Property SlidingBallConstraint.Size: number
	Property SlidingBallConstraint.CurrentPosition: number [ReadOnly]
	Property SlidingBallConstraint.LowerLimit: number
	Property SlidingBallConstraint.Restitution: number
	Property SlidingBallConstraint.UpperLimit: number
	Property SlidingBallConstraint.MotorMaxAcceleration: number
	Property SlidingBallConstraint.MotorMaxForce: number
	Property SlidingBallConstraint.Velocity: number
	Property SlidingBallConstraint.LinearResponsiveness: number
	Property SlidingBallConstraint.ServoMaxForce: number
	Property SlidingBallConstraint.SoftlockServoUponReachingTarget: boolean [Deprecated]
	Property SlidingBallConstraint.Speed: number
	Property SlidingBallConstraint.TargetPosition: number
	Property SlidingBallConstraint.ActuatorType: Enum.ActuatorType
	Property SlidingBallConstraint.LimitsEnabled: boolean
Class CylindricalConstraint : SlidingBallConstraint
	Property CylindricalConstraint.AngularRestitution: number
	Property CylindricalConstraint.LowerAngle: number
	Property CylindricalConstraint.UpperAngle: number
	Property CylindricalConstraint.AngularVelocity: number
	Property CylindricalConstraint.MotorMaxAngularAcceleration: number
	Property CylindricalConstraint.MotorMaxTorque: number
	Property CylindricalConstraint.AngularResponsiveness: number
	Property CylindricalConstraint.AngularSpeed: number
	Property CylindricalConstraint.ServoMaxTorque: number
	Property CylindricalConstraint.SoftlockAngularServoUponReachingTarget: boolean [Deprecated]
	Property CylindricalConstraint.TargetAngle: number
	Property CylindricalConstraint.RotationAxisVisible: boolean
	Property CylindricalConstraint.AngularActuatorType: Enum.ActuatorType
	Property CylindricalConstraint.AngularLimitsEnabled: boolean
	Property CylindricalConstraint.InclinationAngle: number
	Property CylindricalConstraint.CurrentAngle: number [ReadOnly]
	Property CylindricalConstraint.WorldRotationAxis: Vector3 [ReadOnly]
Class PrismaticConstraint : SlidingBallConstraint
Class SpringConstraint : Constraint
	Property SpringConstraint.Coils: number
	Property SpringConstraint.Radius: number
	Property SpringConstraint.Thickness: number
	Property SpringConstraint.CurrentLength: number [ReadOnly]
	Property SpringConstraint.MaxLength: number
	Property SpringConstraint.MinLength: number
	Property SpringConstraint.Damping: number
	Property SpringConstraint.FreeLength: number
	Property SpringConstraint.LimitsEnabled: boolean
	Property SpringConstraint.MaxForce: number
	Property SpringConstraint.Stiffness: number
Class Torque : Constraint
	Property Torque.RelativeTo: Enum.ActuatorRelativeTo
	Property Torque.Torque: Vector3
Class TorsionSpringConstraint : Constraint
	Property TorsionSpringConstraint.Coils: number
	Property TorsionSpringConstraint.Radius: number
	Property TorsionSpringConstraint.CurrentAngle: number [ReadOnly]
	Property TorsionSpringConstraint.MaxAngle: number
	Property TorsionSpringConstraint.Restitution: number
	Property TorsionSpringConstraint.Damping: number
	Property TorsionSpringConstraint.LimitEnabled: boolean [Hidden] [Deprecated]
	Property TorsionSpringConstraint.LimitsEnabled: boolean
	Property TorsionSpringConstraint.MaxTorque: number
	Property TorsionSpringConstraint.Stiffness: number
Class UniversalConstraint : Constraint
	Property UniversalConstraint.Radius: number
	Property UniversalConstraint.MaxAngle: number
	Property UniversalConstraint.Restitution: number
	Property UniversalConstraint.LimitsEnabled: boolean
Class VectorForce : Constraint
	Property VectorForce.ApplyAtCenterOfMass: boolean
	Property VectorForce.Force: Vector3
	Property VectorForce.RelativeTo: Enum.ActuatorRelativeTo
Class ContentProvider : Instance [NotCreatable] [Service] [NotReplicated]
	Property ContentProvider.BaseUrl: string [ReadOnly]
	Property ContentProvider.RequestQueueSize: number [ReadOnly]
	Function ContentProvider:GetAssetFetchStatus(contentId: ContentId) -> Enum.AssetFetchStatus
	Function ContentProvider:GetAssetFetchStatusChangedSignal(contentId: ContentId) -> RBXScriptSignal
	Function ContentProvider:GetDependencyContentIds(root: Instance) -> { any } {RobloxScriptSecurity}
	Function ContentProvider:GetFailedRequests() -> { any } {RobloxScriptSecurity}
	Function ContentProvider:ListEncryptedAssets() -> { any }
	Function ContentProvider:Preload(contentId: ContentId) -> () [Deprecated]
	Function ContentProvider:PreloadAsync(contentIdList: { any }, callbackFunction: ((...any) -> ...any)? = nil) -> () [Yields]
	Function ContentProvider:RegisterDefaultEncryptionKey(encryptionKey: string) -> ()
	Function ContentProvider:RegisterDefaultSessionKey(sessionKey: string) -> ()
	Function ContentProvider:RegisterEncryptedAsset(assetId: ContentId, encryptionKey: string) -> ()
	Function ContentProvider:RegisterSessionEncryptedAsset(contentId: ContentId, sessionKey: string) -> ()
	Function ContentProvider:SetBaseUrl(url: string) -> () {LocalUserSecurity}
	Function ContentProvider:UnregisterDefaultEncryptionKey() -> ()
	Function ContentProvider:UnregisterEncryptedAsset(assetId: ContentId) -> ()
	Event ContentProvider.AssetFetchFailed(assetId: ContentId)
Class ContextActionService : Instance [NotCreatable] [Service]
	Function ContextActionService:BindAction(actionName: string, functionToBind: (...any) -> ...any, createTouchButton: boolean, inputTypes: ...any) -> ()
	Function ContextActionService:BindActionAtPriority(actionName: string, functionToBind: (...any) -> ...any, createTouchButton: boolean, priorityLevel: number, inputTypes: ...any) -> ()
	Function ContextActionService:BindActionToInputTypes(actionName: string, functionToBind: (...any) -> ...any, createTouchButton: boolean, inputTypes: ...any) -> () [Deprecated]
	Function ContextActionService:BindActivate(userInputTypeForActivation: Enum.UserInputType, keyCodesForActivation: ...any) -> ()
	Function ContextActionService:BindCoreAction(actionName: string, functionToBind: (...any) -> ...any, createTouchButton: boolean, inputTypes: ...any) -> () {RobloxScriptSecurity}
	Function ContextActionService:BindCoreActionAtPriority(actionName: string, functionToBind: (...any) -> ...any, createTouchButton: boolean, priorityLevel: number, inputTypes: ...any) -> () {RobloxScriptSecurity}
	Function ContextActionService:BindCoreActivate(userInputTypeForActivation: Enum.UserInputType, keyCodesForActivation: ...any) -> () {RobloxScriptSecurity}
	Function ContextActionService:CallFunction(actionName: string, state: Enum.UserInputState, inputObject: Instance) -> ...any {RobloxScriptSecurity}
	Function ContextActionService:FireActionButtonFoundSignal(actionName: string, actionButton: Instance) -> () {RobloxScriptSecurity}
	Function ContextActionService:GetAllBoundActionInfo() -> { [string]: any }
	Function ContextActionService:GetAllBoundCoreActionInfo() -> { [string]: any } {RobloxScriptSecurity}
	Function ContextActionService:GetBoundActionInfo(actionName: string) -> { [string]: any }
	Function ContextActionService:GetBoundCoreActionInfo(actionName: string) -> { [string]: any } {RobloxScriptSecurity}
	Function ContextActionService:GetButton(actionName: string) -> Instance? [Yields]
	Function ContextActionService:GetCurrentLocalToolIcon() -> string
	Function ContextActionService:SetDescription(actionName: string, description: string) -> ()
	Function ContextActionService:SetImage(actionName: string, image: string) -> ()
	Function ContextActionService:SetPosition(actionName: string, position: UDim2) -> ()
	Function ContextActionService:SetTitle(actionName: string, title: string) -> ()
	Function ContextActionService:UnbindAction(actionName: string) -> ()
	Function ContextActionService:UnbindActivate(userInputTypeForActivation: Enum.UserInputType, keyCodeForActivation: Enum.KeyCode? = "Unknown") -> ()
	Function ContextActionService:UnbindAllActions() -> ()
	Function ContextActionService:UnbindCoreAction(actionName: string) -> () {RobloxScriptSecurity}
	Function ContextActionService:UnbindCoreActivate(userInputTypeForActivation: Enum.UserInputType, keyCodeForActivation: Enum.KeyCode? = "Unknown") -> () {RobloxScriptSecurity}
	Event ContextActionService.BoundActionAdded(actionAdded: string, createTouchButton: boolean, functionInfoTable: { [string]: any }, isCore: boolean) {RobloxScriptSecurity}
	Event ContextActionService.BoundActionChanged(actionChanged: string, changeName: string, changeTable: { [string]: any }) {RobloxScriptSecurity}
	Event ContextActionService.BoundActionRemoved(actionRemoved: string, functionInfoTable: { [string]: any }, isCore: boolean) {RobloxScriptSecurity}
	Event ContextActionService.GetActionButtonEvent(actionName: string) {RobloxScriptSecurity}
	Event ContextActionService.LocalToolEquipped(toolEquipped: Instance)
	Event ContextActionService.LocalToolUnequipped(toolUnequipped: Instance)
Class Controller : Instance [NotCreatable]
	Function Controller:BindButton(button: Enum.Button, caption: string) -> ()
	Function Controller:GetButton(button: Enum.Button) -> boolean
	Function Controller:UnbindButton(button: Enum.Button) -> ()
	Event Controller.ButtonChanged(button: Enum.Button)
Class HumanoidController : Controller
Class SkateboardController : Controller
	Property SkateboardController.Steer: number [ReadOnly]
	Property SkateboardController.Throttle: number [ReadOnly]
	Event SkateboardController.AxisChanged(axis: string)
Class VehicleController : Controller
Class ControllerBase : Instance [NotCreatable]
	Property ControllerBase.BalanceRigidityEnabled: boolean
	Property ControllerBase.Active: boolean [ReadOnly]
	Property ControllerBase.MoveSpeedFactor: number
Class AirController : ControllerBase
	Property AirController.BalanceMaxTorque: number
	Property AirController.BalanceSpeed: number
	Property AirController.LinearImpulse: Vector3 [Hidden] [NotReplicated]
	Property AirController.MaintainLinearMomentum: boolean
	Property AirController.MoveMaxForce: number
	Property AirController.MaintainAngularMomentum: boolean
	Property AirController.TurnMaxTorque: number
	Property AirController.TurnSpeedFactor: number
Class ClimbController : ControllerBase
	Property ClimbController.BalanceMaxTorque: number
	Property ClimbController.BalanceSpeed: number
	Property ClimbController.AccelerationTime: number
	Property ClimbController.MoveMaxForce: number
Class GroundController : ControllerBase
	Property GroundController.AccelerationLean: number
	Property GroundController.BalanceMaxTorque: number
	Property GroundController.BalanceSpeed: number
	Property GroundController.AccelerationTime: number
	Property GroundController.DecelerationTime: number
	Property GroundController.Friction: number
	Property GroundController.FrictionWeight: number
	Property GroundController.GroundOffset: number
	Property GroundController.StandForce: number
	Property GroundController.StandSpeed: number
	Property GroundController.TurnSpeedFactor: number
Class SwimController : ControllerBase
	Property SwimController.PitchMaxTorque: number
	Property SwimController.PitchSpeedFactor: number
	Property SwimController.RollMaxTorque: number
	Property SwimController.RollSpeedFactor: number
	Property SwimController.AccelerationTime: number
Class ControllerManager : Instance
	Property ControllerManager.ActiveController: ControllerBase?
	Property ControllerManager.BaseMoveSpeed: number
	Property ControllerManager.BaseTurnSpeed: number
	Property ControllerManager.ClimbSensor: ControllerSensor?
	Property ControllerManager.GroundSensor: ControllerSensor?
	Property ControllerManager.RootPart: BasePart?
	Property ControllerManager.FacingDirection: Vector3
	Property ControllerManager.MovingDirection: Vector3
	Property ControllerManager.UpDirection: Vector3
Class ControllerService : Instance [NotCreatable] [Service] [NotReplicated]
Class ConversationalAIAcceptanceService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ConversationalAIAcceptanceService:AlternativeAssetSelected(requestId: string, previousAssetId: number, assetId: number) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:AssetInserted(requestId: string, assetId: number) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:CodeRunnerActivated(requestId: string, code: string, serverAutorun: boolean, autorunEnabled: boolean, autoExpandDropdowns: boolean) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:CodeRunnerCompleted(requestId: string, success: boolean, errorMessage: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:CodeRunnerUndone(requestId: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:DataModelHierarchyLatency(requestId: string, latency: number) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:ErrorTelemetry(requestId: string, errorId: string, errorType: string, errorMessage: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:InstanceInserted(requestId: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:RecordingActionEnded(requestId: string, waypointName: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:ReportJSONEncodeFailure(instanceName: string, className: string) -> () {RobloxScriptSecurity}
	Function ConversationalAIAcceptanceService:SendCommandErrorTelemetry(requestId: string, commandName: string, errorMessage: string) -> () {RobloxScriptSecurity}
Class CookiesService : Instance [NotCreatable] [Service]
Class CorePackages : Instance [NotCreatable] [Service] [NotReplicated]
Class CoreScriptDebuggingManagerHelper : Instance [NotCreatable] [Service]
Class CoreScriptSyncService : Instance [NotCreatable] [Service] [NotReplicated]
	Function CoreScriptSyncService:GetScriptFilePath(script: Instance) -> any {RobloxScriptSecurity}
Class CreationDBService : Instance [NotCreatable] [Service] [NotReplicated]
Class CreatorStoreService : Instance [NotCreatable] [Service]
Class CrossDMScriptChangeListener : Instance [NotCreatable] [Service] [NotReplicated]
	Function CrossDMScriptChangeListener:IsWatchingScriptLine(scriptRef: string, lineNumber: number) -> boolean {RobloxScriptSecurity}
	Function CrossDMScriptChangeListener:StartWatchingScriptLine(scriptRef: string, debuggerConnectionId: number, lineNumber: number) -> () {RobloxScriptSecurity}
	Event CrossDMScriptChangeListener.GuidLineContentsChanged(guid: string, lineNumber: number, contents: string) {RobloxScriptSecurity}
	Event CrossDMScriptChangeListener.GuidNameChanged(guid: string, fullName: string) {RobloxScriptSecurity}
Class CustomEvent : Instance [Deprecated]
	Property CustomEvent.PersistedCurrentValue: number [Hidden] [NotScriptable] [Deprecated]
	Function CustomEvent:GetAttachedReceivers() -> { Instance } [Deprecated]
	Function CustomEvent:SetValue(newValue: number) -> () [Deprecated]
	Event CustomEvent.ReceiverConnected(receiver: Instance) [Deprecated]
	Event CustomEvent.ReceiverDisconnected(receiver: Instance) [Deprecated]
Class CustomEventReceiver : Instance [Deprecated]
	Property CustomEventReceiver.Source: Instance? [Deprecated]
	Function CustomEventReceiver:GetCurrentValue() -> number [Deprecated]
	Event CustomEventReceiver.EventConnected(event: Instance) [Deprecated]
	Event CustomEventReceiver.EventDisconnected(event: Instance) [Deprecated]
	Event CustomEventReceiver.SourceValueChanged(newValue: number) [Deprecated]
Class DataModelMesh : Instance [NotCreatable] [NotBrowsable]
	Property DataModelMesh.Offset: Vector3
	Property DataModelMesh.Scale: Vector3
	Property DataModelMesh.VertexColor: Vector3
Class BevelMesh : DataModelMesh [NotCreatable] [NotBrowsable] [Deprecated]
	Property BevelMesh.Bevel: number [Hidden] [NotScriptable] [Deprecated]
	Property BevelMesh.Bevel Roundness: number [Hidden] [NotScriptable] [Deprecated]
	Property BevelMesh.Bulge: number [Hidden] [NotScriptable] [Deprecated]
Class BlockMesh : BevelMesh
Class CylinderMesh : BevelMesh [Deprecated]
Class EditableMesh : DataModelMesh
	Property EditableMesh.IsReplicatedCopy: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property EditableMesh.MeshData: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
	Property EditableMesh.SkinningEnabled: boolean
	Function EditableMesh:AddColor(color: Color3, alpha: number) -> number
	Function EditableMesh:AddNormal(normal: Vector3?) -> number
	Function EditableMesh:AddTriangle(vertexId0: number, vertexId1: number, vertexId2: number) -> number
	Function EditableMesh:AddUV(uv: Vector2) -> number
	Function EditableMesh:AddVertex(p: Vector3) -> number
	Function EditableMesh:CreateMeshPartAsync(options: { [string]: any }? = nil) -> MeshPart [Yields]
	Function EditableMesh:FindClosestPointOnSurface(point: Vector3) -> ...any
	Function EditableMesh:FindClosestVertex(toThisPoint: Vector3) -> number
	Function EditableMesh:FindVerticesWithinSphere(center: Vector3, radius: number) -> { any }
	Function EditableMesh:GetAdjacentFaces(faceId: number) -> { any }
	Function EditableMesh:GetAdjacentTriangles(triangleId: number) -> { any } [Deprecated]
	Function EditableMesh:GetAdjacentVertices(vertexId: number) -> { any }
	Function EditableMesh:GetColor(colorId: number) -> Color3?
	Function EditableMesh:GetColorAlpha(colorId: number) -> number?
	Function EditableMesh:GetColors() -> { any } [CustomLuaState]
	Function EditableMesh:GetFaceColors(faceId: number) -> { any } [CustomLuaState]
	Function EditableMesh:GetFaceNormals(faceId: number) -> { any } [CustomLuaState]
	Function EditableMesh:GetFaceUVs(faceId: number) -> { any } [CustomLuaState]
	Function EditableMesh:GetFaceVertices(faceId: number) -> { any } [CustomLuaState]
	Function EditableMesh:GetFaces() -> { any } [CustomLuaState]
	Function EditableMesh:GetFacesWithAttribute(id: number) -> { any }
	Function EditableMesh:GetNormal(normalId: number) -> Vector3?
	Function EditableMesh:GetNormals() -> { any } [CustomLuaState]
	Function EditableMesh:GetPosition(vertexId: number) -> Vector3
	Function EditableMesh:GetTriangleVertices(triangleId: number) -> ...any [Deprecated]
	Function EditableMesh:GetTriangles() -> { any } [Deprecated]
	Function EditableMesh:GetUV(uvId: number) -> Vector2?
	Function EditableMesh:GetUVs() -> { any } [CustomLuaState]
	Function EditableMesh:GetVertexColor(vertexId: number) -> Color3 [Deprecated]
	Function EditableMesh:GetVertexColorAlpha(vertexId: number) -> number [Deprecated]
	Function EditableMesh:GetVertexNormal(vertexId: number) -> Vector3 [Deprecated]
	Function EditableMesh:GetVertices() -> { any }
	Function EditableMesh:GetVerticesWithAttribute(id: number) -> { any }
	Function EditableMesh:IdDebugString(id: number) -> string
	Function EditableMesh:MergeVertices(mergeTolerance: number) -> { [string]: any }
	Function EditableMesh:RaycastLocal(origin: Vector3, direction: Vector3) -> ...any
	Function EditableMesh:RemoveFace(faceId: number) -> ()
	Function EditableMesh:RemoveTriangle(triangleId: number) -> () [Deprecated]
	Function EditableMesh:RemoveUnused() -> { any }
	Function EditableMesh:RemoveVertex(vertexId: number) -> () [Deprecated]
	Function EditableMesh:ResetNormal(normalId: number) -> ()
	Function EditableMesh:SetColor(colorId: number, color: Color3) -> ()
	Function EditableMesh:SetColorAlpha(colorId: number, alpha: number) -> ()
	Function EditableMesh:SetFaceColors(faceId: number, ids: { any }) -> () [CustomLuaState]
	Function EditableMesh:SetFaceNormals(faceId: number, ids: { any }) -> () [CustomLuaState]
	Function EditableMesh:SetFaceUVs(faceId: number, ids: { any }) -> () [CustomLuaState]
	Function EditableMesh:SetFaceVertices(faceId: number, ids: { any }) -> () [CustomLuaState]
	Function EditableMesh:SetNormal(normalId: number, normal: Vector3) -> ()
	Function EditableMesh:SetPosition(vertexId: number, p: Vector3) -> ()
	Function EditableMesh:SetUV(uvId: number, uv: Vector2) -> ()
	Function EditableMesh:SetVertexColor(vertexId: number, color: Color3) -> () [Deprecated]
	Function EditableMesh:SetVertexColorAlpha(vertexId: number, alpha: number) -> () [Deprecated]
	Function EditableMesh:SetVertexNormal(vertexId: number, vnormal: Vector3) -> () [Deprecated]
	Function EditableMesh:Triangulate() -> ()
Class RobloxEditableMesh : EditableMesh
	Property RobloxEditableMesh.MeshDataSerialize: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class FileMesh : DataModelMesh
	Property FileMesh.MeshId: ContentId
	Property FileMesh.TextureId: ContentId
Class SpecialMesh : FileMesh
	Property SpecialMesh.MeshType: Enum.MeshType
Class DataModelPatchService : Instance [NotCreatable] [Service] [NotReplicated]
	Function DataModelPatchService:GetLuaVersion(patchName: string) -> string {RobloxScriptSecurity}
	Function DataModelPatchService:GetPatch(patchName: string) -> Instance? {RobloxScriptSecurity}
	Function DataModelPatchService:RegisterPatch(patchName: string, behaviorName: string, localConfigPath: string, userId: number) -> () {RobloxScriptSecurity}
	Function DataModelPatchService:UpdatePatch(userId: number, patchName: string, callbackFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
Class DataModelSession : Instance [NotCreatable]
	Property DataModelSession.CurrentDataModelType: Enum.StudioDataModelType {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DataModelSession.SessionId: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Event DataModelSession.CurrentDataModelTypeAboutToChange(dataModelType: Enum.StudioDataModelType) {RobloxScriptSecurity}
	Event DataModelSession.CurrentDataModelTypeChanged() {RobloxScriptSecurity}
Class DataStoreGetOptions : Instance [NotReplicated]
	Property DataStoreGetOptions.UseCache: boolean
Class DataStoreIncrementOptions : Instance [NotReplicated]
	Function DataStoreIncrementOptions:GetMetadata() -> { [string]: any }
	Function DataStoreIncrementOptions:SetMetadata(attributes: { [string]: any }) -> ()
Class DataStoreInfo : Instance [NotCreatable] [NotReplicated]
	Property DataStoreInfo.CreatedTime: number [ReadOnly]
	Property DataStoreInfo.DataStoreName: string [ReadOnly]
	Property DataStoreInfo.UpdatedTime: number [ReadOnly]
Class DataStoreKey : Instance [NotCreatable] [NotReplicated]
	Property DataStoreKey.KeyName: string [ReadOnly]
Class DataStoreKeyInfo : Instance [NotCreatable] [NotReplicated]
	Property DataStoreKeyInfo.CreatedTime: number [ReadOnly]
	Property DataStoreKeyInfo.UpdatedTime: number [ReadOnly]
	Property DataStoreKeyInfo.Version: string [ReadOnly]
	Function DataStoreKeyInfo:GetMetadata() -> { [string]: any }
	Function DataStoreKeyInfo:GetUserIds() -> { any }
Class DataStoreObjectVersionInfo : Instance [NotCreatable] [NotReplicated]
	Property DataStoreObjectVersionInfo.CreatedTime: number [ReadOnly]
	Property DataStoreObjectVersionInfo.IsDeleted: boolean [ReadOnly]
	Property DataStoreObjectVersionInfo.Version: string [ReadOnly]
Class DataStoreOptions : Instance [NotReplicated]
	Property DataStoreOptions.AllScopes: boolean
	Function DataStoreOptions:SetExperimentalFeatures(experimentalFeatures: { [string]: any }) -> ()
Class DataStoreService : Instance [NotCreatable] [Service] [NotReplicated]
	Property DataStoreService.AutomaticRetry: boolean {LocalUserSecurity} [NotReplicated]
	Property DataStoreService.LegacyNamingScheme: boolean {LocalUserSecurity} [Hidden] [Deprecated]
	Function DataStoreService:GetDataStore(name: string, scope: string? = "global", options: Instance? = nil) -> DataStore
	Function DataStoreService:GetGlobalDataStore() -> DataStore
	Function DataStoreService:GetOrderedDataStore(name: string, scope: string? = "global") -> OrderedDataStore
	Function DataStoreService:GetRequestBudgetForRequestType(requestType: Enum.DataStoreRequestType) -> number
	Function DataStoreService:ListDataStoresAsync(prefix: string? = "", pageSize: number? = 0, cursor: string? = "") -> DataStoreListingPages [Yields]
Class DataStoreSetOptions : Instance [NotReplicated]
	Function DataStoreSetOptions:GetMetadata() -> { [string]: any }
	Function DataStoreSetOptions:SetMetadata(attributes: { [string]: any }) -> ()
Class Debris : Instance [NotCreatable] [Service]
	Property Debris.MaxItems: number [Deprecated]
	Function Debris:AddItem(item: Instance, lifetime: number? = 10) -> ()
	Function Debris:SetLegacyMaxItems(enabled: boolean) -> () {LocalUserSecurity}
Class DebugSettings : Instance [NotCreatable] [Settings] [NotBrowsable]
	Property DebugSettings.TickCountPreciseOverride: Enum.TickCountSampleMethod
	Property DebugSettings.IsScriptStackTracingEnabled: boolean
	Property DebugSettings.ReportSoundWarnings: boolean
	Property DebugSettings.DataModel: number [ReadOnly]
	Property DebugSettings.InstanceCount: number [ReadOnly]
	Property DebugSettings.JobCount: number [ReadOnly]
	Property DebugSettings.PlayerCount: number [ReadOnly]
	Property DebugSettings.RobloxVersion: string [ReadOnly]
Class DebuggablePluginWatcher : Instance [NotCreatable] [Service] [NotReplicated]
Class DebuggerBreakpoint : Instance [NotCreatable]
	Property DebuggerBreakpoint.Condition: string
	Property DebuggerBreakpoint.ContinueExecution: boolean
	Property DebuggerBreakpoint.IsEnabled: boolean
	Property DebuggerBreakpoint.Line: number [ReadOnly]
	Property DebuggerBreakpoint.LogExpression: string
	Property DebuggerBreakpoint.isContextDependentBreakpoint: boolean
Class DebuggerConnection : Instance [NotCreatable] [NotReplicated]
	Property DebuggerConnection.ErrorMessage: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerConnection.Id: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerConnection.HasError: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerConnection.IsPaused: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function DebuggerConnection:AddBreakpoint(script: string, line: number, breakpoint: Breakpoint) -> () {RobloxScriptSecurity}
	Function DebuggerConnection:Close() -> () {RobloxScriptSecurity}
	Function DebuggerConnection:EvaluateWatch(expression: string, frame: StackFrame, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:GetFrameById(id: number) -> StackFrame {RobloxScriptSecurity}
	Function DebuggerConnection:GetSource(scriptRef: string, status: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:GetThreadById(id: number) -> ThreadState {RobloxScriptSecurity}
	Function DebuggerConnection:GetThreads(callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:GetVariableById(id: number) -> DebuggerVariable {RobloxScriptSecurity}
	Function DebuggerConnection:Pause(thread: ThreadState, status: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:Populate(instance: Instance, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:RemoveBreakpoint(breakpoint: Breakpoint) -> () {RobloxScriptSecurity}
	Function DebuggerConnection:Resume(thread: ThreadState, status: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:SetExceptionBreakMode(breakMode: Enum.DebuggerExceptionBreakMode, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:SetVariable(variable: DebuggerVariable, value: string, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:Step(thread: ThreadState, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:StepIn(thread: ThreadState, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:StepOut(thread: ThreadState, callback: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function DebuggerConnection:UpdateSelectedFrame(threadId: number, frameNumber: number) -> () {RobloxScriptSecurity}
	Event DebuggerConnection.BreakpointAdded(breakpoint: Breakpoint) {RobloxScriptSecurity}
	Event DebuggerConnection.BreakpointChanged(breakpoint: Breakpoint) {RobloxScriptSecurity}
	Event DebuggerConnection.BreakpointRemoved(breakpoint: Breakpoint, reason: Enum.BreakpointRemoveReason) {RobloxScriptSecurity}
	Event DebuggerConnection.Paused(pausedState: PausedState, reason: Enum.DebuggerPauseReason) {RobloxScriptSecurity}
	Event DebuggerConnection.Resumed(pausedState: PausedState) {RobloxScriptSecurity}
Class LocalDebuggerConnection : DebuggerConnection [NotCreatable] [NotReplicated]
Class DebuggerConnectionManager : Instance [NotCreatable] [Service] [NotReplicated]
	Property DebuggerConnectionManager.Timeout: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function DebuggerConnectionManager:ConnectLocal(dataModel: DataModel) -> number {RobloxScriptSecurity}
	Function DebuggerConnectionManager:ConnectRemote(host: string, port: number) -> number {RobloxScriptSecurity}
	Function DebuggerConnectionManager:FocusConnection(connection: DebuggerConnection) -> () {RobloxScriptSecurity}
	Function DebuggerConnectionManager:GetAvailableConnection() -> DebuggerConnection {RobloxScriptSecurity}
	Function DebuggerConnectionManager:GetConnectionById(id: number) -> DebuggerConnection {RobloxScriptSecurity}
	Event DebuggerConnectionManager.ConnectionEnded(connection: DebuggerConnection, reason: Enum.DebuggerEndReason) {RobloxScriptSecurity}
	Event DebuggerConnectionManager.ConnectionStarted(connection: DebuggerConnection) {RobloxScriptSecurity}
	Event DebuggerConnectionManager.FocusChanged(connection: DebuggerConnection) {RobloxScriptSecurity}
Class DebuggerLuaResponse : Instance [NotCreatable] [NotReplicated]
	Property DebuggerLuaResponse.Message: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerLuaResponse.RequestId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerLuaResponse.IsError: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerLuaResponse.IsSuccess: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerLuaResponse.Status: Enum.DebuggerStatus {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function DebuggerLuaResponse:GetArg() -> any {RobloxScriptSecurity}
Class DebuggerManager : Instance [NotCreatable] [Service] [NotReplicated]
	Property DebuggerManager.DebuggingEnabled: boolean [ReadOnly]
	Function DebuggerManager:AddDebugger(script: Instance) -> Instance?
	Function DebuggerManager:EnableDebugging() -> () {LocalUserSecurity}
	Function DebuggerManager:GetDebuggers() -> { Instance }
	Function DebuggerManager:Resume() -> ()
	Function DebuggerManager:StepIn() -> () [Deprecated]
	Function DebuggerManager:StepOut() -> () [Deprecated]
	Function DebuggerManager:StepOver() -> () [Deprecated]
	Event DebuggerManager.DebuggerAdded(debugger: Instance)
	Event DebuggerManager.DebuggerRemoved(debugger: Instance)
Class DebuggerUIService : Instance [NotCreatable] [Service] [NotReplicated]
	Function DebuggerUIService:EditBreakpoint(metaBreakpointId: number) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:EditWatch(expression: string) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:IsConnectionForPlayDataModel(debuggerConnectionId: number) -> boolean {RobloxScriptSecurity}
	Function DebuggerUIService:OpenExceptionMessagePopup(exceptionMessage: string, pausedLine: number) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:OpenScriptAtLine(guid: string, debuggerConnectionId: number, line: number, showErrorOnFail: boolean) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:Pause() -> () {RobloxScriptSecurity}
	Function DebuggerUIService:RemoveScriptLineMarkers(debuggerConnectionId: number, allMarkers: boolean) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:Resume() -> () {RobloxScriptSecurity}
	Function DebuggerUIService:SetCurrentThreadId(debuggerThreadId: number) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:SetScriptLineMarker(guid: string, debuggerConnectionId: number, line: number, lineMarkerType: boolean) -> () {RobloxScriptSecurity}
	Function DebuggerUIService:SetWatchExpressions(expressions: { any }) -> () {RobloxScriptSecurity}
	Event DebuggerUIService.ExpressionAdded(expression: string) {RobloxScriptSecurity}
	Event DebuggerUIService.ExpressionsCleared() {RobloxScriptSecurity}
Class DebuggerVariable : Instance [NotCreatable] [NotReplicated]
	Property DebuggerVariable.Name: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerVariable.Type: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerVariable.Value: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerVariable.VariableId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerVariable.VariablesCount: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DebuggerVariable.Populated: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function DebuggerVariable:GetVariableByIndex(index: number) -> DebuggerVariable {RobloxScriptSecurity}
	Function DebuggerVariable:GetVariableByName(name: string) -> DebuggerVariable {RobloxScriptSecurity}
Class DebuggerWatch : Instance
	Property DebuggerWatch.Expression: string
Class DeviceIdService : Instance [NotCreatable] [Service] [NotReplicated]
	Function DeviceIdService:GetDeviceId() -> string {RobloxScriptSecurity}
Class Dialog : Instance
	Property Dialog.BehaviorType: Enum.DialogBehaviorType
	Property Dialog.ConversationDistance: number
	Property Dialog.GoodbyeChoiceActive: boolean
	Property Dialog.GoodbyeDialog: string
	Property Dialog.InUse: boolean
	Property Dialog.InitialPrompt: string
	Property Dialog.Purpose: Enum.DialogPurpose
	Property Dialog.Tone: Enum.DialogTone
	Property Dialog.TriggerDistance: number
	Property Dialog.TriggerOffset: Vector3
	Function Dialog:GetCurrentPlayers() -> { Instance }
	Function Dialog:SetPlayerIsUsing(player: Instance, isUsing: boolean) -> () {RobloxScriptSecurity}
	Function Dialog:SignalDialogChoiceSelected(player: Instance, dialogChoice: Instance) -> () {RobloxScriptSecurity}
	Event Dialog.DialogChoiceSelected(player: Instance, dialogChoice: Instance)
Class DialogChoice : Instance
	Property DialogChoice.GoodbyeChoiceActive: boolean
	Property DialogChoice.GoodbyeDialog: string
	Property DialogChoice.ResponseDialog: string
	Property DialogChoice.UserDialog: string
Class DraftsService : Instance [NotCreatable] [Service] [NotReplicated]
	Function DraftsService:CommitEdits(scripts: { Instance }) -> () {RobloxScriptSecurity} [Yields]
	Function DraftsService:DiscardEdits(scripts: { Instance }) -> () {RobloxScriptSecurity}
	Function DraftsService:GetDraftStatus(script: Instance) -> Enum.DraftStatusCode {RobloxScriptSecurity}
	Function DraftsService:GetDrafts() -> { Instance } {RobloxScriptSecurity} [Yields]
	Function DraftsService:GetEditors(script: Instance) -> { Instance } {RobloxScriptSecurity}
	Function DraftsService:RestoreScripts(scripts: { Instance }) -> () {RobloxScriptSecurity}
	Function DraftsService:ShowDiffsAgainstBase(scripts: { Instance }) -> () {RobloxScriptSecurity}
	Function DraftsService:ShowDiffsAgainstServer(scripts: { Instance }) -> () {RobloxScriptSecurity}
	Function DraftsService:ShowSourceDiffsAgainstCurrent(sources: { any }, scripts: { Instance }) -> () {RobloxScriptSecurity}
	Function DraftsService:UpdateToLatestVersion(scripts: { Instance }) -> () {RobloxScriptSecurity} [Yields]
	Event DraftsService.CommitStatusChanged(script: Instance, status: Enum.DraftStatusCode) {RobloxScriptSecurity}
	Event DraftsService.DraftAdded(script: Instance) {RobloxScriptSecurity}
	Event DraftsService.DraftRemoved(script: Instance) {RobloxScriptSecurity}
	Event DraftsService.DraftStatusChanged(script: Instance) {RobloxScriptSecurity}
	Event DraftsService.EditorsListChanged(script: Instance) {RobloxScriptSecurity}
	Event DraftsService.UpdateStatusChanged(script: Instance, status: Enum.DraftStatusCode) {RobloxScriptSecurity}
Class Dragger : Instance
	Function Dragger:AxisRotate(axis: Enum.Axis? = "X") -> ()
	Function Dragger:MouseDown(mousePart: Instance, pointOnMousePart: Vector3, parts: { Instance }) -> ()
	Function Dragger:MouseMove(mouseRay: Ray) -> ()
	Function Dragger:MouseUp() -> ()
Class DraggerService : Instance [NotCreatable] [Service] [NotReplicated]
	Property DraggerService.AlignDraggedObjects: boolean [ReadOnly]
	Property DraggerService.AngleSnapEnabled: boolean [ReadOnly]
	Property DraggerService.AngleSnapIncrement: number [ReadOnly]
	Property DraggerService.AnimateHover: boolean [ReadOnly]
	Property DraggerService.CollisionsEnabled: boolean [ReadOnly]
	Property DraggerService.DraggerCoordinateSpace: Enum.DraggerCoordinateSpace [ReadOnly]
	Property DraggerService.DraggerMovementMode: Enum.DraggerMovementMode [ReadOnly]
	Property DraggerService.GeometrySnapColor: Color3 [ReadOnly]
	Property DraggerService.HoverAnimateFrequency: number [ReadOnly]
	Property DraggerService.HoverLineThickness: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DraggerService.HoverThickness: number [ReadOnly]
	Property DraggerService.JointsEnabled: boolean [ReadOnly]
	Property DraggerService.LinearSnapEnabled: boolean [ReadOnly]
	Property DraggerService.LinearSnapIncrement: number [ReadOnly]
	Property DraggerService.PartSnapEnabled: boolean {RobloxScriptSecurity} [ReadOnly]
	Property DraggerService.PivotSnapToGeometry: boolean {RobloxScriptSecurity} [ReadOnly]
	Property DraggerService.ShowHover: boolean [ReadOnly]
	Property DraggerService.ShowPivotIndicator: boolean [NotReplicated]
Class EditableImage : Instance
	Property EditableImage.ImageData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property EditableImage.IsReplicatedCopy: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property EditableImage.Size: Vector2
	Function EditableImage:Copy(min: Vector2, max: Vector2) -> EditableImage
	Function EditableImage:Crop(min: Vector2, max: Vector2) -> ()
	Function EditableImage:DrawCircle(center: Vector2, radius: number, color: Color3, transparency: number, combineType: Enum.ImageCombineType) -> ()
	Function EditableImage:DrawImage(position: Vector2, image: EditableImage, combineType: Enum.ImageCombineType) -> ()
	Function EditableImage:DrawLine(p1: Vector2, p2: Vector2, color: Color3, transparency: number, combineType: Enum.ImageCombineType) -> ()
	Function EditableImage:DrawProjectionImage(mesh: EditableMesh, projection: { [string]: any }, brushConfig: { [string]: any }) -> ()
	Function EditableImage:DrawRectangle(position: Vector2, size: Vector2, color: Color3, transparency: number, combineType: Enum.ImageCombineType) -> ()
	Function EditableImage:DrawTriangle(p1: Vector2, p2: Vector2, p3: Vector2, color: Color3, transparency: number) -> () {RobloxScriptSecurity}
	Function EditableImage:ReadPixels(position: Vector2, size: Vector2) -> { any } [CustomLuaState] {🧬Safe}
	Function EditableImage:ReadPixelsBuffer(position: Vector2, size: Vector2) -> buffer [CustomLuaState] {🧬Safe}
	Function EditableImage:Resize(size: Vector2) -> ()
	Function EditableImage:Rotate(degrees: number, changeSize: boolean) -> ()
	Function EditableImage:WritePixels(position: Vector2, size: Vector2, pixels: { any }) -> () [CustomLuaState]
	Function EditableImage:WritePixelsBuffer(position: Vector2, size: Vector2, buffer: buffer) -> () [CustomLuaState]
Class RobloxEditableImage : EditableImage
	Property RobloxEditableImage.ImageDataSerialize: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class EditableService : Instance [NotCreatable] [Service]
	Property EditableService.EditableStatus: Enum.EditableStatus {RobloxSecurity} [Hidden] [NotScriptable]
Class EulerRotationCurve : Instance
	Property EulerRotationCurve.RotationOrder: Enum.RotationOrder
	Function EulerRotationCurve:GetAnglesAtTime(time: number) -> { any }
	Function EulerRotationCurve:GetRotationAtTime(time: number) -> CFrame
	Function EulerRotationCurve:X() -> FloatCurve
	Function EulerRotationCurve:Y() -> FloatCurve
	Function EulerRotationCurve:Z() -> FloatCurve
Class EventIngestService : Instance [NotCreatable] [Service]
	Function EventIngestService:SendEventDeferred(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function EventIngestService:SendEventImmediately(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function EventIngestService:SetRBXEvent(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function EventIngestService:SetRBXEventStream(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
Class ExampleService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ExampleService:PrintHello() -> () {RobloxScriptSecurity}
	Event ExampleService.OnPolo(message: string) {RobloxScriptSecurity}
Class ExperienceAuthService : Instance [NotCreatable] [Service]
	Function ExperienceAuthService:ScopeCheckUIComplete(guid: string, scopes: { any }, result: Enum.ScopeCheckResult, metadata: { [string]: any }) -> () {RobloxScriptSecurity}
	Event ExperienceAuthService.OpenAuthPrompt(guid: string, scopes: { any }, metadata: { [string]: any }) {RobloxScriptSecurity}
	Event ExperienceAuthService.ScopeCheckResult(guid: string, result: Enum.ScopeCheckResult, token: string, scopes: { any }, metadata: { [string]: any }) {RobloxSecurity} [Hidden]
Class ExperienceInviteOptions : Instance [NotReplicated]
	Property ExperienceInviteOptions.InviteMessageId: string
	Property ExperienceInviteOptions.InviteUser: number
	Property ExperienceInviteOptions.LaunchData: string
	Property ExperienceInviteOptions.PromptMessage: string
Class ExperienceNotificationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ExperienceNotificationService:CanPromptOptInAsync() -> boolean [Yields]
	Function ExperienceNotificationService:InvokeOptInPromptClosed() -> () {RobloxScriptSecurity}
	Function ExperienceNotificationService:PromptOptIn() -> ()
	Event ExperienceNotificationService.OptInPromptClosed()
	Event ExperienceNotificationService.PromptOptInRequested() {RobloxScriptSecurity}
Class ExperienceService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ExperienceService:ExecuteCrossExperienceCall(callId: string, params: { [string]: any }, successCallback: (...any) -> ...any, errorCallback: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function ExperienceService:GetPendingJoinAttempt() -> { [string]: any } {RobloxScriptSecurity}
	Function ExperienceService:LaunchExperience(params: { [string]: any }) -> string {RobloxScriptSecurity}
	Function ExperienceService:LaunchExperienceFromSource(params: { [string]: any }, source: string) -> string {RobloxScriptSecurity}
	Function ExperienceService:LaunchExperienceFromSourceWithCallback(params: { [string]: any }, source: string, callback: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function ExperienceService:RegisterForExperienceJoin(callback: (...any) -> ...any) -> RBXScriptConnection {RobloxScriptSecurity}
	Function ExperienceService:RegisterForExperienceLeave(callback: (...any) -> ...any) -> RBXScriptConnection {RobloxScriptSecurity}
	Function ExperienceService:StartCrossExperience(type: string, params: { [string]: any }) -> () {RobloxScriptSecurity}
	Function ExperienceService:StopCrossExperience(type: string, params: { [string]: any }) -> () {RobloxScriptSecurity}
	Event ExperienceService.OnCrossExperienceStarted(type: string, params: { [string]: any }) {RobloxScriptSecurity}
	Event ExperienceService.OnCrossExperienceStopped(type: string, params: { [string]: any }) {RobloxScriptSecurity}
	Event ExperienceService.OnNewJoinAttempt(params: { [string]: any }) {RobloxScriptSecurity}
Class ExperienceStateCaptureService : Instance [NotCreatable] [Service] [NotReplicated]
	Property ExperienceStateCaptureService.HiddenSelectionEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property ExperienceStateCaptureService.IsInBackground: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ExperienceStateCaptureService.IsInCaptureMode: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function ExperienceStateCaptureService:CanEnterCaptureMode() -> boolean {RobloxScriptSecurity}
	Function ExperienceStateCaptureService:ResetHighlight() -> () {RobloxScriptSecurity}
	Function ExperienceStateCaptureService:ToggleCaptureMode() -> () {RobloxScriptSecurity}
	Event ExperienceStateCaptureService.ItemSelectedInCaptureMode(instance: Instance) {RobloxScriptSecurity}
Class ExplorerFilterAutocompleterInstance : Instance [NotCreatable] [NotReplicated]
	Property ExplorerFilterAutocompleterInstance.ReplaceRange: Vector2 [ReadOnly]
	Property ExplorerFilterAutocompleterInstance.RequiresOutsideContext: boolean [ReadOnly]
	Function ExplorerFilterAutocompleterInstance:GetSuggestions() -> { any }
Class ExplorerFilterInstance : Instance [NotReplicated]
	Function ExplorerFilterInstance:GetAutocompleter() -> ExplorerFilterAutocompleterInstance
	Function ExplorerFilterInstance:GetErrors() -> { any }
	Function ExplorerFilterInstance:GetLexemes() -> { any }
	Function ExplorerFilterInstance:InstancePassesFilter(instance: Instance) -> boolean
	Function ExplorerFilterInstance:SetFilter(search: string) -> ()
Class Explosion : Instance
	Property Explosion.BlastPressure: number
	Property Explosion.BlastRadius: number
	Property Explosion.DestroyJointRadiusPercent: number
	Property Explosion.ExplosionType: Enum.ExplosionType
	Property Explosion.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Explosion.Position: Vector3
	Property Explosion.TimeScale: number
	Property Explosion.Visible: boolean
	Event Explosion.Hit(part: BasePart, distance: number)
Class FaceAnimatorService : Instance [NotCreatable] [Service] [NotReplicated]
	Property FaceAnimatorService.AudioAnimationEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property FaceAnimatorService.FaceTrackingStatusEnum: Enum.TrackerFaceTrackingStatus {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property FaceAnimatorService.FlipHeadOrientation: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property FaceAnimatorService.VideoAnimationEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function FaceAnimatorService:GetTrackerLodController() -> TrackerLodController {RobloxScriptSecurity}
	Function FaceAnimatorService:Init(videoEnabled: boolean, audioEnabled: boolean) -> () {RobloxScriptSecurity}
	Function FaceAnimatorService:IsStarted() -> boolean {RobloxScriptSecurity}
	Function FaceAnimatorService:Start() -> () {RobloxScriptSecurity}
	Function FaceAnimatorService:Step() -> () {RobloxScriptSecurity}
	Function FaceAnimatorService:Stop() -> () {RobloxScriptSecurity}
	Event FaceAnimatorService.TrackerError(error: Enum.TrackerError) {RobloxScriptSecurity}
	Event FaceAnimatorService.TrackerPrompt(prompt: Enum.TrackerPromptEvent) {RobloxScriptSecurity}
Class FaceControls : Instance
	Property FaceControls.Corrugator: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftBrowLowerer: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftInnerBrowRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftNoseWrinkler: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftOuterBrowRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightBrowLowerer: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightInnerBrowRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightNoseWrinkler: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightOuterBrowRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.EyesLookDown: number {PluginSecurity} [NotReplicated]
	Property FaceControls.EyesLookLeft: number {PluginSecurity} [NotReplicated]
	Property FaceControls.EyesLookRight: number {PluginSecurity} [NotReplicated]
	Property FaceControls.EyesLookUp: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftCheekRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftEyeClosed: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftEyeUpperLidRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightCheekRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightEyeClosed: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightEyeUpperLidRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.JawDrop: number {PluginSecurity} [NotReplicated]
	Property FaceControls.JawLeft: number {PluginSecurity} [NotReplicated]
	Property FaceControls.JawRight: number {PluginSecurity} [NotReplicated]
	Property FaceControls.ChinRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.ChinRaiserUpperLip: number {PluginSecurity} [NotReplicated]
	Property FaceControls.FlatPucker: number {PluginSecurity} [NotReplicated]
	Property FaceControls.Funneler: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftCheekPuff: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftDimpler: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftLipCornerDown: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftLipCornerPuller: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftLipStretcher: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftLowerLipDepressor: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LeftUpperLipRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LipPresser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LipsTogether: number {PluginSecurity} [NotReplicated]
	Property FaceControls.LowerLipSuck: number {PluginSecurity} [NotReplicated]
	Property FaceControls.MouthLeft: number {PluginSecurity} [NotReplicated]
	Property FaceControls.MouthRight: number {PluginSecurity} [NotReplicated]
	Property FaceControls.Pucker: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightCheekPuff: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightDimpler: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightLipCornerDown: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightLipCornerPuller: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightLipStretcher: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightLowerLipDepressor: number {PluginSecurity} [NotReplicated]
	Property FaceControls.RightUpperLipRaiser: number {PluginSecurity} [NotReplicated]
	Property FaceControls.UpperLipSuck: number {PluginSecurity} [NotReplicated]
	Property FaceControls.TongueDown: number {PluginSecurity} [NotReplicated]
	Property FaceControls.TongueOut: number {PluginSecurity} [NotReplicated]
	Property FaceControls.TongueUp: number {PluginSecurity} [NotReplicated]
Class FaceInstance : Instance [NotCreatable] [NotBrowsable]
	Property FaceInstance.Face: Enum.NormalId
Class Decal : FaceInstance
	Property Decal.Color3: Color3
	Property Decal.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Decal.Shiny: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property Decal.Specular: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property Decal.Texture: ContentId
	Property Decal.Transparency: number
	Property Decal.ZIndex: number
Class Texture : Decal
	Property Texture.OffsetStudsU: number
	Property Texture.OffsetStudsV: number
	Property Texture.StudsPerTileU: number
	Property Texture.StudsPerTileV: number
Class FacialAnimationRecordingService : Instance [NotCreatable] [Service] [NotReplicated]
	Property FacialAnimationRecordingService.BiometricDataConsent: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function FacialAnimationRecordingService:CheckOrRequestCameraPermission() -> string {RobloxScriptSecurity} [Yields]
	Function FacialAnimationRecordingService:IsAgeRestricted() -> boolean {RobloxScriptSecurity}
Class FacialAnimationStreamingServiceStats : Instance [NotCreatable] [NotReplicated]
	Function FacialAnimationStreamingServiceStats:Get(label: string) -> number {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceStats:GetWithPlayerId(label: string, playerId: number) -> number {RobloxScriptSecurity}
Class FacialAnimationStreamingServiceV2 : Instance [NotCreatable] [Service]
	Property FacialAnimationStreamingServiceV2.ServiceState: number {RobloxScriptSecurity} [Hidden]
	Function FacialAnimationStreamingServiceV2:GetStats() -> FacialAnimationStreamingServiceStats {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceV2:IsAudioEnabled(mask: number) -> boolean {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceV2:IsPlaceEnabled(mask: number) -> boolean {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceV2:IsServerEnabled(mask: number) -> boolean {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceV2:IsVideoEnabled(mask: number) -> boolean {RobloxScriptSecurity}
	Function FacialAnimationStreamingServiceV2:ResolveStateForUser(userId: number) -> number {RobloxScriptSecurity} [Yields]
Class FacialAnimationStreamingSubsessionStats : Instance [NotCreatable] [NotReplicated]
Class Feature : Instance [NotCreatable]
	Property Feature.FaceId: Enum.NormalId
	Property Feature.InOut: Enum.InOut
	Property Feature.LeftRight: Enum.LeftRight
	Property Feature.TopBottom: Enum.TopBottom
Class Hole : Feature [Deprecated]
Class MotorFeature : Feature [Deprecated]
Class File : Instance [NotCreatable] [NotReplicated]
	Property File.Size: number {PluginSecurity} [Hidden] [ReadOnly]
	Function File:GetBinaryContents() -> string {PluginSecurity}
	Function File:GetTemporaryId() -> ContentId {PluginSecurity}
Class Fire : Instance
	Property Fire.Color: Color3
	Property Fire.Enabled: boolean
	Property Fire.Heat: number [📁 LoadOnly] [NotReplicated]
	Property Fire.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Fire.SecondaryColor: Color3
	Property Fire.Size: number [📁 LoadOnly] [NotReplicated]
	Property Fire.TimeScale: number
	Property Fire.heat_xml: number [Hidden] [NotScriptable]
	Property Fire.size_xml: number [Hidden] [NotScriptable]
	Function Fire:FastForward(numFrames: number) -> () {RobloxScriptSecurity}
Class FlagStandService : Instance [NotCreatable] [Service]
Class FloatCurve : Instance
	Property FloatCurve.Length: number [ReadOnly]
	Property FloatCurve.ValuesAndTimes: BinaryString [Hidden] [NotScriptable]
	Function FloatCurve:GetKeyAtIndex(index: number) -> FloatCurveKey
	Function FloatCurve:GetKeyIndicesAtTime(time: number) -> { any }
	Function FloatCurve:GetKeys() -> { any }
	Function FloatCurve:GetValueAtTime(time: number) -> number?
	Function FloatCurve:InsertKey(key: FloatCurveKey) -> { any }
	Function FloatCurve:RemoveKeyAtIndex(startingIndex: number, count: number? = 1) -> number
	Function FloatCurve:SetKeys(keys: { any }) -> number
Class FlyweightService : Instance [Service]
Class CSGDictionaryService : FlyweightService [Service]
Class NonReplicatedCSGDictionaryService : FlyweightService [Service]
Class Folder : Instance
	Property Folder.ReplicatedGuiInsertionOrder: number {RobloxSecurity} [Hidden] [NotScriptable]
Class ForceField : Instance
	Property ForceField.Visible: boolean
Class FriendService : Instance [NotCreatable] [Service]
	Function FriendService:GetPlatformFriends() -> { any } {RobloxScriptSecurity} [Yields]
	Event FriendService.FriendsUpdated(friendData: { any }) {RobloxScriptSecurity}
	Event FriendService.RemoteFriendEventSignal(userId: number, userId: number, event: Enum.FriendRequestEvent) {RobloxSecurity} [Hidden]
	Event FriendService.RemoteFriendStatusSignal(userId: number, userId: number, status: Enum.FriendStatus) {RobloxSecurity} [Hidden]
Class FunctionalTest : Instance [Deprecated]
	Property FunctionalTest.Description: string [Deprecated]
	Property FunctionalTest.AllowSleep: boolean [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Property FunctionalTest.Is30FpsThrottleEnabled: boolean [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Property FunctionalTest.PhysicsEnvironmentalThrottle: boolean [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Property FunctionalTest.HasMigratedSettingsToTestService: boolean [Hidden] [NotScriptable] [Deprecated]
	Property FunctionalTest.Timeout: number [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Function FunctionalTest:Error(message: string? = "") -> () [Deprecated]
	Function FunctionalTest:Failed(message: string? = "") -> () [Deprecated]
	Function FunctionalTest:Pass(message: string? = "") -> () [Deprecated]
	Function FunctionalTest:Passed(message: string? = "") -> () [Deprecated]
	Function FunctionalTest:Warn(message: string? = "") -> () [Deprecated]
Class GamePassService : Instance [NotCreatable] [Service] [Deprecated]
	Function GamePassService:PlayerHasPass(player: Player, gamePassId: number) -> boolean [Yields] [Deprecated]
Class GameSettings : Instance [NotCreatable] [Settings] [NotBrowsable]
	Property GameSettings.VideoCaptureEnabled: boolean
	Property GameSettings.VideoRecording: boolean {RobloxScriptSecurity} {✏️RobloxSecurity} [📁 LoadOnly] [NotReplicated]
	Event GameSettings.VideoRecordingChangeRequest(recording: boolean) {RobloxScriptSecurity}
Class GamepadService : Instance [NotCreatable] [Service] [NotReplicated]
	Property GamepadService.GamepadCursorEnabled: boolean {✏️RobloxScriptSecurity}
	Function GamepadService:DisableGamepadCursor() -> ()
	Function GamepadService:EnableGamepadCursor(guiObject: Instance) -> ()
	Function GamepadService:GetGamepadCursorPosition() -> Vector2 {RobloxScriptSecurity}
	Function GamepadService:SetGamepadCursorPosition(position: Vector2) -> () {RobloxScriptSecurity}
	Event GamepadService.GamepadThumbstick1Changed(event: Vector2) {RobloxScriptSecurity}
Class GenericChallengeService : Instance [NotCreatable] [Service]
	Function GenericChallengeService:SignalChallengeAbandoned(challengeID: string) -> () {RobloxScriptSecurity}
	Function GenericChallengeService:SignalChallengeCompleted(challengeID: string, challengeType: string, challengeMetadata: string) -> () {RobloxScriptSecurity}
	Function GenericChallengeService:SignalChallengeInvalidated(challengeID: string) -> () {RobloxScriptSecurity}
	Function GenericChallengeService:SignalChallengeLoaded(challengeID: string, success: boolean) -> () {RobloxScriptSecurity}
	Function GenericChallengeService:SignalChallengeRequired(challengeID: string, challengeType: string, challengeMetadata: string) -> () {RobloxScriptSecurity}
	Event GenericChallengeService.ChallengeAbandonedEvent(challengeID: string) {RobloxScriptSecurity}
	Event GenericChallengeService.ChallengeCompletedEvent(challengeID: string, challengeType: string, challengeMetadata: string) {RobloxScriptSecurity}
	Event GenericChallengeService.ChallengeInvalidatedEvent(challengeID: string) {RobloxScriptSecurity}
	Event GenericChallengeService.ChallengeLoadedEvent(challengeID: string, success: boolean) {RobloxScriptSecurity}
	Event GenericChallengeService.ChallengeRequiredEvent(challengeID: string, challengeType: string, challengeMetadata: string) {RobloxScriptSecurity}
Class Geometry : Instance [NotCreatable] [Service]
Class GeometryService : Instance [NotCreatable] [Service]
	Function GeometryService:CalculateConstraintsToPreserve(source: Instance, destination: { any }, options: { [string]: any }? = nil) -> { any }
	Function GeometryService:HashMeshAsync(meshId: ContentId) -> string {RobloxScriptSecurity} [Yields]
	Function GeometryService:IntersectAsync(part: Instance, parts: { any }, options: { [string]: any }? = nil) -> { any } [Yields]
	Function GeometryService:StitchMeshesAsync(meshParts: { any }) -> ContentId {RobloxScriptSecurity} [Yields]
	Function GeometryService:SubtractAsync(part: Instance, parts: { any }, options: { [string]: any }? = nil) -> { any } [Yields]
	Function GeometryService:UnionAsync(part: Instance, parts: { any }, options: { [string]: any }? = nil) -> { any } [Yields]
Class GetTextBoundsParams : Instance [NotReplicated]
	Property GetTextBoundsParams.Font: Font
	Property GetTextBoundsParams.RichText: boolean
	Property GetTextBoundsParams.Size: number
	Property GetTextBoundsParams.Text: string
	Property GetTextBoundsParams.Width: number
Class GlobalDataStore : Instance [NotCreatable] [NotReplicated]
	Function GlobalDataStore:GetAsync(key: string, options: DataStoreGetOptions? = nil) -> ...any [Yields]
	Function GlobalDataStore:IncrementAsync(key: string, delta: number? = 1, userIds: { any }? = {}, options: DataStoreIncrementOptions? = nil) -> any [Yields]
	Function GlobalDataStore:OnUpdate(key: string, callback: (...any) -> ...any) -> RBXScriptConnection [Deprecated]
	Function GlobalDataStore:RemoveAsync(key: string) -> ...any [Yields]
	Function GlobalDataStore:SetAsync(key: string, value: any, userIds: { any }? = {}, options: DataStoreSetOptions? = nil) -> any [Yields]
	Function GlobalDataStore:UpdateAsync(key: string, transformFunction: (...any) -> ...any) -> ...any [Yields]
Class DataStore : GlobalDataStore [NotCreatable] [NotReplicated]
	Function DataStore:GetVersionAsync(key: string, version: string) -> ...any [Yields]
	Function DataStore:ListKeysAsync(prefix: string? = "", pageSize: number? = 0, cursor: string? = "", excludeDeleted: boolean? = false) -> DataStoreKeyPages [Yields]
	Function DataStore:ListVersionsAsync(key: string, sortDirection: Enum.SortDirection? = "Ascending", minDate: number? = 0, maxDate: number? = 0, pageSize: number? = 0) -> DataStoreVersionPages [Yields]
	Function DataStore:RemoveVersionAsync(key: string, version: string) -> () [Yields]
Class OrderedDataStore : GlobalDataStore [NotCreatable] [NotReplicated]
	Function OrderedDataStore:GetSortedAsync(ascending: boolean, pagesize: number, minValue: any, maxValue: any) -> Instance? [Yields]
Class GoogleAnalyticsConfiguration : Instance [NotCreatable] [Service]
	Property GoogleAnalyticsConfiguration.gaID: string {RobloxScriptSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class GroupService : Instance [NotCreatable] [Service] [NotReplicated]
	Function GroupService:GetAlliesAsync(groupId: number) -> StandardPages [Yields]
	Function GroupService:GetEnemiesAsync(groupId: number) -> StandardPages [Yields]
	Function GroupService:GetGroupInfoAsync(groupId: number) -> any [Yields]
	Function GroupService:GetGroupsAsync(userId: number) -> { any } [Yields]
Class GuiBase : Instance [NotCreatable]
Class GuiBase2d : GuiBase [NotCreatable] [NotBrowsable]
	Property GuiBase2d.AbsolutePosition: Vector2 [ReadOnly] {🧬Unsafe}
	Property GuiBase2d.AbsoluteRotation: number [ReadOnly] {🧬Unsafe}
	Property GuiBase2d.AbsoluteSize: Vector2 [ReadOnly] {🧬Unsafe}
	Property GuiBase2d.ReplicatedInsertionOrder: number {RobloxSecurity} [Hidden] [NotScriptable]
	Property GuiBase2d.ClippedRect: Rect {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property GuiBase2d.IsNotOccluded: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property GuiBase2d.RawRect2D: Rect {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property GuiBase2d.TotalGroupScale: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property GuiBase2d.AutoLocalize: boolean
	Property GuiBase2d.Localize: boolean [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property GuiBase2d.RootLocalizationTable: LocalizationTable?
	Property GuiBase2d.SelectionBehaviorDown: Enum.SelectionBehavior
	Property GuiBase2d.SelectionBehaviorLeft: Enum.SelectionBehavior
	Property GuiBase2d.SelectionBehaviorRight: Enum.SelectionBehavior
	Property GuiBase2d.SelectionBehaviorUp: Enum.SelectionBehavior
	Property GuiBase2d.SelectionGroup: boolean
	Event GuiBase2d.SelectionChanged(amISelected: boolean, previousSelection: GuiObject, newSelection: GuiObject)
Class GuiObject : GuiBase2d [NotCreatable] [NotBrowsable]
	Property GuiObject.SelectionImageObject: GuiObject?
	Property GuiObject.ClipsDescendants: boolean
	Property GuiObject.Draggable: boolean [Deprecated]
	Property GuiObject.Active: boolean
	Property GuiObject.AnchorPoint: Vector2
	Property GuiObject.AutomaticSize: Enum.AutomaticSize
	Property GuiObject.BackgroundColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property GuiObject.BackgroundColor3: Color3
	Property GuiObject.BackgroundTransparency: number
	Property GuiObject.BorderColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property GuiObject.BorderColor3: Color3
	Property GuiObject.BorderMode: Enum.BorderMode
	Property GuiObject.BorderSizePixel: number
	Property GuiObject.Interactable: boolean
	Property GuiObject.LayoutOrder: number
	Property GuiObject.Position: UDim2
	Property GuiObject.Rotation: number
	Property GuiObject.Size: UDim2
	Property GuiObject.SizeConstraint: Enum.SizeConstraint
	Property GuiObject.Transparency: number [📁 LoadOnly] [Hidden] [NotReplicated]
	Property GuiObject.Visible: boolean
	Property GuiObject.ZIndex: number
	Property GuiObject.DragBeginConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.DragStoppedConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.MouseEnterConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.MouseLeaveConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.MouseMovedConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.MouseWheelBackwardConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.MouseWheelForwardConnectionCount: number [Hidden] [NotScriptable]
	Property GuiObject.NextSelectionDown: GuiObject?
	Property GuiObject.NextSelectionLeft: GuiObject?
	Property GuiObject.NextSelectionRight: GuiObject?
	Property GuiObject.NextSelectionUp: GuiObject?
	Property GuiObject.Selectable: boolean
	Property GuiObject.SelectionOrder: number
	Property GuiObject.GuiState: Enum.GuiState [ReadOnly]
	Function GuiObject:TweenPosition(endPosition: UDim2, easingDirection: Enum.EasingDirection? = "Out", easingStyle: Enum.EasingStyle? = "Quad", time: number? = 1, override: boolean? = false, callback: ((...any) -> ...any)? = nil) -> boolean
	Function GuiObject:TweenSize(endSize: UDim2, easingDirection: Enum.EasingDirection? = "Out", easingStyle: Enum.EasingStyle? = "Quad", time: number? = 1, override: boolean? = false, callback: ((...any) -> ...any)? = nil) -> boolean
	Function GuiObject:TweenSizeAndPosition(endSize: UDim2, endPosition: UDim2, easingDirection: Enum.EasingDirection? = "Out", easingStyle: Enum.EasingStyle? = "Quad", time: number? = 1, override: boolean? = false, callback: ((...any) -> ...any)? = nil) -> boolean
	Event GuiObject.DragBegin(initialPosition: UDim2) [Deprecated]
	Event GuiObject.DragStopped(x: number, y: number) [Deprecated]
	Event GuiObject.InputBegan(input: InputObject)
	Event GuiObject.InputChanged(input: InputObject)
	Event GuiObject.InputEnded(input: InputObject)
	Event GuiObject.MouseEnter(x: number, y: number)
	Event GuiObject.MouseLeave(x: number, y: number)
	Event GuiObject.MouseMoved(x: number, y: number)
	Event GuiObject.MouseWheelBackward(x: number, y: number)
	Event GuiObject.MouseWheelForward(x: number, y: number)
	Event GuiObject.SelectionGained()
	Event GuiObject.SelectionLost()
	Event GuiObject.TouchLongPress(touchPositions: { any }, state: Enum.UserInputState)
	Event GuiObject.TouchPan(touchPositions: { any }, totalTranslation: Vector2, velocity: Vector2, state: Enum.UserInputState)
	Event GuiObject.TouchPinch(touchPositions: { any }, scale: number, velocity: number, state: Enum.UserInputState)
	Event GuiObject.TouchRotate(touchPositions: { any }, rotation: number, velocity: number, state: Enum.UserInputState)
	Event GuiObject.TouchSwipe(swipeDirection: Enum.SwipeDirection, numberOfTouches: number)
	Event GuiObject.TouchTap(touchPositions: { any })
Class CanvasGroup : GuiObject
	Property CanvasGroup.GroupColor3: Color3
	Property CanvasGroup.GroupTransparency: number
	Property CanvasGroup.ResolutionScale: number {RobloxScriptSecurity}
Class Frame : GuiObject
	Property Frame.Style: Enum.FrameStyle
Class GuiButton : GuiObject [NotCreatable] [NotBrowsable]
	Property GuiButton.AutoButtonColor: boolean
	Property GuiButton.Modal: boolean
	Property GuiButton.Style: Enum.ButtonStyle
	Property GuiButton.MouseButton1ClickConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.MouseButton1DownConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.MouseButton1UpConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.MouseButton2ClickConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.MouseButton2DownConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.MouseButton2UpConnectionCount: number [Hidden] [NotScriptable]
	Property GuiButton.Selected: boolean
	Event GuiButton.Activated(inputObject: InputObject, clickCount: number)
	Event GuiButton.MouseButton1Click()
	Event GuiButton.MouseButton1Down(x: number, y: number)
	Event GuiButton.MouseButton1Up(x: number, y: number)
	Event GuiButton.MouseButton2Click()
	Event GuiButton.MouseButton2Down(x: number, y: number)
	Event GuiButton.MouseButton2Up(x: number, y: number)
Class ImageButton : GuiButton
	Property ImageButton.ContentImageSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ImageButton.HoverImage: ContentId
	Property ImageButton.Image: ContentId
	Property ImageButton.ImageColor3: Color3
	Property ImageButton.ImageRectOffset: Vector2
	Property ImageButton.ImageRectSize: Vector2
	Property ImageButton.ImageTransparency: number
	Property ImageButton.IsLoaded: boolean [ReadOnly]
	Property ImageButton.PressedImage: ContentId
	Property ImageButton.ResampleMode: Enum.ResamplerMode
	Property ImageButton.ScaleType: Enum.ScaleType
	Property ImageButton.SliceCenter: Rect
	Property ImageButton.SliceScale: number
	Property ImageButton.TileSize: UDim2
	Function ImageButton:SetEnableContentImageSizeChangedEvents(enabled: boolean) -> () {RobloxScriptSecurity}
Class TextButton : GuiButton
	Property TextButton.Confidential: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property TextButton.LocalizedText: string [Hidden] [ReadOnly]
	Property TextButton.ContentText: string [ReadOnly]
	Property TextButton.Font: Enum.Font [📁 LoadOnly] [Hidden] [NotReplicated]
	Property TextButton.FontFace: Font
	Property TextButton.FontSize: Enum.FontSize [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextButton.LineHeight: number
	Property TextButton.LocalizationMatchIdentifier: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextButton.LocalizationMatchedSourceText: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextButton.MaxVisibleGraphemes: number
	Property TextButton.OpenTypeFeatures: string
	Property TextButton.OpenTypeFeaturesError: string [ReadOnly]
	Property TextButton.RichText: boolean
	Property TextButton.Text: string
	Property TextButton.TextBounds: Vector2 [ReadOnly]
	Property TextButton.TextColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property TextButton.TextColor3: Color3
	Property TextButton.TextDirection: Enum.TextDirection
	Property TextButton.TextFits: boolean [ReadOnly]
	Property TextButton.TextScaled: boolean
	Property TextButton.TextSize: number
	Property TextButton.TextStrokeColor3: Color3
	Property TextButton.TextStrokeTransparency: number
	Property TextButton.TextTransparency: number
	Property TextButton.TextTruncate: Enum.TextTruncate
	Property TextButton.TextWrap: boolean [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextButton.TextWrapped: boolean
	Property TextButton.TextXAlignment: Enum.TextXAlignment
	Property TextButton.TextYAlignment: Enum.TextYAlignment
	Function TextButton:SetTextFromInput(text: string) -> () {RobloxScriptSecurity}
Class GuiLabel : GuiObject [NotCreatable]
Class ImageLabel : GuiLabel
	Property ImageLabel.ContentImageSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ImageLabel.Image: ContentId
	Property ImageLabel.ImageColor3: Color3
	Property ImageLabel.ImageRectOffset: Vector2
	Property ImageLabel.ImageRectSize: Vector2
	Property ImageLabel.ImageTransparency: number
	Property ImageLabel.IsLoaded: boolean [ReadOnly]
	Property ImageLabel.ResampleMode: Enum.ResamplerMode
	Property ImageLabel.ScaleType: Enum.ScaleType
	Property ImageLabel.SliceCenter: Rect
	Property ImageLabel.SliceScale: number
	Property ImageLabel.TileSize: UDim2
	Function ImageLabel:SetEnableContentImageSizeChangedEvents(enabled: boolean) -> () {RobloxScriptSecurity}
Class TextLabel : GuiLabel
	Property TextLabel.Confidential: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property TextLabel.LocalizedText: string [Hidden] [ReadOnly]
	Property TextLabel.ContentText: string [ReadOnly]
	Property TextLabel.Font: Enum.Font [📁 LoadOnly] [Hidden] [NotReplicated]
	Property TextLabel.FontFace: Font
	Property TextLabel.FontSize: Enum.FontSize [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextLabel.LineHeight: number
	Property TextLabel.LocalizationMatchIdentifier: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextLabel.LocalizationMatchedSourceText: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextLabel.MaxVisibleGraphemes: number
	Property TextLabel.OpenTypeFeatures: string
	Property TextLabel.OpenTypeFeaturesError: string [ReadOnly]
	Property TextLabel.RichText: boolean
	Property TextLabel.Text: string
	Property TextLabel.TextBounds: Vector2 [ReadOnly]
	Property TextLabel.TextColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property TextLabel.TextColor3: Color3
	Property TextLabel.TextDirection: Enum.TextDirection
	Property TextLabel.TextFits: boolean [ReadOnly]
	Property TextLabel.TextScaled: boolean
	Property TextLabel.TextSize: number
	Property TextLabel.TextStrokeColor3: Color3
	Property TextLabel.TextStrokeTransparency: number
	Property TextLabel.TextTransparency: number
	Property TextLabel.TextTruncate: Enum.TextTruncate
	Property TextLabel.TextWrap: boolean [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextLabel.TextWrapped: boolean
	Property TextLabel.TextXAlignment: Enum.TextXAlignment
	Property TextLabel.TextYAlignment: Enum.TextYAlignment
	Function TextLabel:SetTextFromInput(text: string) -> () {RobloxScriptSecurity}
Class ScrollingFrame : GuiObject
	Property ScrollingFrame.HorizontalBarRect: Rect {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ScrollingFrame.MaxCanvasPosition: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ScrollingFrame.VerticalBarRect: Rect {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ScrollingFrame.AbsoluteCanvasSize: Vector2 [ReadOnly] {🧬Unsafe}
	Property ScrollingFrame.AbsoluteWindowSize: Vector2 [ReadOnly] {🧬Unsafe}
	Property ScrollingFrame.AutomaticCanvasSize: Enum.AutomaticSize
	Property ScrollingFrame.BottomImage: ContentId
	Property ScrollingFrame.CanvasPosition: Vector2
	Property ScrollingFrame.CanvasSize: UDim2
	Property ScrollingFrame.ElasticBehavior: Enum.ElasticBehavior
	Property ScrollingFrame.HorizontalScrollBarInset: Enum.ScrollBarInset
	Property ScrollingFrame.MidImage: ContentId
	Property ScrollingFrame.ScrollBarImageColor3: Color3
	Property ScrollingFrame.ScrollBarImageTransparency: number
	Property ScrollingFrame.ScrollBarThickness: number
	Property ScrollingFrame.ScrollVelocity: Vector2 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property ScrollingFrame.ScrollingDirection: Enum.ScrollingDirection
	Property ScrollingFrame.ScrollingEnabled: boolean
	Property ScrollingFrame.TopImage: ContentId
	Property ScrollingFrame.VerticalScrollBarInset: Enum.ScrollBarInset
	Property ScrollingFrame.VerticalScrollBarPosition: Enum.VerticalScrollBarPosition
	Function ScrollingFrame:ClearInertialScrolling() -> () {RobloxScriptSecurity}
	Function ScrollingFrame:GetSampledInertialVelocity() -> Vector2 {RobloxScriptSecurity}
	Function ScrollingFrame:ScrollToTop() -> () {RobloxScriptSecurity}
Class TextBox : GuiObject
	Property TextBox.ClearTextOnFocus: boolean
	Property TextBox.Confidential: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property TextBox.CursorPosition: number
	Property TextBox.ManualFocusRelease: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.MultiLine: boolean
	Property TextBox.OverlayNativeInput: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.ReturnKeyType: Enum.ReturnKeyType {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.SelectionStart: number
	Property TextBox.ShowNativeInput: boolean
	Property TextBox.TextEditable: boolean
	Property TextBox.TextInputType: Enum.TextInputType {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.ContentText: string [ReadOnly]
	Property TextBox.Font: Enum.Font [📁 LoadOnly] [Hidden] [NotReplicated]
	Property TextBox.FontFace: Font
	Property TextBox.FontSize: Enum.FontSize [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextBox.LineHeight: number
	Property TextBox.LocalizationMatchIdentifier: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.LocalizationMatchedSourceText: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextBox.MaxVisibleGraphemes: number
	Property TextBox.OpenTypeFeatures: string
	Property TextBox.OpenTypeFeaturesError: string [ReadOnly]
	Property TextBox.PlaceholderColor3: Color3
	Property TextBox.PlaceholderText: string
	Property TextBox.RichText: boolean
	Property TextBox.Text: string
	Property TextBox.TextBounds: Vector2 [ReadOnly]
	Property TextBox.TextColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property TextBox.TextColor3: Color3
	Property TextBox.TextDirection: Enum.TextDirection
	Property TextBox.TextFits: boolean [ReadOnly]
	Property TextBox.TextScaled: boolean
	Property TextBox.TextSize: number
	Property TextBox.TextStrokeColor3: Color3
	Property TextBox.TextStrokeTransparency: number
	Property TextBox.TextTransparency: number
	Property TextBox.TextTruncate: Enum.TextTruncate
	Property TextBox.TextWrap: boolean [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property TextBox.TextWrapped: boolean
	Property TextBox.TextXAlignment: Enum.TextXAlignment
	Property TextBox.TextYAlignment: Enum.TextYAlignment
	Function TextBox:CaptureFocus() -> ()
	Function TextBox:IsFocused() -> boolean
	Function TextBox:ReleaseFocus(submitted: boolean? = false) -> ()
	Function TextBox:ResetKeyboardMode() -> () {RobloxScriptSecurity}
	Function TextBox:SetTextFromInput(text: string) -> () {RobloxScriptSecurity}
	Event TextBox.FocusLost(enterPressed: boolean, inputThatCausedFocusLoss: InputObject)
	Event TextBox.Focused()
	Event TextBox.ReturnPressedFromOnScreenKeyboard()
Class VideoFrame : GuiObject
	Property VideoFrame.IsLoaded: boolean [ReadOnly]
	Property VideoFrame.Looped: boolean
	Property VideoFrame.Playing: boolean [NotReplicated]
	Property VideoFrame.PlayingReplicating: boolean [Hidden] [NotScriptable]
	Property VideoFrame.Resolution: Vector2 [ReadOnly]
	Property VideoFrame.TimeLength: number [ReadOnly]
	Property VideoFrame.TimePosition: number [NotReplicated]
	Property VideoFrame.TimePositionReplicating: number [Hidden] [NotScriptable]
	Property VideoFrame.Video: ContentId
	Property VideoFrame.Volume: number
	Function VideoFrame:Pause() -> ()
	Function VideoFrame:Play() -> ()
	Function VideoFrame:SetStudioPreview(isPreview: boolean) -> () {RobloxScriptSecurity}
	Event VideoFrame.DidLoop(video: string)
	Event VideoFrame.Ended(video: string)
	Event VideoFrame.Loaded(video: string)
	Event VideoFrame.Paused(video: string)
	Event VideoFrame.Played(video: string)
	Event VideoFrame.PlayingUpdatedFromServer(value: boolean) {RobloxSecurity} [Hidden]
	Event VideoFrame.TimePositionUpdatedFromServer(value: number) {RobloxSecurity} [Hidden]
Class ViewportFrame : GuiObject
	Property ViewportFrame.Ambient: Color3
	Property ViewportFrame.IsMirrored: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property ViewportFrame.LightColor: Color3
	Property ViewportFrame.LightDirection: Vector3
	Property ViewportFrame.CameraCFrame: CFrame [Hidden] [NotScriptable]
	Property ViewportFrame.CameraFieldOfView: number [Hidden] [NotScriptable]
	Property ViewportFrame.CurrentCamera: Camera? [📁 LoadOnly] [NotReplicated]
	Property ViewportFrame.ImageColor3: Color3
	Property ViewportFrame.ImageTransparency: number
	Function ViewportFrame:CaptureSnapshotAsync() -> ContentId {RobloxScriptSecurity} [Yields]
Class LayerCollector : GuiBase2d [NotCreatable] [NotBrowsable]
	Property LayerCollector.Enabled: boolean
	Property LayerCollector.ResetOnSpawn: boolean
	Property LayerCollector.ZIndexBehavior: Enum.ZIndexBehavior
	Function LayerCollector:GetGuiObjectsAtPosition(x: number, y: number) -> { Instance } {RobloxScriptSecurity}
	Function LayerCollector:GetLayoutNodeTree() -> { [string]: any } [Deprecated]
Class BillboardGui : LayerCollector
	Property BillboardGui.ClipsDescendants: boolean
	Property BillboardGui.Active: boolean
	Property BillboardGui.Adornee: Instance?
	Property BillboardGui.AlwaysOnTop: boolean
	Property BillboardGui.Brightness: number
	Property BillboardGui.CurrentDistance: number [ReadOnly]
	Property BillboardGui.DistanceLowerLimit: number
	Property BillboardGui.DistanceStep: number
	Property BillboardGui.DistanceUpperLimit: number
	Property BillboardGui.ExtentsOffset: Vector3
	Property BillboardGui.ExtentsOffsetWorldSpace: Vector3
	Property BillboardGui.LightInfluence: number
	Property BillboardGui.MaxDistance: number
	Property BillboardGui.PlayerToHideFrom: Instance?
	Property BillboardGui.Size: UDim2
	Property BillboardGui.SizeOffset: Vector2
	Property BillboardGui.StudsOffset: Vector3
	Property BillboardGui.StudsOffsetWorldSpace: Vector3
	Function BillboardGui:GetScreenSpaceBounds() -> any {RobloxScriptSecurity}
Class PluginGui : LayerCollector [NotCreatable] [NotReplicated]
	Property PluginGui.Title: string
	Function PluginGui:BindToClose(function: ((...any) -> ...any)? = nil) -> ()
	Function PluginGui:GetRelativeMousePosition() -> Vector2 {PluginSecurity}
	Event PluginGui.PluginDragDropped(dragData: { [string]: any }) {PluginSecurity}
	Event PluginGui.PluginDragEntered(dragData: { [string]: any }) {PluginSecurity}
	Event PluginGui.PluginDragLeft(dragData: { [string]: any }) {PluginSecurity}
	Event PluginGui.PluginDragMoved(dragData: { [string]: any }) {PluginSecurity}
	Event PluginGui.WindowFocusReleased() {PluginSecurity}
	Event PluginGui.WindowFocused() {PluginSecurity}
Class DockWidgetPluginGui : PluginGui [NotCreatable] [NotReplicated]
	Property DockWidgetPluginGui.HostWidgetWasRestored: boolean [ReadOnly]
	Function DockWidgetPluginGui:RequestRaise() -> () {RobloxScriptSecurity}
Class QWidgetPluginGui : PluginGui [NotCreatable] [NotReplicated]
Class ScreenGui : LayerCollector
	Property ScreenGui.ClipToDeviceSafeArea: boolean
	Property ScreenGui.SafeAreaCompatibility: Enum.SafeAreaCompatibility
	Property ScreenGui.ScreenInsets: Enum.ScreenInsets
	Property ScreenGui.OnTopOfCoreBlur: boolean {RobloxScriptSecurity} [Hidden]
	Property ScreenGui.DisplayOrder: number
	Property ScreenGui.IgnoreGuiInset: boolean [📁 LoadOnly]
Class GuiMain : ScreenGui [Deprecated]
Class SurfaceGuiBase : LayerCollector [NotCreatable]
	Property SurfaceGuiBase.Active: boolean
	Property SurfaceGuiBase.Adornee: Instance?
	Property SurfaceGuiBase.Face: Enum.NormalId
Class AdGui : SurfaceGuiBase
	Property AdGui.FallbackImage: ContentId
	Property AdGui.Status: Enum.AdUnitStatus [ReadOnly]
	Property AdGui.AdShape: Enum.AdShape
	Property AdGui.EnableVideoAds: boolean
	Function AdGui:GetSingleReportAdInfo() -> { [string]: any } {RobloxScriptSecurity}
	Function AdGui:HandleLuaUIEvent(eventType: Enum.AdUIEventType) -> () {RobloxScriptSecurity}
	Function AdGui:forwardStateToLuaUI() -> () {RobloxScriptSecurity}
	Event AdGui.AdEvent(adEventType: Enum.AdEventType) {RobloxSecurity} [Hidden]
	Event AdGui.ReportIsSubscribedToVideoCompletion() {RobloxSecurity} [Hidden]
	Event AdGui.adGuiStateChanged(adUIState: any) {RobloxScriptSecurity}
	Callback AdGui.OnAdEvent(eventInfo: { [string]: any }) -> boolean
Class SurfaceGui : SurfaceGuiBase
	Property SurfaceGui.HorizontalCurvature: number {RobloxScriptSecurity} [Hidden]
	Property SurfaceGui.Shape: Enum.SurfaceGuiShape {RobloxScriptSecurity} [Hidden]
	Property SurfaceGui.ZOffset: number
	Property SurfaceGui.ClipsDescendants: boolean
	Property SurfaceGui.AlwaysOnTop: boolean
	Property SurfaceGui.Brightness: number
	Property SurfaceGui.LightInfluence: number
	Property SurfaceGui.MaxDistance: number
	Property SurfaceGui.ToolPunchThroughDistance: number
	Property SurfaceGui.CanvasSize: Vector2
	Property SurfaceGui.PixelsPerStud: number
	Property SurfaceGui.SizingMode: Enum.SurfaceGuiSizingMode
Class GuiBase3d : GuiBase [NotCreatable]
	Property GuiBase3d.Color: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property GuiBase3d.Color3: Color3
	Property GuiBase3d.Transparency: number
	Property GuiBase3d.Visible: boolean
Class FloorWire : GuiBase3d [Deprecated]
	Property FloorWire.Texture: ContentId [Deprecated]
	Property FloorWire.TextureSize: Vector2 [Deprecated]
	Property FloorWire.CycleOffset: number [Deprecated]
	Property FloorWire.From: BasePart? [Deprecated]
	Property FloorWire.StudsBetweenTextures: number [Deprecated]
	Property FloorWire.To: BasePart? [Deprecated]
	Property FloorWire.Velocity: number [Deprecated]
	Property FloorWire.WireRadius: number [Deprecated]
Class InstanceAdornment : GuiBase3d [NotCreatable]
	Property InstanceAdornment.Adornee: Instance?
Class SelectionBox : InstanceAdornment
	Property SelectionBox.LineThickness: number
	Property SelectionBox.StudioSelectionBox: boolean {RobloxScriptSecurity} [Hidden]
	Property SelectionBox.SurfaceColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property SelectionBox.SurfaceColor3: Color3
	Property SelectionBox.SurfaceTransparency: number
Class PVAdornment : GuiBase3d [NotCreatable]
	Property PVAdornment.Adornee: PVInstance?
Class HandleAdornment : PVAdornment [NotCreatable]
	Property HandleAdornment.AdornCullingMode: Enum.AdornCullingMode
	Property HandleAdornment.AlwaysOnTop: boolean
	Property HandleAdornment.CFrame: CFrame
	Property HandleAdornment.SizeRelativeOffset: Vector3
	Property HandleAdornment.ZIndex: number
	Event HandleAdornment.MouseButton1Down()
	Event HandleAdornment.MouseButton1Up()
	Event HandleAdornment.MouseEnter()
	Event HandleAdornment.MouseLeave()
Class BoxHandleAdornment : HandleAdornment
	Property BoxHandleAdornment.Size: Vector3
Class ConeHandleAdornment : HandleAdornment
	Property ConeHandleAdornment.Height: number
	Property ConeHandleAdornment.Radius: number
Class CylinderHandleAdornment : HandleAdornment
	Property CylinderHandleAdornment.Angle: number
	Property CylinderHandleAdornment.Height: number
	Property CylinderHandleAdornment.InnerRadius: number
	Property CylinderHandleAdornment.Radius: number
Class ImageHandleAdornment : HandleAdornment
	Property ImageHandleAdornment.Image: ContentId
	Property ImageHandleAdornment.Size: Vector2
Class LineHandleAdornment : HandleAdornment
	Property LineHandleAdornment.Length: number
	Property LineHandleAdornment.Thickness: number
Class SphereHandleAdornment : HandleAdornment
	Property SphereHandleAdornment.Radius: number
Class WireframeHandleAdornment : HandleAdornment
	Property WireframeHandleAdornment.Scale: Vector3
	Function WireframeHandleAdornment:AddLine(from: Vector3, to: Vector3) -> ()
	Function WireframeHandleAdornment:AddLines(points: { any }) -> ()
	Function WireframeHandleAdornment:AddPath(points: { any }, loop: boolean) -> ()
	Function WireframeHandleAdornment:AddText(point: Vector3, text: string, size: number? = 12) -> ()
	Function WireframeHandleAdornment:Clear() -> ()
Class ParabolaAdornment : PVAdornment
	Property ParabolaAdornment.A: number {RobloxScriptSecurity} [Hidden]
	Property ParabolaAdornment.B: number {RobloxScriptSecurity} [Hidden]
	Property ParabolaAdornment.C: number {RobloxScriptSecurity} [Hidden]
	Property ParabolaAdornment.Range: number {RobloxScriptSecurity} [Hidden]
	Property ParabolaAdornment.Thickness: number {RobloxScriptSecurity} [Hidden]
	Function ParabolaAdornment:FindPartOnParabola(ignoreDescendentsTable: { Instance }) -> ...any {RobloxScriptSecurity}
Class SelectionSphere : PVAdornment
	Property SelectionSphere.SurfaceColor: BrickColor [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property SelectionSphere.SurfaceColor3: Color3
	Property SelectionSphere.SurfaceTransparency: number
Class PartAdornment : GuiBase3d [NotCreatable]
	Property PartAdornment.Adornee: BasePart?
Class HandlesBase : PartAdornment [NotCreatable]
Class ArcHandles : HandlesBase
	Property ArcHandles.Axes: Axes
	Property ArcHandles.MouseButton1DownConnectionCount: number [Hidden] [NotScriptable]
	Property ArcHandles.MouseButton1UpConnectionCount: number [Hidden] [NotScriptable]
	Property ArcHandles.MouseDragConnectionCount: number [Hidden] [NotScriptable]
	Property ArcHandles.MouseEnterConnectionCount: number [Hidden] [NotScriptable]
	Property ArcHandles.MouseLeaveConnectionCount: number [Hidden] [NotScriptable]
	Event ArcHandles.MouseButton1Down(axis: Enum.Axis)
	Event ArcHandles.MouseButton1Up(axis: Enum.Axis)
	Event ArcHandles.MouseDrag(axis: Enum.Axis, relativeAngle: number, deltaRadius: number)
	Event ArcHandles.MouseEnter(axis: Enum.Axis)
	Event ArcHandles.MouseLeave(axis: Enum.Axis)
Class Handles : HandlesBase
	Property Handles.Style: Enum.HandlesStyle
	Property Handles.Faces: Faces
	Property Handles.MouseButton1DownConnectionCount: number [Hidden] [NotScriptable]
	Property Handles.MouseButton1UpConnectionCount: number [Hidden] [NotScriptable]
	Property Handles.MouseDragConnectionCount: number [Hidden] [NotScriptable]
	Property Handles.MouseEnterConnectionCount: number [Hidden] [NotScriptable]
	Property Handles.MouseLeaveConnectionCount: number [Hidden] [NotScriptable]
	Event Handles.MouseButton1Down(face: Enum.NormalId)
	Event Handles.MouseButton1Up(face: Enum.NormalId)
	Event Handles.MouseDrag(face: Enum.NormalId, distance: number)
	Event Handles.MouseEnter(face: Enum.NormalId)
	Event Handles.MouseLeave(face: Enum.NormalId)
Class SurfaceSelection : PartAdornment
	Property SurfaceSelection.TargetSurface: Enum.NormalId
Class SelectionLasso : GuiBase3d [NotCreatable]
	Property SelectionLasso.Humanoid: Humanoid?
Class SelectionPartLasso : SelectionLasso [Deprecated]
	Property SelectionPartLasso.Part: BasePart? [Deprecated]
Class SelectionPointLasso : SelectionLasso [Deprecated]
	Property SelectionPointLasso.Point: Vector3 [Deprecated]
Class Path2D : GuiBase
	Property Path2D.SelectedControlPoint: number {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property Path2D.SelectedControlPointData: Path2DControlPoint {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property Path2D.Closed: boolean
	Property Path2D.Color3: Color3
	Property Path2D.PropertiesSerialize: BinaryString {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property Path2D.Thickness: number
	Property Path2D.Transparency: number {RobloxScriptSecurity}
	Property Path2D.Visible: boolean
	Property Path2D.ZIndex: number
	Function Path2D:GetBoundingRect() -> Rect
	Function Path2D:GetControlPoint(index: number) -> Path2DControlPoint
	Function Path2D:GetControlPoints() -> { any }
	Function Path2D:GetLength() -> number
	Function Path2D:GetMaxControlPoints() -> number
	Function Path2D:GetPositionOnCurve(t: number) -> UDim2
	Function Path2D:GetPositionOnCurveArcLength(t: number) -> UDim2
	Function Path2D:GetSegmentCount() -> number {RobloxScriptSecurity}
	Function Path2D:GetTangentOnCurve(t: number) -> Vector2
	Function Path2D:GetTangentOnCurveArcLength(t: number) -> Vector2
	Function Path2D:InsertControlPoint(index: number, point: Path2DControlPoint) -> ()
	Function Path2D:RemoveControlPoint(index: number) -> ()
	Function Path2D:SetControlPoints(controlPoints: { any }) -> ()
	Function Path2D:UpdateControlPoint(index: number, point: Path2DControlPoint) -> ()
	Event Path2D.ControlPointChanged()
Class GuiService : Instance [NotCreatable] [Service] [NotReplicated]
	Property GuiService.AutoSelectGuiEnabled: boolean
	Property GuiService.CoreEffectFolder: Folder? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property GuiService.CoreGuiFolder: Folder? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property GuiService.CoreGuiNavigationEnabled: boolean [Hidden] [NotReplicated]
	Property GuiService.GuiNavigationEnabled: boolean
	Property GuiService.IsModalDialog: boolean [ReadOnly] [Deprecated]
	Property GuiService.IsWindows: boolean [ReadOnly] [Deprecated]
	Property GuiService.MenuIsOpen: boolean [ReadOnly]
	Property GuiService.PreferredTextSize: Enum.PreferredTextSize [ReadOnly]
	Property GuiService.PreferredTransparency: number [Hidden] [ReadOnly]
	Property GuiService.ReducedMotionEnabled: boolean [Hidden] [ReadOnly]
	Property GuiService.SelectedCoreObject: GuiObject? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property GuiService.SelectedObject: GuiObject?
	Property GuiService.TopbarInset: Rect [ReadOnly]
	Property GuiService.TouchControlsEnabled: boolean
	Function GuiService:AddCenterDialog(dialog: Instance, centerDialogType: Enum.CenterDialogType, showFunction: (...any) -> ...any, hideFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function GuiService:AddKey(key: string) -> () {RobloxScriptSecurity}
	Function GuiService:AddSelectionParent(selectionName: string, selectionParent: Instance) -> () [Deprecated]
	Function GuiService:AddSelectionTuple(selectionName: string, selections: ...any) -> () [Deprecated]
	Function GuiService:AddSpecialKey(key: Enum.SpecialKey) -> () {RobloxScriptSecurity}
	Function GuiService:BroadcastNotification(data: string, notificationType: number) -> () {RobloxScriptSecurity}
	Function GuiService:ClearError() -> () {RobloxScriptSecurity}
	Function GuiService:CloseInspectMenu() -> ()
	Function GuiService:CloseStatsBasedOnInputString(input: string) -> boolean {RobloxScriptSecurity}
	Function GuiService:DismissNotification(notificationId: string) -> boolean
	Function GuiService:ForceTenFootInterface(isForced: boolean) -> () {RobloxScriptSecurity}
	Function GuiService:GetBrickCount() -> number {RobloxScriptSecurity}
	Function GuiService:GetClosestDialogToPosition(position: Vector3) -> Instance? {RobloxScriptSecurity}
	Function GuiService:GetEmotesMenuOpen() -> boolean
	Function GuiService:GetErrorCode() -> Enum.ConnectionError {RobloxScriptSecurity}
	Function GuiService:GetErrorMessage() -> string {RobloxScriptSecurity} [Deprecated]
	Function GuiService:GetErrorType() -> Enum.ConnectionError {RobloxScriptSecurity}
	Function GuiService:GetGameplayPausedNotificationEnabled() -> boolean
	Function GuiService:GetGuiInset() -> ...any
	Function GuiService:GetGuiIsVisible(guiType: Enum.GuiType) -> boolean {RobloxScriptSecurity}
	Function GuiService:GetHardwareSafeViewport() -> Vector2 {RobloxScriptSecurity}
	Function GuiService:GetInspectMenuEnabled() -> boolean
	Function GuiService:GetNotificationTypeList() -> { [string]: any } {RobloxScriptSecurity}
	Function GuiService:GetResolutionScale() -> number {RobloxScriptSecurity}
	Function GuiService:GetSafeZoneOffsets() -> { [string]: any } {RobloxScriptSecurity}
	Function GuiService:GetScreenResolution() -> Vector2 {RobloxScriptSecurity} [Yields]
	Function GuiService:GetUiMessage() -> string {RobloxScriptSecurity}
	Function GuiService:InspectPlayerFromHumanoidDescription(humanoidDescription: Instance, name: string) -> ()
	Function GuiService:InspectPlayerFromUserId(userId: number) -> ()
	Function GuiService:InspectPlayerFromUserIdWithCtx(userId: number, ctx: string) -> () {RobloxScriptSecurity}
	Function GuiService:IsMemoryTrackerEnabled() -> boolean {RobloxScriptSecurity}
	Function GuiService:IsTenFootInterface() -> boolean
	Function GuiService:NotificationDismissed(notificationId: string) -> () {RobloxScriptSecurity}
	Function GuiService:NotificationDisplayed(notificationId: string) -> () {RobloxScriptSecurity}
	Function GuiService:OpenBrowserWindow(url: string) -> () {RobloxScriptSecurity} [Deprecated]
	Function GuiService:OpenNativeOverlay(title: string, url: string) -> () {RobloxScriptSecurity} [Deprecated]
	Function GuiService:RemoveCenterDialog(dialog: Instance) -> () {RobloxScriptSecurity}
	Function GuiService:RemoveKey(key: string) -> () {RobloxScriptSecurity}
	Function GuiService:RemoveSelectionGroup(selectionName: string) -> () [Deprecated]
	Function GuiService:RemoveSpecialKey(key: Enum.SpecialKey) -> () {RobloxScriptSecurity}
	Function GuiService:Select(selectionParent: Instance) -> ()
	Function GuiService:SendNotification(notificationInfo: { [string]: any }) -> string
	Function GuiService:SendUIOcclusionMetricsForQueryRegion(position: UDim2, size: UDim2, regionName: string) -> () {RobloxScriptSecurity}
	Function GuiService:SetEmotesMenuOpen(isOpen: boolean) -> ()
	Function GuiService:SetGameplayPausedNotificationEnabled(enabled: boolean) -> ()
	Function GuiService:SetGlobalGuiInset(x1: number, y1: number, x2: number, y2: number) -> () {RobloxScriptSecurity}
	Function GuiService:SetHardwareSafeAreaInsets(left: number, top: number, right: number, bottom: number) -> () {RobloxScriptSecurity}
	Function GuiService:SetInspectMenuEnabled(enabled: boolean) -> ()
	Function GuiService:SetMenuIsOpen(open: boolean, menuName: string? = "default") -> () {RobloxScriptSecurity}
	Function GuiService:SetPurchasePromptIsShown(isShown: boolean) -> () {RobloxScriptSecurity}
	Function GuiService:SetSafeZoneOffsets(top: number, bottom: number, left: number, right: number) -> () {RobloxScriptSecurity}
	Function GuiService:SetTopbarInset(topbarInset: Rect) -> () {RobloxScriptSecurity}
	Function GuiService:SetUiMessage(msgType: Enum.UiMessageType, uiMessage: string? = "errorCode") -> () {LocalUserSecurity}
	Function GuiService:ShowStatsBasedOnInputString(input: string) -> boolean {RobloxScriptSecurity}
	Function GuiService:ToggleFullscreen() -> () {RobloxScriptSecurity}
	Function GuiService:ToggleGuiIsVisibleForCaptures(guiType: Enum.GuiType) -> () {RobloxScriptSecurity}
	Function GuiService:ToggleGuiIsVisibleIfAllowed(guiType: Enum.GuiType) -> () {RobloxScriptSecurity}
	Function GuiService:UserInteractedWithNotification(notificationId: string, buttonIndex: number) -> () {RobloxScriptSecurity}
	Event GuiService.BrowserWindowClosed() {RobloxScriptSecurity} [Deprecated]
	Event GuiService.CloseInspectMenuRequest() {RobloxScriptSecurity}
	Event GuiService.CoreGuiRenderOverflowed() {RobloxScriptSecurity}
	Event GuiService.EmotesMenuOpenChanged(isOpen: boolean) {RobloxScriptSecurity}
	Event GuiService.ErrorMessageChanged(newErrorMessage: string) {RobloxScriptSecurity} [Deprecated]
	Event GuiService.GuiVisibilityChangedSignal(guiType: Enum.GuiType, visible: boolean) {RobloxScriptSecurity}
	Event GuiService.InspectMenuEnabledChangedSignal(enabled: boolean) {RobloxScriptSecurity}
	Event GuiService.InspectPlayerFromHumanoidDescriptionRequest(humanoidDescription: Instance, name: string) {RobloxScriptSecurity}
	Event GuiService.InspectPlayerFromUserIdWithCtxRequest(userId: number, ctx: string) {RobloxScriptSecurity}
	Event GuiService.KeyPressed(key: string, modifiers: string) {RobloxScriptSecurity}
	Event GuiService.MenuClosed()
	Event GuiService.MenuOpened()
	Event GuiService.NativeClose() {RobloxScriptSecurity}
	Event GuiService.NetworkPausedEnabledChanged(enabled: boolean) {RobloxScriptSecurity}
	Event GuiService.Open9SliceEditor(selectedImageObject: Instance) {RobloxScriptSecurity}
	Event GuiService.OpenStyleEditor(styleBase: Instance) {RobloxScriptSecurity}
	Event GuiService.PurchasePromptShown() {RobloxScriptSecurity}
	Event GuiService.SafeZoneOffsetsChanged() {RobloxScriptSecurity}
	Event GuiService.ShowLeaveConfirmation() {RobloxScriptSecurity}
	Event GuiService.SpecialKeyPressed(key: Enum.SpecialKey, modifiers: string) {RobloxScriptSecurity}
	Event GuiService.UiMessageChanged(msgType: Enum.UiMessageType, newUiMessage: string) {RobloxScriptSecurity}
	Callback GuiService.SendCoreUiNotification(title: string, text: string) -> () {RobloxScriptSecurity}
Class GuidRegistryService : Instance [NotCreatable] [Service]
Class HapticEffect : Instance
	Property HapticEffect.Looped: boolean
	Property HapticEffect.Position: Vector3 {RobloxScriptSecurity}
	Property HapticEffect.Radius: number {RobloxScriptSecurity}
	Property HapticEffect.Type: Enum.HapticEffectType
	Property HapticEffect.Waveform: FloatCurve? {RobloxScriptSecurity}
	Function HapticEffect:Play() -> ()
	Function HapticEffect:Stop() -> ()
Class HapticService : Instance [NotCreatable] [Service] [NotReplicated]
	Function HapticService:GetMotor(inputType: Enum.UserInputType, vibrationMotor: Enum.VibrationMotor) -> ...any
	Function HapticService:IsMotorSupported(inputType: Enum.UserInputType, vibrationMotor: Enum.VibrationMotor) -> boolean
	Function HapticService:IsVibrationSupported(inputType: Enum.UserInputType) -> boolean
	Function HapticService:SetMotor(inputType: Enum.UserInputType, vibrationMotor: Enum.VibrationMotor, vibrationValues: ...any) -> ()
Class HeatmapService : Instance [NotCreatable] [Service]
Class HeightmapImporterService : Instance [Service] [NotReplicated]
	Function HeightmapImporterService:CancelImportHeightmap() -> () {RobloxScriptSecurity}
	Function HeightmapImporterService:GetHeightmapPreviewAsync(heightmapAssetId: ContentId) -> ...any {RobloxScriptSecurity} [Yields]
	Function HeightmapImporterService:ImportHeightmap(region: Region3, heightmapAssetId: ContentId, colormapAssetId: ContentId, defaultMaterial: Enum.Material) -> () {RobloxScriptSecurity} [Yields]
	Function HeightmapImporterService:IsValidColormap(colormapAssetId: ContentId) -> ...any {RobloxScriptSecurity}
	Function HeightmapImporterService:IsValidHeightmap(heightmapAssetId: ContentId) -> ...any {RobloxScriptSecurity}
	Function HeightmapImporterService:SetImportHeightmapPaused(paused: boolean) -> () {RobloxScriptSecurity}
	Event HeightmapImporterService.ColormapHasUnknownPixels() {RobloxScriptSecurity}
	Event HeightmapImporterService.ProgressUpdate(progressRatio: number, operation: string) {RobloxScriptSecurity}
Class HiddenSurfaceRemovalAsset : Instance
	Property HiddenSurfaceRemovalAsset.HSRData: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property HiddenSurfaceRemovalAsset.HSRMeshIdData: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class Highlight : Instance
	Property Highlight.Adornee: Instance?
	Property Highlight.DepthMode: Enum.HighlightDepthMode
	Property Highlight.Enabled: boolean
	Property Highlight.FillColor: Color3
	Property Highlight.FillTransparency: number
	Property Highlight.LineThickness: number {RobloxScriptSecurity} [Hidden]
	Property Highlight.OutlineColor: Color3
	Property Highlight.OutlineTransparency: number
	Property Highlight.ReservedId: Enum.ReservedHighlightId {RobloxScriptSecurity} [Hidden]
Class Hopper : Instance [NotCreatable] [Service] [Deprecated]
Class HttpRbxApiService : Instance [NotCreatable] [Service]
	Function HttpRbxApiService:GetAsync(apiUrlPath: string, priority: Enum.ThrottlingPriority? = "Default", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function HttpRbxApiService:GetAsyncFullUrl(apiUrl: string, priority: Enum.ThrottlingPriority? = "Default", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function HttpRbxApiService:GetDocumentationUrl(partialUrl: string) -> string {RobloxScriptSecurity}
	Function HttpRbxApiService:PostAsync(apiUrlPath: string, data: string, priority: Enum.ThrottlingPriority? = "Default", content_type: Enum.HttpContentType? = "ApplicationJson", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function HttpRbxApiService:PostAsyncFullUrl(apiUrl: string, data: string, priority: Enum.ThrottlingPriority? = "Default", content_type: Enum.HttpContentType? = "ApplicationJson", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function HttpRbxApiService:RequestAsync(requestOptions: { [string]: any }, priority: Enum.ThrottlingPriority? = "Default", content_type: Enum.HttpContentType? = "ApplicationJson", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function HttpRbxApiService:RequestLimitedAsync(requestOptions: { [string]: any }, priority: Enum.ThrottlingPriority? = "Default", content_type: Enum.HttpContentType? = "ApplicationJson", httpRequestType: Enum.HttpRequestType? = "Default") -> string [Yields]
Class HttpRequest : Instance [NotCreatable]
	Function HttpRequest:Cancel() -> () {RobloxScriptSecurity}
	Function HttpRequest:Start(callback: (...any) -> ...any) -> () {RobloxScriptSecurity}
Class HttpService : Instance [NotCreatable] [Service]
	Property HttpService.HttpEnabled: boolean {✏️LocalUserSecurity}
	Function HttpService:GenerateGUID(wrapInCurlyBraces: boolean? = true) -> string {🧬Safe}
	Function HttpService:GetAsync(url: any, nocache: boolean? = false, headers: any) -> string [Yields]
	Function HttpService:GetHttpEnabled() -> boolean {RobloxScriptSecurity}
	Function HttpService:GetSecret(key: string) -> Secret {🧬Safe}
	Function HttpService:GetUserAgent() -> string {RobloxScriptSecurity}
	Function HttpService:JSONDecode(input: string) -> any [CustomLuaState] {🧬Safe}
	Function HttpService:JSONEncode(input: any) -> string [CustomLuaState] {🧬Safe}
	Function HttpService:PostAsync(url: any, data: string, content_type: Enum.HttpContentType? = "ApplicationJson", compress: boolean? = false, headers: any) -> string [Yields]
	Function HttpService:RequestAsync(requestOptions: { [string]: any }) -> { [string]: any } [Yields]
	Function HttpService:RequestInternal(options: { [string]: any }) -> Instance? {RobloxScriptSecurity}
	Function HttpService:SetHttpEnabled(enabled: boolean) -> () {RobloxScriptSecurity}
	Function HttpService:UrlEncode(input: string) -> string {🧬Safe}
Class Humanoid : Instance
	Property Humanoid.BreakJointsOnDeath: boolean
	Property Humanoid.CollisionType: Enum.HumanoidCollisionType {✏️PluginSecurity} [Deprecated]
	Property Humanoid.EvaluateStateMachine: boolean
	Property Humanoid.RequiresNeck: boolean
	Property Humanoid.AutoRotate: boolean
	Property Humanoid.FloorMaterial: Enum.Material [ReadOnly]
	Property Humanoid.Jump: boolean [📁 LoadOnly] [NotReplicated]
	Property Humanoid.JumpReplicate: boolean [Hidden] [NotScriptable]
	Property Humanoid.MoveDirection: Vector3 [ReadOnly]
	Property Humanoid.MoveDirectionInternal: Vector3 [Hidden] [NotScriptable]
	Property Humanoid.PlatformStand: boolean
	Property Humanoid.SeatPart: BasePart? [ReadOnly]
	Property Humanoid.Sit: boolean
	Property Humanoid.Strafe: boolean [Hidden] [NotScriptable]
	Property Humanoid.TargetPoint: Vector3
	Property Humanoid.WalkAngleError: number [Hidden] [NotScriptable]
	Property Humanoid.WalkDirection: Vector3 [Hidden] [NotScriptable]
	Property Humanoid.WalkToPart: BasePart?
	Property Humanoid.WalkToPoint: Vector3
	Property Humanoid.CameraMaxDistance: number [Hidden] [NotScriptable]
	Property Humanoid.CameraMinDistance: number [Hidden] [NotScriptable]
	Property Humanoid.CameraMode: Enum.CameraMode [Hidden] [NotScriptable]
	Property Humanoid.CameraOffset: Vector3
	Property Humanoid.DisplayDistanceType: Enum.HumanoidDisplayDistanceType
	Property Humanoid.DisplayName: string
	Property Humanoid.HealthDisplayDistance: number
	Property Humanoid.HealthDisplayType: Enum.HumanoidHealthDisplayType
	Property Humanoid.InternalBodyScale: Vector3 [Hidden] [NotReplicated] [NotScriptable]
	Property Humanoid.InternalDisplayName: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Humanoid.InternalHeadScale: number [Hidden] [NotReplicated] [NotScriptable]
	Property Humanoid.InternalOriginalHipHeight: number [Hidden] [NotScriptable]
	Property Humanoid.LeftLeg: BasePart? [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property Humanoid.NameDisplayDistance: number
	Property Humanoid.NameOcclusion: Enum.NameOcclusion
	Property Humanoid.NetworkHumanoidState: Enum.HumanoidStateType [Hidden] [NotScriptable]
	Property Humanoid.RigType: Enum.HumanoidRigType
	Property Humanoid.RightLeg: BasePart? [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property Humanoid.RootPart: BasePart? [ReadOnly]
	Property Humanoid.Torso: BasePart? [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property Humanoid.AutomaticScalingEnabled: boolean
	Property Humanoid.Health: number [📁 LoadOnly] [NotReplicated]
	Property Humanoid.Health_XML: number [Hidden] [NotScriptable]
	Property Humanoid.HipHeight: number
	Property Humanoid.MaxHealth: number
	Property Humanoid.MaxSlopeAngle: number
	Property Humanoid.WalkSpeed: number
	Property Humanoid.AutoJumpEnabled: boolean
	Property Humanoid.JumpHeight: number
	Property Humanoid.JumpPower: number
	Property Humanoid.UseJumpPower: boolean
	Function Humanoid:AddAccessory(accessory: Instance) -> ()
	Function Humanoid:AddCustomStatus(status: string) -> boolean [Deprecated]
	Function Humanoid:AddStatus(status: Enum.Status? = "Poison") -> boolean [Deprecated]
	Function Humanoid:ApplyDescription(humanoidDescription: HumanoidDescription, assetTypeVerification: Enum.AssetTypeVerification? = "Default") -> () [Yields]
	Function Humanoid:ApplyDescriptionClientServer(humanoidDescription: HumanoidDescription) -> () {RobloxScriptSecurity} [Yields]
	Function Humanoid:ApplyDescriptionReset(humanoidDescription: HumanoidDescription, assetTypeVerification: Enum.AssetTypeVerification? = "Default") -> () [Yields]
	Function Humanoid:BuildRigFromAttachments() -> ()
	Function Humanoid:CacheDefaults() -> () {RobloxScriptSecurity}
	Function Humanoid:ChangeState(state: Enum.HumanoidStateType? = "None") -> ()
	Function Humanoid:EquipTool(tool: Instance) -> ()
	Function Humanoid:GetAccessories() -> { any }
	Function Humanoid:GetAccessoryHandleScale(instance: Instance, partType: Enum.BodyPartR15) -> Vector3 {RobloxScriptSecurity}
	Function Humanoid:GetAppliedDescription() -> HumanoidDescription
	Function Humanoid:GetBodyPartR15(part: Instance) -> Enum.BodyPartR15
	Function Humanoid:GetLimb(part: Instance) -> Enum.Limb
	Function Humanoid:GetMoveVelocity() -> Vector3
	Function Humanoid:GetPlayingAnimationTracks() -> { any } [Deprecated]
	Function Humanoid:GetState() -> Enum.HumanoidStateType {🧬Safe}
	Function Humanoid:GetStateEnabled(state: Enum.HumanoidStateType) -> boolean {🧬Safe}
	Function Humanoid:GetStatuses() -> { any } [Deprecated]
	Function Humanoid:HasCustomStatus(status: string) -> boolean [Deprecated]
	Function Humanoid:HasStatus(status: Enum.Status? = "Poison") -> boolean [Deprecated]
	Function Humanoid:LoadAnimation(animation: Animation) -> AnimationTrack [Deprecated]
	Function Humanoid:Move(moveDirection: Vector3, relativeToCamera: boolean? = false) -> ()
	Function Humanoid:MoveTo(location: Vector3, part: Instance? = nil) -> ()
	Function Humanoid:PlayEmote(emoteName: string) -> boolean [Yields]
	Function Humanoid:PlayEmoteAndGetAnimTrackById(emoteId: number) -> ...any {RobloxScriptSecurity} [Yields]
	Function Humanoid:RemoveAccessories() -> ()
	Function Humanoid:RemoveCustomStatus(status: string) -> boolean [Deprecated]
	Function Humanoid:RemoveStatus(status: Enum.Status? = "Poison") -> boolean [Deprecated]
	Function Humanoid:ReplaceBodyPartR15(bodyPart: Enum.BodyPartR15, part: BasePart) -> boolean
	Function Humanoid:SetClickToWalkEnabled(enabled: boolean) -> () {RobloxScriptSecurity}
	Function Humanoid:SetStateEnabled(state: Enum.HumanoidStateType, enabled: boolean) -> ()
	Function Humanoid:TakeDamage(amount: number) -> ()
	Function Humanoid:UnequipTools() -> ()
	Event Humanoid.AnimationPlayed(animationTrack: AnimationTrack) [Deprecated]
	Event Humanoid.ApplyDescriptionFinished(description: HumanoidDescription)
	Event Humanoid.Climbing(speed: number)
	Event Humanoid.ClusterCompositionFinished() {RobloxScriptSecurity}
	Event Humanoid.CustomStatusAdded(status: string) [Deprecated]
	Event Humanoid.CustomStatusRemoved(status: string) [Deprecated]
	Event Humanoid.Died()
	Event Humanoid.EmoteTriggered(success: boolean, animationTrack: AnimationTrack) {RobloxScriptSecurity}
	Event Humanoid.FallingDown(active: boolean)
	Event Humanoid.FreeFalling(active: boolean)
	Event Humanoid.GettingUp(active: boolean)
	Event Humanoid.HealthChanged(health: number)
	Event Humanoid.Jumping(active: boolean)
	Event Humanoid.MoveToFinished(reached: boolean)
	Event Humanoid.PlatformStanding(active: boolean)
	Event Humanoid.Ragdoll(active: boolean)
	Event Humanoid.Running(speed: number)
	Event Humanoid.Seated(active: boolean, currentSeatPart: BasePart)
	Event Humanoid.ServerApplyDescription(status: boolean) {RobloxSecurity} [Hidden]
	Event Humanoid.ServerBreakJoints() {RobloxSecurity} [Hidden]
	Event Humanoid.ServerEquipTool(tool: Tool) {RobloxSecurity} [Hidden]
	Event Humanoid.StateChanged(old: Enum.HumanoidStateType, new: Enum.HumanoidStateType)
	Event Humanoid.StateEnabledChanged(state: Enum.HumanoidStateType, isEnabled: boolean)
	Event Humanoid.StatusAdded(status: Enum.Status) [Deprecated]
	Event Humanoid.StatusRemoved(status: Enum.Status) [Deprecated]
	Event Humanoid.Strafing(active: boolean)
	Event Humanoid.Swimming(speed: number)
	Event Humanoid.Touched(touchingPart: BasePart, humanoidPart: BasePart)
Class HumanoidDescription : Instance
	Property HumanoidDescription.AccessoryBlob: string [📁 LoadOnly] [NotReplicated] [NotScriptable]
	Property HumanoidDescription.AccessoryRigidAndLayeredBlob: string {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property HumanoidDescription.BackAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.FaceAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.FrontAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.HairAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.HatAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.NeckAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.ShouldersAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.WaistAccessory: string [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.ClimbAnimation: number
	Property HumanoidDescription.FallAnimation: number
	Property HumanoidDescription.IdleAnimation: number
	Property HumanoidDescription.JumpAnimation: number
	Property HumanoidDescription.MoodAnimation: number
	Property HumanoidDescription.NumberEmotesLoaded: number {RobloxScriptSecurity} [Hidden]
	Property HumanoidDescription.RunAnimation: number
	Property HumanoidDescription.SwimAnimation: number
	Property HumanoidDescription.WalkAnimation: number
	Property HumanoidDescription.HeadColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.LeftArmColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.LeftLegColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.RightArmColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.RightLegColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.TorsoColor: Color3 [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.Face: number
	Property HumanoidDescription.Head: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.LeftArm: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.LeftLeg: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.RightArm: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.RightLeg: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.Torso: number [📁 LoadOnly] [NotReplicated]
	Property HumanoidDescription.GraphicTShirt: number
	Property HumanoidDescription.Pants: number
	Property HumanoidDescription.Shirt: number
	Property HumanoidDescription.EmotesDataInternal: string [Hidden] [NotScriptable]
	Property HumanoidDescription.EquippedEmotesDataInternal: string [Hidden] [NotScriptable]
	Property HumanoidDescription.ResetIncludesBodyParts: boolean {RobloxScriptSecurity} [Hidden]
	Property HumanoidDescription.BodyTypeScale: number
	Property HumanoidDescription.DepthScale: number
	Property HumanoidDescription.HeadScale: number
	Property HumanoidDescription.HeightScale: number
	Property HumanoidDescription.ProportionScale: number
	Property HumanoidDescription.WidthScale: number
	Function HumanoidDescription:AddEmote(name: string, assetId: number) -> ()
	Function HumanoidDescription:GetAccessories(includeRigidAccessories: boolean) -> { any }
	Function HumanoidDescription:GetEmotes() -> { [string]: any }
	Function HumanoidDescription:GetEquippedEmotes() -> { any }
	Function HumanoidDescription:RemoveEmote(name: string) -> ()
	Function HumanoidDescription:SetAccessories(accessories: { any }, includeRigidAccessories: boolean) -> ()
	Function HumanoidDescription:SetEmotes(emotes: { [string]: any }) -> ()
	Function HumanoidDescription:SetEquippedEmotes(equippedEmotes: { any }) -> ()
	Event HumanoidDescription.EmotesChanged(newEmotes: { [string]: any })
	Event HumanoidDescription.EquippedEmotesChanged(newEquippedEmotes: { any })
Class IKControl : Instance
	Property IKControl.ChainRoot: Instance?
	Property IKControl.Enabled: boolean
	Property IKControl.EndEffector: Instance?
	Property IKControl.EndEffectorOffset: CFrame
	Property IKControl.Offset: CFrame
	Property IKControl.Pole: Instance?
	Property IKControl.Priority: number
	Property IKControl.SmoothTime: number
	Property IKControl.Target: Instance?
	Property IKControl.Type: Enum.IKControlType
	Property IKControl.Weight: number
	Function IKControl:GetChainCount() -> number
	Function IKControl:GetChainLength() -> number
	Function IKControl:GetNodeLocalCFrame(index: number) -> CFrame
	Function IKControl:GetNodeWorldCFrame(index: number) -> CFrame
	Function IKControl:GetRawFinalTarget() -> CFrame
	Function IKControl:GetSmoothedFinalTarget() -> CFrame
Class ILegacyStudioBridge : Instance [NotCreatable] [Service]
Class LegacyStudioBridge : ILegacyStudioBridge [NotCreatable] [Service] [NotReplicated]
Class IXPService : Instance [NotCreatable] [Service] [NotReplicated]
	Function IXPService:ClearUserLayers() -> () {LocalUserSecurity}
	Function IXPService:GetBrowserTrackerLayerLoadingStatus() -> Enum.IXPLoadingStatus {LocalUserSecurity}
	Function IXPService:GetBrowserTrackerLayerVariables(layerName: string) -> { [string]: any } {LocalUserSecurity}
	Function IXPService:GetBrowserTrackerStatusForLayer(layerName: string) -> Enum.IXPLoadingStatus? {LocalUserSecurity}
	Function IXPService:GetRegisteredUserLayersToStatus() -> { [string]: any } {LocalUserSecurity}
	Function IXPService:GetUserLayerLoadingStatus() -> Enum.IXPLoadingStatus {LocalUserSecurity}
	Function IXPService:GetUserLayerVariables(layerName: string) -> { [string]: any } {LocalUserSecurity}
	Function IXPService:GetUserStatusForLayer(layerName: string) -> Enum.IXPLoadingStatus? {LocalUserSecurity}
	Function IXPService:InitializeUserLayers(userId: number) -> () {LocalUserSecurity}
	Function IXPService:LogBrowserTrackerLayerExposure(layerName: string) -> () {LocalUserSecurity}
	Function IXPService:LogUserLayerExposure(layerName: string) -> () {LocalUserSecurity}
	Function IXPService:RegisterUserLayers(userLayers: any) -> () {LocalUserSecurity}
	Event IXPService.OnBrowserTrackerLayerLoadingStatusChanged(status: Enum.IXPLoadingStatus) {LocalUserSecurity}
	Event IXPService.OnUserLayerLoadingStatusChanged(status: Enum.IXPLoadingStatus) {LocalUserSecurity}
Class IncrementalPatchBuilder : Instance [NotCreatable] [Service] [NotReplicated]
	Property IncrementalPatchBuilder.AddPathsToBundle: boolean
	Property IncrementalPatchBuilder.BuildDebouncePeriod: number
	Property IncrementalPatchBuilder.HighCompression: boolean
	Property IncrementalPatchBuilder.SerializePatch: boolean
	Property IncrementalPatchBuilder.ZstdCompression: boolean
Class InputObject : Instance [NotCreatable]
	Property InputObject.Delta: Vector3
	Property InputObject.KeyCode: Enum.KeyCode
	Property InputObject.Position: Vector3
	Property InputObject.UserInputType: Enum.UserInputType
	Property InputObject.UserInputState: Enum.UserInputState
	Function InputObject:IsModifierKeyDown(modifierKey: Enum.ModifierKey) -> boolean
Class InsertService : Instance [NotCreatable] [Service]
	Property InsertService.AllowClientInsertModels: boolean [NotScriptable]
	Property InsertService.AllowInsertFreeModels: boolean [NotReplicated] [NotBrowsable] [Deprecated]
	Function InsertService:ApproveAssetId(assetId: number) -> () [Deprecated]
	Function InsertService:ApproveAssetVersionId(assetVersionId: number) -> () [Deprecated]
	Function InsertService:CreateMeshPartAsync(meshId: ContentId, collisionFidelity: Enum.CollisionFidelity, renderFidelity: Enum.RenderFidelity) -> MeshPart [Yields]
	Function InsertService:GetBaseCategories() -> { any } [Yields] [Deprecated]
	Function InsertService:GetBaseSets() -> { any } [Yields] [Deprecated]
	Function InsertService:GetCollection(categoryId: number) -> { any } [Yields] [Deprecated]
	Function InsertService:GetFreeDecals(searchText: string, pageNum: number) -> { any } [Yields]
	Function InsertService:GetFreeModels(searchText: string, pageNum: number) -> { any } [Yields]
	Function InsertService:GetLatestAssetVersionAsync(assetId: number) -> number [Yields]
	Function InsertService:GetLocalFileContents(contentId: string) -> string {RobloxScriptSecurity}
	Function InsertService:GetUserCategories(userId: number) -> { any } [Yields] [Deprecated]
	Function InsertService:GetUserSets(userId: number) -> { any } [Yields] [Deprecated]
	Function InsertService:Insert(instance: Instance) -> () [Deprecated]
	Function InsertService:LoadAsset(assetId: number) -> Instance? [Yields]
	Function InsertService:LoadAssetVersion(assetVersionId: number) -> Instance? [Yields]
	Function InsertService:LoadAssetWithFormat(assetId: number, format: string) -> { Instance } {RobloxScriptSecurity} [Yields]
	Function InsertService:LoadLocalAsset(assetPath: string) -> Instance? {RobloxScriptSecurity}
	Function InsertService:LoadPackageAsset(url: ContentId) -> { Instance } {RobloxScriptSecurity}
	Function InsertService:LoadPackageAssetAsync(url: ContentId) -> { Instance } {RobloxScriptSecurity} [Yields]
	Event InsertService.InternalDelete(instance: Instance) [Hidden]
Class InternalSyncItem : Instance [NotReplicated]
	Property InternalSyncItem.AutoSync: boolean {RobloxScriptSecurity} [NotReplicated]
	Property InternalSyncItem.Enabled: boolean {RobloxScriptSecurity} [NotReplicated]
	Property InternalSyncItem.Path: string {RobloxScriptSecurity} [NotReplicated]
	Property InternalSyncItem.Target: Instance? {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
Class InternalSyncService : Instance [NotCreatable] [Service] [NotReplicated]
Class JointInstance : Instance [NotCreatable]
	Property JointInstance.Active: boolean [ReadOnly]
	Property JointInstance.Enabled: boolean
	Property JointInstance.C0: CFrame
	Property JointInstance.C1: CFrame
	Property JointInstance.Part0: BasePart?
	Property JointInstance.Part1: BasePart?
Class DynamicRotate : JointInstance [NotCreatable]
	Property DynamicRotate.BaseAngle: number
Class RotateP : DynamicRotate [Deprecated]
Class RotateV : DynamicRotate [Deprecated]
Class Glue : JointInstance [Deprecated]
	Property Glue.F0: Vector3 [Deprecated]
	Property Glue.F1: Vector3 [Deprecated]
	Property Glue.F2: Vector3 [Deprecated]
	Property Glue.F3: Vector3 [Deprecated]
Class ManualSurfaceJointInstance : JointInstance [NotCreatable] [Deprecated]
Class ManualGlue : ManualSurfaceJointInstance [Deprecated]
Class ManualWeld : ManualSurfaceJointInstance [Deprecated]
Class Motor : JointInstance
	Property Motor.CurrentAngle: number [📁 LoadOnly] [NotReplicated]
	Property Motor.DesiredAngle: number
	Property Motor.MaxVelocity: number
	Property Motor.ReplicateCurrentAngle: number {RobloxSecurity} [Hidden] [NotScriptable]
	Function Motor:SetDesiredAngle(value: number) -> ()
Class Motor6D : Motor
	Property Motor6D.ChildName: string [ReadOnly] [NotScriptable]
	Property Motor6D.ParentName: string [ReadOnly] [NotScriptable]
	Property Motor6D.Transform: CFrame [Hidden] [NotReplicated]
	Property Motor6D.ReplicateCurrentAngle6D: Vector3 {RobloxSecurity} [Hidden] [NotScriptable]
	Property Motor6D.ReplicateCurrentOffset6D: Vector3 {RobloxSecurity} [Hidden] [NotScriptable]
Class Rotate : JointInstance [Deprecated]
Class Snap : JointInstance [Deprecated]
Class VelocityMotor : JointInstance
	Property VelocityMotor.CurrentAngle: number
	Property VelocityMotor.DesiredAngle: number
	Property VelocityMotor.Hole: Hole?
	Property VelocityMotor.MaxVelocity: number
Class Weld : JointInstance
Class JointsService : Instance [NotCreatable] [Service] [Deprecated]
	Function JointsService:ClearJoinAfterMoveJoints() -> () [Deprecated]
	Function JointsService:CreateJoinAfterMoveJoints() -> () [Deprecated]
	Function JointsService:SetJoinAfterMoveInstance(joinInstance: Instance) -> () [Deprecated]
	Function JointsService:SetJoinAfterMoveTarget(joinTarget: Instance) -> () [Deprecated]
	Function JointsService:ShowPermissibleJoints() -> () [Deprecated]
Class KeyboardService : Instance [NotCreatable] [Service]
Class Keyframe : Instance
	Property Keyframe.Time: number
	Function Keyframe:AddMarker(marker: Instance) -> ()
	Function Keyframe:AddPose(pose: Instance) -> ()
	Function Keyframe:GetMarkers() -> { Instance }
	Function Keyframe:GetPoses() -> { Instance }
	Function Keyframe:RemoveMarker(marker: Instance) -> ()
	Function Keyframe:RemovePose(pose: Instance) -> ()
Class KeyframeMarker : Instance
	Property KeyframeMarker.Value: string
Class KeyframeSequenceProvider : Instance [NotCreatable] [Service] [NotReplicated]
	Function KeyframeSequenceProvider:GetAnimations(userId: number) -> Instance? [Yields]
	Function KeyframeSequenceProvider:GetKeyframeSequence(assetId: ContentId) -> Instance? {PluginSecurity} [Deprecated]
	Function KeyframeSequenceProvider:GetKeyframeSequenceAsync(assetId: ContentId) -> Instance? [Yields]
	Function KeyframeSequenceProvider:GetKeyframeSequenceById(assetId: number, useCache: boolean) -> Instance? {PluginSecurity} [Deprecated]
	Function KeyframeSequenceProvider:GetMemStats() -> { [string]: any } {RobloxScriptSecurity}
	Function KeyframeSequenceProvider:RegisterActiveKeyframeSequence(keyframeSequence: Instance) -> ContentId
	Function KeyframeSequenceProvider:RegisterKeyframeSequence(keyframeSequence: Instance) -> ContentId
Class LSPFileSyncService : Instance [NotCreatable] [Service] [NotReplicated]
Class LanguageService : Instance [NotCreatable] [Service] [NotReplicated]
Class Light : Instance [NotCreatable]
	Property Light.Brightness: number
	Property Light.Color: Color3
	Property Light.Enabled: boolean
	Property Light.Shadows: boolean
Class PointLight : Light
	Property PointLight.Range: number
Class SpotLight : Light
	Property SpotLight.Angle: number
	Property SpotLight.Face: Enum.NormalId
	Property SpotLight.Range: number
Class SurfaceLight : Light
	Property SurfaceLight.Angle: number
	Property SurfaceLight.Face: Enum.NormalId
	Property SurfaceLight.Range: number
Class Lighting : Instance [NotCreatable] [Service]
	Property Lighting.Ambient: Color3
	Property Lighting.Brightness: number
	Property Lighting.ColorShift_Bottom: Color3
	Property Lighting.ColorShift_Top: Color3
	Property Lighting.EnvironmentDiffuseScale: number
	Property Lighting.EnvironmentSpecularScale: number
	Property Lighting.GlobalShadows: boolean
	Property Lighting.Intent: Enum.Intent [NotScriptable]
	Property Lighting.OutdoorAmbient: Color3
	Property Lighting.Outlines: boolean [Deprecated]
	Property Lighting.Quality: Enum.Quality [NotScriptable]
	Property Lighting.ShadowColor: Color3 [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property Lighting.ShadowSoftness: number
	Property Lighting.Technology: Enum.Technology {RobloxScriptSecurity}
	Property Lighting.ClockTime: number [📁 LoadOnly] [NotReplicated]
	Property Lighting.GeographicLatitude: number
	Property Lighting.TimeOfDay: string
	Property Lighting.ExposureCompensation: number
	Property Lighting.FogColor: Color3
	Property Lighting.FogEnd: number
	Property Lighting.FogStart: number
	Function Lighting:GetMinutesAfterMidnight() -> number {🧬Safe}
	Function Lighting:GetMoonDirection() -> Vector3 {🧬Safe}
	Function Lighting:GetMoonPhase() -> number
	Function Lighting:GetSunDirection() -> Vector3 {🧬Safe}
	Function Lighting:SetMinutesAfterMidnight(minutes: number) -> ()
	Event Lighting.LightingChanged(skyChanged: boolean)
Class LinkingService : Instance [NotCreatable] [Service] [NotReplicated]
	Function LinkingService:DetectUrl(url: string) -> () {RobloxScriptSecurity}
	Function LinkingService:GetAndClearLastPendingUrl() -> { [string]: any } {RobloxScriptSecurity}
	Function LinkingService:GetLastLuaUrl() -> string? {RobloxScriptSecurity}
	Function LinkingService:IsUrlRegistered(url: string) -> boolean {RobloxScriptSecurity}
	Function LinkingService:OpenUrl(url: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function LinkingService:RegisterLuaUrl(url: string) -> () {RobloxScriptSecurity}
	Function LinkingService:StartLuaUrlDelivery() -> { [string]: any }? {RobloxScriptSecurity}
	Function LinkingService:StopLuaUrlDelivery() -> () {RobloxScriptSecurity}
	Function LinkingService:SupportsSwitchToSettingsApp() -> boolean {RobloxScriptSecurity} [Yields]
	Function LinkingService:SwitchToSettingsApp(route: string?) -> () {RobloxScriptSecurity} [Yields]
	Event LinkingService.OnLuaUrl(url: string, matchedUrl: string, attributionUrl: string?) {RobloxScriptSecurity}
Class LiveScriptingService : Instance [NotCreatable] [Service]
	Property LiveScriptingService.ServerLiveEditingMode: Enum.ServerLiveEditingMode [Hidden] [NotScriptable]
	Event LiveScriptingService.BeginEdit(id: number, guid: string) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.BroadcastMessage(message: string, type: Enum.LiveEditingBroadcastMessageType) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.EndEdit(id: number) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.FailedToOpen(id: number, legalToOpenLocal: boolean) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.KickFromEdit(id: number, msg: string) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.LiveEditingClientConfiguration(serializedConfig: string) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.OpenedWithSource(id: number, source: string) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.SendAtomicOperation(requestId: number, guid: string, op: string, hash: string) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.SendAtomicUpdateResponse(guid: number, response: Enum.LiveEditingAtomicUpdateResponse) {RobloxSecurity} [Hidden]
	Event LiveScriptingService.SendOperation(id: number, op: string) {RobloxSecurity} [Hidden]
Class LocalStorageService : Instance [NotCreatable] [Service] [NotReplicated]
	Function LocalStorageService:Flush() -> () {RobloxScriptSecurity}
	Function LocalStorageService:GetItem(key: string) -> string {RobloxScriptSecurity}
	Function LocalStorageService:SetItem(key: string, value: string) -> () {RobloxScriptSecurity}
	Function LocalStorageService:WhenLoaded(callback: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Event LocalStorageService.ItemWasSet(key: string, value: string) {RobloxScriptSecurity}
	Event LocalStorageService.StoreWasCleared() {RobloxScriptSecurity}
Class AppStorageService : LocalStorageService [NotCreatable] [Service] [NotReplicated]
Class UserStorageService : LocalStorageService [NotCreatable] [Service] [NotReplicated]
Class LocalizationService : Instance [NotCreatable] [Service] [NotReplicated]
	Property LocalizationService.ForcePlayModeGameLocaleId: string {LocalUserSecurity} [Hidden] [NotReplicated]
	Property LocalizationService.ForcePlayModeRobloxLocaleId: string {LocalUserSecurity} [Hidden] [NotReplicated]
	Property LocalizationService.RobloxForcePlayModeGameLocaleId: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property LocalizationService.RobloxForcePlayModeRobloxLocaleId: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property LocalizationService.GameSourceLanguageId: string [Hidden] [NotScriptable]
	Property LocalizationService.IsTextScraperRunning: boolean {RobloxScriptSecurity} [Hidden]
	Property LocalizationService.LocaleManifest: string [Hidden] [NotScriptable]
	Property LocalizationService.RobloxLocaleId: string [ReadOnly]
	Property LocalizationService.ShouldUseCloudTable: boolean {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property LocalizationService.SystemLocaleId: string [ReadOnly]
	Function LocalizationService:GetCorescriptLocalizations() -> { Instance }
	Function LocalizationService:GetCountryRegionForPlayerAsync(player: Instance) -> string [Yields]
	Function LocalizationService:GetTableEntries(instance: Instance? = nil) -> { any }
	Function LocalizationService:GetTranslatorForLocaleAsync(locale: string) -> Instance? [Yields]
	Function LocalizationService:GetTranslatorForPlayer(player: Instance) -> Instance?
	Function LocalizationService:GetTranslatorForPlayerAsync(player: Instance) -> Instance? [Yields]
	Function LocalizationService:PromptDownloadGameTableToCSV(table: Instance) -> () {RobloxScriptSecurity} [Yields]
	Function LocalizationService:PromptExportToCSVs() -> () {RobloxScriptSecurity} [Yields]
	Function LocalizationService:PromptImportFromCSVs() -> () {RobloxScriptSecurity} [Yields]
	Function LocalizationService:PromptUploadCSVToGameTable() -> Instance? {RobloxScriptSecurity} [Yields]
	Function LocalizationService:SetRobloxLocaleId(locale: string) -> () {RobloxScriptSecurity}
	Function LocalizationService:StartTextScraper() -> () {RobloxScriptSecurity}
	Function LocalizationService:StopTextScraper() -> () {RobloxScriptSecurity}
	Event LocalizationService.AutoTranslateWillRun() {RobloxScriptSecurity}
	Event LocalizationService.TextScraperClientMessageWithPlayerSignal(version: number, player: Instance, message: ...any) {RobloxSecurity} [Hidden]
Class LocalizationTable : Instance
	Property LocalizationTable.Contents: string [Hidden] [NotScriptable]
	Property LocalizationTable.Root: Instance? [Hidden] [NotReplicated] [Deprecated]
	Property LocalizationTable.DevelopmentLanguage: string [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property LocalizationTable.IsExemptFromUGCAnalytics: boolean [Hidden] [NotScriptable]
	Property LocalizationTable.SourceLocaleId: string
	Function LocalizationTable:GetContents() -> string [Deprecated]
	Function LocalizationTable:GetEntries() -> { any }
	Function LocalizationTable:GetString(targetLocaleId: string, key: string) -> string [Deprecated]
	Function LocalizationTable:GetTranslator(localeId: string) -> Instance?
	Function LocalizationTable:RemoveEntry(key: string, source: string, context: string) -> ()
	Function LocalizationTable:RemoveEntryValue(key: string, source: string, context: string, localeId: string) -> ()
	Function LocalizationTable:RemoveKey(key: string) -> () [Deprecated]
	Function LocalizationTable:RemoveTargetLocale(localeId: string) -> ()
	Function LocalizationTable:SetContents(contents: string) -> () [Deprecated]
	Function LocalizationTable:SetEntries(entries: any) -> ()
	Function LocalizationTable:SetEntry(key: string, targetLocaleId: string, text: string) -> () [Deprecated]
	Function LocalizationTable:SetEntryContext(key: string, source: string, context: string, newContext: string) -> ()
	Function LocalizationTable:SetEntryExample(key: string, source: string, context: string, example: string) -> ()
	Function LocalizationTable:SetEntryKey(key: string, source: string, context: string, newKey: string) -> ()
	Function LocalizationTable:SetEntrySource(key: string, source: string, context: string, newSource: string) -> ()
	Function LocalizationTable:SetEntryValue(key: string, source: string, context: string, localeId: string, text: string) -> ()
	Function LocalizationTable:SetIsExemptFromUGCAnalytics(value: boolean) -> () {RobloxScriptSecurity}
Class CloudLocalizationTable : LocalizationTable [NotCreatable] [NotReplicated]
Class LodDataEntity : Instance [NotCreatable]
	Property LodDataEntity.EntityData: SharedString [Hidden] [NotScriptable]
	Property LodDataEntity.EntityLodEnabled: boolean [Hidden] [NotReplicated]
	Property LodDataEntity.EntityPosition: CFrame [Hidden] [NotScriptable]
	Property LodDataEntity.EntityScale: Vector3 [Hidden] [NotScriptable]
	Property LodDataEntity.EntitySource: Instance? [Hidden] [NotScriptable]
Class LodDataService : Instance [NotCreatable] [Service] [NotReplicated]
Class LogReporterService : Instance [NotCreatable] [Service] [NotReplicated]
	Function LogReporterService:ReportLog(fingerprint: string, uuid: string, desc: string, attributes: { [string]: any }, annotations: { [string]: any }) -> boolean {RobloxScriptSecurity}
	Function LogReporterService:ReportMultipleLogs(fingerprint: string, uuid: string, desc: string, attributes: { [string]: any }, annotations: { [string]: any }, numLogs: number) -> boolean {RobloxScriptSecurity}
Class LogService : Instance [NotCreatable] [Service]
	Function LogService:ClearOutput() -> ()
	Function LogService:ExecuteScript(source: string) -> () {RobloxScriptSecurity}
	Function LogService:GetHttpResultHistory() -> { any } {RobloxScriptSecurity}
	Function LogService:GetLogHistory() -> { any }
	Function LogService:RequestHttpResultApproved() -> () {RobloxScriptSecurity}
	Function LogService:RequestServerHttpResult() -> () {RobloxScriptSecurity}
	Function LogService:RequestServerOutput() -> () {RobloxScriptSecurity}
	Event LogService.HttpResultOut(httpResult: { [string]: any }) {RobloxScriptSecurity}
	Event LogService.MessageOut(message: string, messageType: Enum.MessageType)
	Event LogService.OnHttpResultApproved(isApproved: boolean) {RobloxScriptSecurity}
	Event LogService.RequestHttpResultApprovedSignal(requestingPlayer: Instance) {RobloxSecurity} [Hidden]
	Event LogService.RequestScriptExecutionSignal(requestingPlayer: Instance, source: string) {RobloxSecurity} [Hidden]
	Event LogService.RequestServerHttpResultSignal(requestingPlayer: Instance) {RobloxSecurity} [Hidden]
	Event LogService.RequestServerOutputSignal(requestingPlayer: Instance) {RobloxSecurity} [Hidden]
	Event LogService.RequestSettingsChange(requestingPlayer: Instance, expressivePrinting: boolean) {RobloxSecurity} [Hidden]
	Event LogService.ServerHttpResultOut(httpResult: { [string]: any }) {RobloxScriptSecurity}
	Event LogService.ServerMessageOut(message: string, messageType: Enum.MessageType, timestamp: number) {RobloxScriptSecurity}
	Event LogService.ServerVariantMessageOut(data: { [string]: any }) {RobloxSecurity} [Hidden]
Class LoginService : Instance [NotCreatable] [Service]
	Function LoginService:Logout() -> () {RobloxSecurity}
	Function LoginService:PromptLogin() -> () {RobloxSecurity}
	Event LoginService.LoginFailed(loginError: string) {RobloxSecurity}
	Event LoginService.LoginSucceeded(username: string) {RobloxSecurity}
Class LuaSettings : Instance [NotCreatable] [Settings]
Class LuaSourceContainer : Instance [NotCreatable] [NotBrowsable]
	Property LuaSourceContainer.CachedRemoteSource: string [Hidden] [NotScriptable]
	Property LuaSourceContainer.CachedRemoteSourceLoadState: number [Hidden] [NotScriptable]
	Property LuaSourceContainer.HasAssociatedDrafts: boolean {RobloxSecurity} [Hidden] [NotScriptable]
	Property LuaSourceContainer.IsDifferentFromFileSystem: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property LuaSourceContainer.OriginalScriptGuid: string {RobloxSecurity} [Hidden] [NotScriptable]
	Property LuaSourceContainer.SandboxedSource: string {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property LuaSourceContainer.ScriptGuid: string [Hidden] [NotScriptable]
	Property LuaSourceContainer.isPlayerScript: boolean {RobloxSecurity} [Hidden] [NotScriptable]
Class BaseScript : LuaSourceContainer [NotCreatable]
	Property BaseScript.Disabled: boolean
	Property BaseScript.Enabled: boolean [NotReplicated]
	Property BaseScript.RunContext: Enum.RunContext {✏️PluginSecurity}
	Property BaseScript.LinkedSource: ContentId [Deprecated]
Class CoreScript : BaseScript [NotCreatable] [NotReplicated]
Class Script : BaseScript
	Property Script.Source: string
	Function Script:GetHash() -> string {LocalUserSecurity}
Class LocalScript : Script
Class ModuleScript : LuaSourceContainer
	Property ModuleScript.Confidential: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property ModuleScript.LinkedSource: ContentId [Deprecated]
	Property ModuleScript.Source: string
Class LuaWebService : Instance [NotCreatable] [Service]
Class LuauScriptAnalyzerService : Instance [NotCreatable] [Service] [NotReplicated]
Class MarkerCurve : Instance
	Property MarkerCurve.Length: number [ReadOnly]
	Property MarkerCurve.ValuesAndTimes: BinaryString [Hidden] [NotScriptable]
	Function MarkerCurve:GetMarkerAtIndex(index: number) -> { [string]: any }
	Function MarkerCurve:GetMarkers() -> { any }
	Function MarkerCurve:InsertMarkerAtTime(time: number, marker: string) -> { any }
	Function MarkerCurve:RemoveMarkerAtIndex(startingIndex: number, count: number? = 1) -> number
Class MarketplaceService : Instance [NotCreatable] [Service]
	Function MarketplaceService:GetDeveloperProductsAsync() -> Instance? [Yields]
	Function MarketplaceService:GetDeveloperProductsForExperienceDetailsPageAsync() -> Instance? {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:GetProductInfo(assetId: number, infoType: Enum.InfoType? = "Asset") -> { [string]: any } [Yields]
	Function MarketplaceService:GetRobuxBalance() -> number {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:GetSubscriptionProductInfoAsync(subscriptionId: string) -> { [string]: any } [Yields]
	Function MarketplaceService:GetSubscriptionPurchaseInfoAsync(subscriptionId: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:GetUserSubscriptionDetailsAsync(user: Player, subscriptionId: string) -> { [string]: any } [Yields]
	Function MarketplaceService:GetUserSubscriptionDetailsInternalAsync(subscriptionId: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:GetUserSubscriptionPaymentHistoryAsync(user: Player, subscriptionId: string) -> { any } [Yields]
	Function MarketplaceService:GetUserSubscriptionStatusAsync(user: Player, subscriptionId: string) -> { [string]: any } [Yields]
	Function MarketplaceService:PerformBulkPurchase(orderRequest: { [string]: any }, options: { [string]: any }) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PerformCancelSubscription(subscriptionId: string) -> () {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PerformPurchase(infoType: Enum.InfoType, productId: number, expectedPrice: number, requestId: string, isRobloxPurchase: boolean, collectibleItemId: string? = "", collectibleProductId: string? = "", idempotencyKey: string? = "", purchaseAuthToken: string? = "") -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PerformPurchaseV2(infoType: Enum.InfoType, productId: number, expectedPrice: number, requestId: string, isRobloxPurchase: boolean, collectiblesProductDetails: { [string]: any }) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PerformSubscriptionPurchase(subscriptionId: string) -> string {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PerformSubscriptionPurchaseV2(subscriptionId: string, paymentProvider: string) -> () {RobloxScriptSecurity} [Yields]
	Function MarketplaceService:PlayerCanMakePurchases(player: Instance) -> boolean {RobloxScriptSecurity}
	Function MarketplaceService:PlayerOwnsAsset(player: Instance, assetId: number) -> boolean [Yields]
	Function MarketplaceService:PlayerOwnsBundle(player: Player, bundleId: number) -> boolean [Yields]
	Function MarketplaceService:PrepareCollectiblesPurchase(player: Instance, assetId: number, collectibleItemId: string, collectibleItemInstanceId: string, collectibleProductId: string, expectedPrice: number) -> () {RobloxScriptSecurity}
	Function MarketplaceService:PromptBulkPurchase(player: Player, lineItems: { any }, options: { [string]: any }) -> ()
	Function MarketplaceService:PromptBundlePurchase(player: Instance, bundleId: number) -> ()
	Function MarketplaceService:PromptCancelSubscription(user: Player, subscriptionId: string) -> ()
	Function MarketplaceService:PromptCollectiblesPurchase(player: Instance, assetId: number, collectibleItemId: string, collectibleItemInstanceId: string, collectibleProductId: string, expectedPrice: number) -> () {RobloxScriptSecurity}
	Function MarketplaceService:PromptGamePassPurchase(player: Instance, gamePassId: number) -> ()
	Function MarketplaceService:PromptNativePurchase(player: Instance, productId: string) -> () {RobloxScriptSecurity}
	Function MarketplaceService:PromptNativePurchaseWithLocalPlayer(productId: string) -> () {RobloxScriptSecurity}
	Function MarketplaceService:PromptPremiumPurchase(player: Instance) -> ()
	Function MarketplaceService:PromptProductPurchase(player: Instance, productId: number, equipIfPurchased: boolean? = true, currencyType: Enum.CurrencyType? = "Default") -> ()
	Function MarketplaceService:PromptPurchase(player: Instance, assetId: number, equipIfPurchased: boolean? = true, currencyType: Enum.CurrencyType? = "Default") -> ()
	Function MarketplaceService:PromptRobloxPurchase(assetId: number, equipIfPurchased: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:PromptSubscriptionPurchase(user: Player, subscriptionId: string) -> ()
	Function MarketplaceService:PromptThirdPartyPurchase(player: Instance, productId: string) -> () {LocalUserSecurity}
	Function MarketplaceService:ReportAssetSale(assetId: string, robuxAmount: number) -> () {RobloxScriptSecurity}
	Function MarketplaceService:ReportRobuxUpsellStarted() -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalAssetTypePurchased(player: Instance, assetType: Enum.AssetType) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalClientPurchaseSuccess(ticket: string, playerId: number, productId: number) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalMockPurchasePremium() -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptBulkPurchaseFinished(status: Enum.MarketplaceBulkPurchasePromptStatus, results: { [string]: any }) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptBundlePurchaseFinished(player: Instance, bundleId: number, success: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptGamePassPurchaseFinished(player: Instance, gamePassId: number, success: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptPremiumPurchaseFinished(didTryPurchasing: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptProductPurchaseFinished(userId: number, productId: number, success: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptPurchaseFinished(player: Instance, assetId: number, success: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalPromptSubscriptionPurchaseFinished(subscriptionId: string, didTryPurchasing: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalServerLuaDialogClosed(value: boolean) -> () {RobloxScriptSecurity}
	Function MarketplaceService:SignalUserSubscriptionStatusChanged(subscriptionId: string) -> () {RobloxScriptSecurity}
	Function MarketplaceService:UserOwnsGamePassAsync(userId: number, gamePassId: number) -> boolean [Yields]
	Event MarketplaceService.AssetTypePurchased(player: Instance, assetType: Enum.AssetType) {RobloxScriptSecurity} [Hidden]
	Event MarketplaceService.ClientLuaDialogRequested(arguments: ...any) {RobloxScriptSecurity}
	Event MarketplaceService.ClientPurchaseSuccess(ticket: string, playerId: number, productId: number) {RobloxScriptSecurity}
	Event MarketplaceService.ConfirmPlayerMembership() {RobloxScriptSecurity} [Hidden]
	Event MarketplaceService.ConfirmUserSubscriptionPurchase(subscriptionId: string) {RobloxSecurity} [Hidden]
	Event MarketplaceService.LuaDialogCallbackSignal(value: boolean, player: Instance) {RobloxScriptSecurity} [Hidden]
	Event MarketplaceService.MockConfirmUserSubscriptionPurchase(userId: number, subscriptionId: string) {RobloxSecurity} [Hidden]
	Event MarketplaceService.MockPurchasePremium() {RobloxScriptSecurity} [Hidden]
	Event MarketplaceService.NativePurchaseFinished(player: Instance, productId: string, wasPurchased: boolean) {RobloxScriptSecurity}
	Event MarketplaceService.NativePurchaseFinishedWithLocalPlayer(productId: string, wasPurchased: boolean) {RobloxScriptSecurity}
	Event MarketplaceService.PrepareCollectiblesPurchaseRequested(player: Instance, assetId: number, collectibleItemId: string, collectibleItemInstanceId: string, collectibleProductId: string, expectedPrice: number) {RobloxScriptSecurity}
	Event MarketplaceService.PromptBulkPurchaseFinished(player: Instance, status: Enum.MarketplaceBulkPurchasePromptStatus, results: { [string]: any })
	Event MarketplaceService.PromptBulkPurchaseRequested(player: Instance, displayData: { any }, orderRequest: { [string]: any }, purchaserRobuxBalance: number, orderTotalRobux: number, options: { [string]: any }) {RobloxScriptSecurity}
	Event MarketplaceService.PromptBundlePurchaseFinished(player: Instance, bundleId: number, wasPurchased: boolean)
	Event MarketplaceService.PromptBundlePurchaseRequested(player: Instance, bundleId: number) {RobloxScriptSecurity}
	Event MarketplaceService.PromptCancelSubscriptionRequested(subscriptionId: string) {RobloxScriptSecurity}
	Event MarketplaceService.PromptCollectibleBundlePurchaseRequested(player: Instance, bundleId: number, collectibleItemId: string, collectibleItemInstanceId: string, collectibleProductId: string, expectedPrice: number, idempotencyKey: string, purchaseAuthToken: string) {RobloxScriptSecurity}
	Event MarketplaceService.PromptCollectiblesPurchaseRequested(player: Instance, assetId: number, collectibleItemId: string, collectibleItemInstanceId: string, collectibleProductId: string, expectedPrice: number, idempotencyKey: string, purchaseAuthToken: string) {RobloxScriptSecurity}
	Event MarketplaceService.PromptGamePassPurchaseFinished(player: Instance, gamePassId: number, wasPurchased: boolean)
	Event MarketplaceService.PromptGamePassPurchaseRequested(player: Instance, gamePassId: number) {RobloxScriptSecurity}
	Event MarketplaceService.PromptNativePurchaseRequested(player: Instance, productId: string) {RobloxSecurity} [Hidden]
	Event MarketplaceService.PromptNativePurchaseRequestedWithLocalPlayer(userId: number, productId: string) {RobloxSecurity} [Hidden]
	Event MarketplaceService.PromptPremiumPurchaseFinished()
	Event MarketplaceService.PromptPremiumPurchaseRequested(player: Instance) {RobloxScriptSecurity}
	Event MarketplaceService.PromptProductPurchaseFinished(userId: number, productId: number, isPurchased: boolean)
	Event MarketplaceService.PromptProductPurchaseRequested(player: Instance, productId: number, equipIfPurchased: boolean, currencyType: Enum.CurrencyType) {RobloxScriptSecurity}
	Event MarketplaceService.PromptPurchaseFinished(player: Instance, assetId: number, isPurchased: boolean)
	Event MarketplaceService.PromptPurchaseRequested(player: Instance, assetId: number, equipIfPurchased: boolean, currencyType: Enum.CurrencyType) {RobloxScriptSecurity}
	Event MarketplaceService.PromptPurchaseRequestedV2(player: Instance, assetId: number, equipIfPurchased: boolean, currencyType: Enum.CurrencyType, idempotencyKey: string, purchaseAuthToken: string) {RobloxScriptSecurity}
	Event MarketplaceService.PromptRobloxPurchaseRequested(assetId: number, equipIfPurchased: boolean) {RobloxScriptSecurity}
	Event MarketplaceService.PromptSubscriptionPurchaseFinished(user: Player, subscriptionId: string, didTryPurchasing: boolean)
	Event MarketplaceService.PromptSubscriptionPurchaseRequested(subscriptionId: string) {RobloxScriptSecurity}
	Event MarketplaceService.PromptThirdPartyPurchaseRequested(player: Instance, productId: string) {RobloxSecurity} [Hidden]
	Event MarketplaceService.ServerPurchaseVerification(serverResponseTable: { [string]: any }) {RobloxScriptSecurity}
	Event MarketplaceService.ThirdPartyPurchaseFinished(player: Instance, productId: string, receipt: string, wasPurchased: boolean) {LocalUserSecurity}
	Event MarketplaceService.UserSubscriptionStatusChanged(subscriptionId: string) {RobloxScriptSecurity}
	Callback MarketplaceService.ProcessReceipt(receiptInfo: { [string]: any }) -> Enum.ProductPurchaseDecision
Class MaterialGenerationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function MaterialGenerationService:DEPRECATED_GenerateMaterialVariantsAync(prompt: string, samples: number) -> { Instance } {RobloxScriptSecurity} [Yields]
	Function MaterialGenerationService:DEPRECATED_UploadMaterialVariantsAsync(materialVaraints: { Instance }) -> () {RobloxScriptSecurity} [Yields]
	Function MaterialGenerationService:GenerateMaterialVariantsAsync(prompt: string, samples: number) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MaterialGenerationService:StartSession() -> MaterialGenerationSession {RobloxScriptSecurity}
Class MaterialGenerationSession : Instance [NotCreatable] [NotReplicated]
	Function MaterialGenerationSession:GenerateImagesAsync(prompt: string, options: { [string]: any }) -> ...any {RobloxScriptSecurity} [Yields]
	Function MaterialGenerationSession:GenerateMaterialMapsAsync(imageId: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function MaterialGenerationSession:UploadMaterialAsync(imageId: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
Class MaterialService : Instance [NotCreatable] [Service]
	Property MaterialService.AsphaltName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.BasaltName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.BrickName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CardboardName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CarpetName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CeramicTilesName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.ClayRoofTilesName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CobblestoneName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.ConcreteName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CorrodedMetalName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.CrackedLavaName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.DiamondPlateName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.FabricName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.FoilName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.GlacierName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.GraniteName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.GrassName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.GroundName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.IceName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.LeafyGrassName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.LeatherName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.LimestoneName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.MarbleName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.MetalName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.MudName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.PavementName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.PebbleName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.PlasterName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.PlasticName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.RockName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.RoofShinglesName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.RubberName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SaltName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SandName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SandstoneName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SlateName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SmoothPlasticName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.SnowName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.WoodName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.WoodPlanksName: string {RobloxSecurity} [NotScriptable]
	Property MaterialService.Use2022Materials: boolean {RobloxScriptSecurity} [NotReplicated]
	Property MaterialService.Use2022MaterialsXml: boolean [Hidden] [NotScriptable]
	Function MaterialService:GetBaseMaterialOverride(material: Enum.Material) -> string
	Function MaterialService:GetIsMaterialActionAsToolEnabled() -> boolean {RobloxScriptSecurity}
	Function MaterialService:GetMaterialOverrideChanged(material: Enum.Material) -> RBXScriptSignal {RobloxScriptSecurity}
	Function MaterialService:GetMaterialVariant(material: Enum.Material, name: string) -> MaterialVariant
	Function MaterialService:GetOverrideStatus(material: Enum.Material) -> Enum.PropertyStatus {RobloxScriptSecurity}
	Function MaterialService:SetBaseMaterialOverride(material: Enum.Material, name: string) -> ()
	Function MaterialService:SetCurrentMaterial(baseMaterial: Enum.Material, materialVariant: string) -> () {RobloxScriptSecurity}
	Function MaterialService:ToggleMaterialFillToolEnabled() -> () {RobloxScriptSecurity}
	Event MaterialService.MaterialFillToolEnabledChanged(shouldEnable: boolean) {RobloxScriptSecurity}
	Event MaterialService.OverrideStatusChanged(material: Enum.Material) {RobloxScriptSecurity}
Class MaterialVariant : Instance
	Property MaterialVariant.BaseMaterial: Enum.Material {✏️PluginSecurity}
	Property MaterialVariant.ColorMap: ContentId {PluginSecurity}
	Property MaterialVariant.MaterialPattern: Enum.MaterialPattern
	Property MaterialVariant.MetalnessMap: ContentId {PluginSecurity}
	Property MaterialVariant.NormalMap: ContentId {PluginSecurity}
	Property MaterialVariant.RoughnessMap: ContentId {PluginSecurity}
	Property MaterialVariant.StudsPerTile: number
	Property MaterialVariant.AvgMetalness: number [Hidden] [NotReplicated] [NotScriptable]
	Property MaterialVariant.AvgRoughness: number [Hidden] [NotReplicated] [NotScriptable]
	Property MaterialVariant.TexturePack: ContentId [Hidden] [NotScriptable]
	Property MaterialVariant.CustomPhysicalProperties: PhysicalProperties
Class MemStorageConnection : Instance [NotCreatable] [NotReplicated]
	Function MemStorageConnection:Disconnect() -> () {PluginSecurity}
Class MemStorageService : Instance [NotCreatable] [Service] [NotReplicated]
	Function MemStorageService:Bind(key: string, callback: (...any) -> ...any) -> MemStorageConnection {RobloxScriptSecurity}
	Function MemStorageService:BindAndFire(key: string, callback: (...any) -> ...any) -> MemStorageConnection {RobloxScriptSecurity}
	Function MemStorageService:Call(key: string, input: any) -> any {RobloxScriptSecurity}
	Function MemStorageService:Fire(key: string, value: string? = "") -> () {RobloxScriptSecurity}
	Function MemStorageService:GetItem(key: string, defaultValue: string? = "") -> string {RobloxScriptSecurity}
	Function MemStorageService:HasItem(key: string) -> boolean {RobloxScriptSecurity}
	Function MemStorageService:RemoveItem(key: string) -> boolean {RobloxScriptSecurity}
	Function MemStorageService:SetItem(key: string, value: string? = "") -> () {RobloxScriptSecurity}
Class MemoryStoreHashMap : Instance [NotCreatable] [NotReplicated]
	Function MemoryStoreHashMap:GetAsync(key: string) -> any [Yields]
	Function MemoryStoreHashMap:ListItemsAsync(count: number) -> MemoryStoreHashMapPages [Yields]
	Function MemoryStoreHashMap:RemoveAsync(key: string) -> () [Yields]
	Function MemoryStoreHashMap:SetAsync(key: string, value: any, expiration: number) -> boolean [Yields]
	Function MemoryStoreHashMap:UpdateAsync(key: string, transformFunction: (...any) -> ...any, expiration: number) -> any [Yields]
Class MemoryStoreQueue : Instance [NotCreatable] [NotReplicated]
	Function MemoryStoreQueue:AddAsync(value: any, expiration: number, priority: number? = 0) -> () [Yields]
	Function MemoryStoreQueue:ReadAsync(count: number, allOrNothing: boolean? = false, waitTimeout: number? = -1) -> ...any [Yields]
	Function MemoryStoreQueue:RemoveAsync(id: string) -> () [Yields]
Class MemoryStoreService : Instance [Service]
	Function MemoryStoreService:GetHashMap(name: string) -> MemoryStoreHashMap
	Function MemoryStoreService:GetQueue(name: string, invisibilityTimeout: number? = 30) -> MemoryStoreQueue
	Function MemoryStoreService:GetSortedMap(name: string) -> MemoryStoreSortedMap
Class MemoryStoreSortedMap : Instance [NotCreatable] [NotReplicated]
	Function MemoryStoreSortedMap:GetAsync(key: string) -> ...any [Yields]
	Function MemoryStoreSortedMap:GetRangeAsync(direction: Enum.SortDirection, count: number, exclusiveLowerBound: any, exclusiveUpperBound: any) -> { any } [Yields]
	Function MemoryStoreSortedMap:RemoveAsync(key: string) -> () [Yields]
	Function MemoryStoreSortedMap:SetAsync(key: string, value: any, expiration: number, sortKey: any) -> boolean [Yields]
	Function MemoryStoreSortedMap:UpdateAsync(key: string, transformFunction: (...any) -> ...any, expiration: number) -> ...any [Yields]
Class Message : Instance [Deprecated]
	Property Message.Text: string [Deprecated]
Class Hint : Message [Deprecated]
Class MessageBusConnection : Instance [NotCreatable] [NotReplicated]
	Function MessageBusConnection:Disconnect() -> () {RobloxScriptSecurity}
Class MessageBusService : Instance [NotCreatable] [Service] [NotReplicated]
	Function MessageBusService:Call(key: string, input: any) -> any {RobloxScriptSecurity}
	Function MessageBusService:GetLast(mid: string) -> any {RobloxScriptSecurity}
	Function MessageBusService:GetMessageId(domainName: string, messageName: string) -> string {RobloxScriptSecurity}
	Function MessageBusService:GetProtocolMethodRequestMessageId(protocolName: string, methodName: string) -> string {RobloxScriptSecurity}
	Function MessageBusService:GetProtocolMethodResponseMessageId(protocolName: string, methodName: string) -> string {RobloxScriptSecurity}
	Function MessageBusService:MakeRequest(protocolName: string, methodName: string, message: any, callback: (...any) -> ...any, customTelemetryData: any) -> () {RobloxScriptSecurity}
	Function MessageBusService:Publish(mid: string, params: any) -> () {RobloxScriptSecurity}
	Function MessageBusService:PublishProtocolMethodRequest(protocolName: string, methodName: string, message: any, customTelemetryData: any) -> () {RobloxScriptSecurity}
	Function MessageBusService:PublishProtocolMethodResponse(protocolName: string, methodName: string, message: any, responseCode: number, customTelemetryData: any) -> () {RobloxScriptSecurity}
	Function MessageBusService:SetRequestHandler(protocolName: string, methodName: string, callback: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function MessageBusService:Subscribe(mid: string, callback: (...any) -> ...any, once: boolean, sticky: boolean) -> Instance? {RobloxScriptSecurity}
	Function MessageBusService:SubscribeToProtocolMethodRequest(protocolName: string, methodName: string, callback: (...any) -> ...any, once: boolean, sticky: boolean) -> Instance? {RobloxScriptSecurity}
	Function MessageBusService:SubscribeToProtocolMethodResponse(protocolName: string, methodName: string, callback: (...any) -> ...any, once: boolean, sticky: boolean) -> Instance? {RobloxScriptSecurity}
Class MessagingService : Instance [NotCreatable] [Service] [NotReplicated]
	Function MessagingService:PublishAsync(topic: string, message: any) -> () [Yields]
	Function MessagingService:SubscribeAsync(topic: string, callback: (...any) -> ...any) -> RBXScriptConnection [Yields]
Class MetaBreakpoint : Instance [NotCreatable] [NotReplicated]
	Property MetaBreakpoint.Condition: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.Id: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property MetaBreakpoint.Line: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.LogMessage: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.Script: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.ContinueExecution: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.Enabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.IsLogpoint: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property MetaBreakpoint.RemoveOnHit: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property MetaBreakpoint.Valid: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function MetaBreakpoint:GetContextBreakpoints() -> { [string]: any } {RobloxScriptSecurity}
	Function MetaBreakpoint:Remove(status: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function MetaBreakpoint:SetChildBreakpointEnabledByScriptAndContext(script: string, contextGST: number, enabled: boolean) -> () {RobloxScriptSecurity}
	Function MetaBreakpoint:SetContextEnabled(context: number, enabled: boolean) -> () {RobloxScriptSecurity}
	Function MetaBreakpoint:SetContinueExecution(enabled: boolean) -> () {RobloxScriptSecurity}
	Function MetaBreakpoint:SetEnabled(enabled: boolean) -> () {RobloxScriptSecurity}
	Function MetaBreakpoint:SetLine(line: number, status: (...any) -> ...any) -> number {RobloxScriptSecurity}
	Function MetaBreakpoint:SetRemoveOnHit(enabled: boolean) -> () {RobloxScriptSecurity}
Class MetaBreakpointContext : Instance [NotCreatable] [NotReplicated]
	Property MetaBreakpointContext.ContextDataInternal: string [Hidden] [NotScriptable]
Class MetaBreakpointManager : Instance [NotCreatable] [Service] [NotReplicated]
	Function MetaBreakpointManager:AddBreakpoint(script: Instance, line: number, condition: Instance) -> Instance? {RobloxScriptSecurity}
	Function MetaBreakpointManager:GetBreakpointById(metaBreakpointId: number) -> MetaBreakpoint {RobloxScriptSecurity}
	Function MetaBreakpointManager:RemoveBreakpointById(metaBreakpointId: number) -> () {RobloxScriptSecurity}
	Event MetaBreakpointManager.MetaBreakpointAdded(breakpoint: MetaBreakpoint) {RobloxScriptSecurity}
	Event MetaBreakpointManager.MetaBreakpointChanged(breakpoint: MetaBreakpoint) {RobloxScriptSecurity}
	Event MetaBreakpointManager.MetaBreakpointRemoved(breakpoint: MetaBreakpoint) {RobloxScriptSecurity}
	Event MetaBreakpointManager.MetaBreakpointSetChanged(breakpoint: MetaBreakpoint, detail: { [string]: any }) {RobloxScriptSecurity}
Class Mouse : Instance [NotCreatable]
	Property Mouse.Hit: CFrame [ReadOnly]
	Property Mouse.Icon: ContentId
	Property Mouse.Origin: CFrame [ReadOnly]
	Property Mouse.Target: BasePart? [ReadOnly]
	Property Mouse.TargetFilter: Instance?
	Property Mouse.TargetSurface: Enum.NormalId [ReadOnly]
	Property Mouse.UnitRay: Ray [ReadOnly]
	Property Mouse.ViewSizeX: number [ReadOnly]
	Property Mouse.ViewSizeY: number [ReadOnly]
	Property Mouse.X: number [ReadOnly]
	Property Mouse.Y: number [ReadOnly]
	Event Mouse.Button1Down()
	Event Mouse.Button1Up()
	Event Mouse.Button2Down()
	Event Mouse.Button2Up()
	Event Mouse.Idle()
	Event Mouse.KeyDown(key: string) [Deprecated]
	Event Mouse.KeyUp(key: string) [Deprecated]
	Event Mouse.Move()
	Event Mouse.WheelBackward()
	Event Mouse.WheelForward()
Class PlayerMouse : Mouse [NotCreatable]
Class PluginMouse : Mouse [NotCreatable]
	Event PluginMouse.DragEnter(instances: { Instance }) {PluginSecurity}
Class MouseService : Instance [NotCreatable] [Service] [NotReplicated]
	Event MouseService.MouseEnterStudioViewport() {RobloxScriptSecurity}
	Event MouseService.MouseLeaveStudioViewport() {RobloxScriptSecurity}
Class MultipleDocumentInterfaceInstance : Instance [NotCreatable] [NotReplicated]
	Property MultipleDocumentInterfaceInstance.FocusedDataModelSession: DataModelSession? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Event MultipleDocumentInterfaceInstance.DataModelSessionEnded(dataModelSession: Instance) {RobloxScriptSecurity}
	Event MultipleDocumentInterfaceInstance.DataModelSessionStarted(dataModelSession: Instance) {RobloxScriptSecurity}
Class NetworkMarker : Instance [NotCreatable] [NotBrowsable]
	Event NetworkMarker.Received()
Class NetworkPeer : Instance [NotCreatable] [NotBrowsable]
	Function NetworkPeer:SetOutgoingKBPSLimit(limit: number) -> () {PluginSecurity}
Class NetworkClient : NetworkPeer [NotCreatable] [Service] [NotReplicated]
	Event NetworkClient.ConnectionAccepted(peer: string, replicator: Instance)
	Event NetworkClient.ConnectionFailed(peer: string, code: number, reason: string)
Class NetworkServer : NetworkPeer [NotCreatable] [Service] [NotReplicated]
	Function NetworkServer:EncryptStringForPlayerId(toEncrypt: string, playerId: number) -> string
Class NetworkReplicator : Instance [NotCreatable] [NotReplicated]
	Function NetworkReplicator:GetPlayer() -> Instance?
Class ClientReplicator : NetworkReplicator [NotCreatable] [NotReplicated]
	Function ClientReplicator:RequestRCCProfilerData(frameRate: number, timeFrame: number) -> () {RobloxScriptSecurity}
	Function ClientReplicator:RequestServerLuauHeapData() -> () {RobloxScriptSecurity}
	Function ClientReplicator:RequestServerScriptProfiling(start: boolean, frequency: number?) -> () {RobloxScriptSecurity}
	Function ClientReplicator:RequestServerScriptProfilingData() -> () {RobloxScriptSecurity}
	Function ClientReplicator:RequestServerStats(request: boolean) -> () {RobloxScriptSecurity}
	Event ClientReplicator.RCCProfilerDataComplete(success: boolean, message: string) {RobloxScriptSecurity}
	Event ClientReplicator.StatsReceived(stats: { [string]: any }) {RobloxScriptSecurity}
Class ServerReplicator : NetworkReplicator [NotCreatable] [NotReplicated]
Class NetworkSettings : Instance [NotCreatable] [Service] [NotBrowsable]
	Property NetworkSettings.RandomizeJoinInstanceOrder: boolean
	Property NetworkSettings.RenderStreamedRegions: boolean
	Property NetworkSettings.ShowActiveAnimationAsset: boolean
	Property NetworkSettings.EmulatedTotalMemoryInMB: number {PluginSecurity} [Hidden] [NotReplicated]
	Property NetworkSettings.FreeMemoryMBytes: number {PluginSecurity} [Hidden] [ReadOnly]
	Property NetworkSettings.IncomingReplicationLag: number
	Property NetworkSettings.PrintJoinSizeBreakdown: boolean
	Property NetworkSettings.PrintPhysicsErrors: boolean
	Property NetworkSettings.PrintStreamInstanceQuota: boolean
	Property NetworkSettings.HttpProxyEnabled: boolean {✏️RobloxScriptSecurity}
	Property NetworkSettings.HttpProxyURL: string {✏️RobloxScriptSecurity}
	Property NetworkSettings.OpenCertManagerDialog: number {NotAccessibleSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class NoCollisionConstraint : Instance
	Property NoCollisionConstraint.Enabled: boolean
	Property NoCollisionConstraint.Part0: BasePart?
	Property NoCollisionConstraint.Part1: BasePart?
Class Noise : Instance [NotReplicated]
	Property Noise.NoiseType: Enum.NoiseType {RobloxScriptSecurity}
	Property Noise.Seed: number {RobloxScriptSecurity}
	Function Noise:SampleDirectional(position: Vector3, direction: Vector3) -> number {RobloxScriptSecurity}
	Function Noise:SampleUniform(position: Vector3) -> number {RobloxScriptSecurity}
Class NotificationService : Instance [NotCreatable] [Service]
	Property NotificationService.IsLuaChatEnabled: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property NotificationService.IsLuaGameDetailsEnabled: boolean {RobloxScriptSecurity} [ReadOnly]
	Property NotificationService.SelectedTheme: string {RobloxScriptSecurity} [📁 LoadOnly] [NotReplicated]
	Property NotificationService.IsConnected: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function NotificationService:ActionEnabled(actionType: Enum.AppShellActionType) -> () {RobloxScriptSecurity}
	Function NotificationService:ActionTaken(actionType: Enum.AppShellActionType) -> () {RobloxScriptSecurity}
	Function NotificationService:CancelAllNotification(userId: number) -> () {LocalUserSecurity}
	Function NotificationService:CancelNotification(userId: number, alertId: number) -> () {LocalUserSecurity}
	Function NotificationService:GetScheduledNotifications(userId: number) -> { any } {LocalUserSecurity} [Yields]
	Function NotificationService:ScheduleNotification(userId: number, alertId: number, alertMsg: string, minutesToFire: number) -> () {LocalUserSecurity}
	Function NotificationService:SwitchedToAppShellFeature(appShellFeature: Enum.AppShellFeature) -> () {RobloxScriptSecurity}
	Event NotificationService.Roblox17sConnectionChanged(connectionName: string, connectionState: Enum.ConnectionState, namespaceSequenceNumbers: string)
	Event NotificationService.Roblox17sEventReceived(eventData: { [string]: any })
	Event NotificationService.RobloxConnectionChanged(connectionName: string, connectionState: Enum.ConnectionState, sequenceNumber: string, namespaceSequenceNumbers: string) {RobloxScriptSecurity}
	Event NotificationService.RobloxEventReceived(eventData: { [string]: any }) {RobloxScriptSecurity}
Class OmniRecommendationsService : Instance [NotCreatable] [Service] [NotReplicated]
	Function OmniRecommendationsService:ClearSessionId() -> () {RobloxScriptSecurity}
	Function OmniRecommendationsService:GetSessionId() -> string {RobloxScriptSecurity}
	Function OmniRecommendationsService:MakeRequest(nextPageToken: string) -> HttpRequest {RobloxScriptSecurity}
Class OpenCloudApiV1 : Instance [NotCreatable] [NotReplicated]
	Function OpenCloudApiV1:CreateModel(name: string) -> OpenCloudModel [CustomLuaState]
	Function OpenCloudApiV1:CreateUserNotificationAsync(user: string, userNotification: OpenCloudModel) -> OpenCloudModel [Yields]
Class OpenCloudService : Instance [NotCreatable] [Service] [NotReplicated]
	Function OpenCloudService:GetApiV1() -> OpenCloudApiV1
	Function OpenCloudService:HttpRequestAsync(options: { [string]: any }) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function OpenCloudService:InvokeAsync(version: string, methodName: string, arguments: { [string]: any }) -> { [string]: any } [Yields]
	Function OpenCloudService:RegisterOpenCloud(version: string, methodName: string, method: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function OpenCloudService:RegistrationComplete() -> () {RobloxScriptSecurity}
Class OperationGraph : Instance
Class PVInstance : Instance [NotCreatable] [NotBrowsable]
	Property PVInstance.Pivot Offset: CFrame [NotReplicated] [NotScriptable]
	Property PVInstance.Origin: CFrame [NotReplicated] [NotScriptable]
	Function PVInstance:GetPivot() -> CFrame {🧬Safe}
	Function PVInstance:PivotTo(targetCFrame: CFrame) -> ()
Class BasePart : PVInstance [NotCreatable] [NotBrowsable]
	Property BasePart.BrickColor: BrickColor [📁 LoadOnly] [NotReplicated]
	Property BasePart.CastShadow: boolean
	Property BasePart.Color: Color3 [📁 LoadOnly] [NotReplicated]
	Property BasePart.Color3uint8: Color3uint8 [Hidden] [NotScriptable]
	Property BasePart.Material: Enum.Material
	Property BasePart.MaterialVariant: string [NotReplicated]
	Property BasePart.MaterialVariantSerialized: string [Hidden] [NotScriptable]
	Property BasePart.Reflectance: number
	Property BasePart.Transparency: number
	Property BasePart.AssemblyAngularVelocity: Vector3 [📁 LoadOnly] [NotReplicated]
	Property BasePart.AssemblyCenterOfMass: Vector3 [ReadOnly]
	Property BasePart.AssemblyLinearVelocity: Vector3 [📁 LoadOnly] [NotReplicated]
	Property BasePart.AssemblyMass: number [ReadOnly]
	Property BasePart.AssemblyRootPart: BasePart? [ReadOnly]
	Property BasePart.DraggingV1: boolean [Hidden] [NotScriptable]
	Property BasePart.EnableFluidForces: boolean
	Property BasePart.NetworkOwnershipRule: Enum.NetworkOwnership [Hidden] [NotScriptable]
	Property BasePart.CanCollide: boolean
	Property BasePart.CanQuery: boolean
	Property BasePart.CanTouch: boolean
	Property BasePart.CollisionGroup: string [NotReplicated]
	Property BasePart.CollisionGroupId: number [NotReplicated] [Deprecated]
	Property BasePart.CollisionGroupReplicate: string {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property BasePart.LocalSimulationValidation: number [Hidden] [NotScriptable]
	Property BasePart.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property BasePart.Locked: boolean
	Property BasePart.NetworkIsSleeping: boolean [Hidden] [NotScriptable]
	Property BasePart.NetworkOwnerV3: SystemAddress [Hidden] [NotScriptable]
	Property BasePart.ResizeIncrement: number [ReadOnly]
	Property BasePart.ResizeableFaces: Faces [ReadOnly]
	Property BasePart.RotVelocity: Vector3 [Hidden] [Deprecated]
	Property BasePart.Rotation: Vector3 [📁 LoadOnly] [NotReplicated]
	Property BasePart.SpecificGravity: number [ReadOnly] [Deprecated]
	Property BasePart.Velocity: Vector3 [Hidden] [Deprecated]
	Property BasePart.Anchored: boolean
	Property BasePart.CenterOfMass: Vector3 [ReadOnly]
	Property BasePart.CurrentPhysicalProperties: PhysicalProperties [ReadOnly]
	Property BasePart.CustomPhysicalProperties: PhysicalProperties
	Property BasePart.Elasticity: number [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property BasePart.Friction: number [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property BasePart.Mass: number [ReadOnly]
	Property BasePart.Massless: boolean
	Property BasePart.ReceiveAge: number [Hidden] [ReadOnly]
	Property BasePart.RootPriority: number
	Property BasePart.PivotOffset: CFrame
	Property BasePart.BackSurface: Enum.SurfaceType
	Property BasePart.BottomSurface: Enum.SurfaceType
	Property BasePart.FrontSurface: Enum.SurfaceType
	Property BasePart.LeftSurface: Enum.SurfaceType
	Property BasePart.RightSurface: Enum.SurfaceType
	Property BasePart.TopSurface: Enum.SurfaceType
	Property BasePart.BackParamA: number [Hidden] [Deprecated]
	Property BasePart.BackParamB: number [Hidden] [Deprecated]
	Property BasePart.BackSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.BottomParamA: number [Hidden] [Deprecated]
	Property BasePart.BottomParamB: number [Hidden] [Deprecated]
	Property BasePart.BottomSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.FrontParamA: number [Hidden] [Deprecated]
	Property BasePart.FrontParamB: number [Hidden] [Deprecated]
	Property BasePart.FrontSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.LeftParamA: number [Hidden] [Deprecated]
	Property BasePart.LeftParamB: number [Hidden] [Deprecated]
	Property BasePart.LeftSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.RightParamA: number [Hidden] [Deprecated]
	Property BasePart.RightParamB: number [Hidden] [Deprecated]
	Property BasePart.RightSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.TopParamA: number [Hidden] [Deprecated]
	Property BasePart.TopParamB: number [Hidden] [Deprecated]
	Property BasePart.TopSurfaceInput: Enum.InputType [Hidden] [Deprecated]
	Property BasePart.CFrame: CFrame
	Property BasePart.ExtentsCFrame: CFrame [ReadOnly]
	Property BasePart.ExtentsSize: Vector3 [ReadOnly]
	Property BasePart.Orientation: Vector3 [Hidden] [NotReplicated]
	Property BasePart.PhysicsRepRootPart: BasePart? {RobloxSecurity} [Hidden] [NotScriptable]
	Property BasePart.Position: Vector3 [Hidden] [NotReplicated]
	Property BasePart.ReplicationPV: ReplicationPV {RobloxSecurity} [Hidden] [NotScriptable]
	Property BasePart.Size: Vector3 [📁 LoadOnly] [NotReplicated]
	Property BasePart.siz: Vector3 [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Function BasePart:AngularAccelerationToTorque(angAcceleration: Vector3, angVelocity: Vector3? = Vector3?.new()) -> Vector3
	Function BasePart:ApplyAngularImpulse(impulse: Vector3) -> ()
	Function BasePart:ApplyImpulse(impulse: Vector3) -> ()
	Function BasePart:ApplyImpulseAtPosition(impulse: Vector3, position: Vector3) -> ()
	Function BasePart:BreakJoints() -> () [Deprecated]
	Function BasePart:CanCollideWith(part: BasePart) -> boolean {🧬Safe}
	Function BasePart:CanSetNetworkOwnership() -> ...any
	Function BasePart:GetClosestPointOnSurface(position: Vector3) -> Vector3
	Function BasePart:GetConnectedParts(recursive: boolean? = false) -> { Instance } {🧬Safe}
	Function BasePart:GetJoints() -> { Instance } {🧬Safe}
	Function BasePart:GetMass() -> number {🧬Safe}
	Function BasePart:GetNetworkOwner() -> Instance? {🧬Safe}
	Function BasePart:GetNetworkOwnershipAuto() -> boolean {🧬Safe}
	Function BasePart:GetNoCollisionConstraints() -> { Instance }
	Function BasePart:GetRenderCFrame() -> CFrame [Deprecated]
	Function BasePart:GetRootPart() -> Instance? {🧬Safe}
	Function BasePart:GetTouchingParts() -> { Instance }
	Function BasePart:GetVelocityAtPosition(position: Vector3) -> Vector3 {🧬Safe}
	Function BasePart:IntersectAsync(parts: { Instance }, collisionfidelity: Enum.CollisionFidelity? = "Default", renderFidelity: Enum.RenderFidelity? = "Automatic") -> Instance? [Yields]
	Function BasePart:IsGrounded() -> boolean {🧬Safe}
	Function BasePart:MakeJoints() -> () [Deprecated]
	Function BasePart:Resize(normalId: Enum.NormalId, deltaAmount: number) -> boolean
	Function BasePart:SetNetworkOwner(playerInstance: Player? = nil) -> ()
	Function BasePart:SetNetworkOwnershipAuto() -> ()
	Function BasePart:SubtractAsync(parts: { Instance }, collisionfidelity: Enum.CollisionFidelity? = "Default", renderFidelity: Enum.RenderFidelity? = "Automatic") -> Instance? [Yields]
	Function BasePart:TorqueToAngularAcceleration(torque: Vector3, angVelocity: Vector3? = Vector3?.new()) -> Vector3
	Function BasePart:UnionAsync(parts: { Instance }, collisionfidelity: Enum.CollisionFidelity? = "Default", renderFidelity: Enum.RenderFidelity? = "Automatic") -> Instance? [Yields]
	Event BasePart.LocalSimulationTouched(part: BasePart) [Deprecated]
	Event BasePart.NetworkOwnerChanged(systemAddress: SystemAddress) {LocalUserSecurity} [Hidden]
	Event BasePart.OutfitChanged() [Deprecated]
	Event BasePart.StoppedTouching(otherPart: BasePart) [Deprecated]
	Event BasePart.TouchEnded(otherPart: BasePart)
	Event BasePart.Touched(otherPart: BasePart)
Class CornerWedgePart : BasePart
Class FormFactorPart : BasePart [NotCreatable]
	Property FormFactorPart.FormFactor: Enum.FormFactor [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property FormFactorPart.formFactorRaw: Enum.FormFactor [Hidden] [NotScriptable]
Class Part : FormFactorPart
	Property Part.Shape: Enum.PartType [📁 LoadOnly] [NotReplicated]
	Property Part.shap: Enum.PartType [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
Class FlagStand : Part [Deprecated]
	Property FlagStand.TeamColor: BrickColor [Deprecated]
	Event FlagStand.FlagCaptured(player: Instance) [Deprecated]
Class Platform : Part [NotCreatable]
	Event Platform.RemoteCreateMotor6D(humanoid: Instance) [Hidden]
	Event Platform.RemoteDestroyMotor6D() [Hidden]
Class Seat : Part
	Property Seat.Disabled: boolean
	Property Seat.Occupant: Humanoid? [ReadOnly]
	Function Seat:Sit(humanoid: Instance) -> ()
	Event Seat.RemoteCreateSeatWeld(humanoid: Instance) [Hidden]
	Event Seat.RemoteDestroySeatWeld() [Hidden]
Class SkateboardPlatform : Part [Deprecated]
	Property SkateboardPlatform.Controller: SkateboardController? [ReadOnly] [Deprecated]
	Property SkateboardPlatform.ControllingHumanoid: Humanoid? [ReadOnly] [Deprecated]
	Property SkateboardPlatform.MoveState: Enum.MoveState [Hidden] [NotScriptable] [Deprecated]
	Property SkateboardPlatform.Steer: number [Deprecated]
	Property SkateboardPlatform.StickyWheels: boolean [Deprecated]
	Property SkateboardPlatform.Throttle: number [Deprecated]
	Function SkateboardPlatform:ApplySpecificImpulse(impulseWorld: Vector3) -> () [Deprecated]
	Event SkateboardPlatform.Equipped(humanoid: Instance, skateboardController: Instance) [Deprecated]
	Event SkateboardPlatform.MoveStateChanged(newState: Enum.MoveState, oldState: Enum.MoveState) [Deprecated]
	Event SkateboardPlatform.RemoteCreateMotor6D(humanoid: Instance) [Hidden] [Deprecated]
	Event SkateboardPlatform.RemoteDestroyMotor6D() [Hidden] [Deprecated]
	Event SkateboardPlatform.Unequipped(humanoid: Instance) [Deprecated]
Class SpawnLocation : Part
	Property SpawnLocation.Enabled: boolean
	Property SpawnLocation.Duration: number
	Property SpawnLocation.AllowTeamChangeOnTouch: boolean
	Property SpawnLocation.Neutral: boolean
	Property SpawnLocation.TeamColor: BrickColor
Class WedgePart : FormFactorPart
Class Terrain : BasePart [NotCreatable]
	Property Terrain.Decoration: boolean [NotScriptable]
	Property Terrain.GrassLength: number [NotScriptable]
	Property Terrain.MaterialColors: BinaryString [NotScriptable]
	Property Terrain.ShorelinesUpgraded: boolean {RobloxScriptSecurity} [Hidden]
	Property Terrain.SmoothVoxelsUpgraded: boolean {RobloxScriptSecurity} [Hidden]
	Property Terrain.WaterColor: Color3
	Property Terrain.WaterReflectance: number
	Property Terrain.WaterTransparency: number
	Property Terrain.WaterWaveSize: number
	Property Terrain.WaterWaveSpeed: number
	Property Terrain.AcquisitionMethod: Enum.TerrainAcquisitionMethod {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property Terrain.ClusterGrid: string [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Property Terrain.ClusterGridV2: string [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Property Terrain.ClusterGridV3: BinaryString [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Property Terrain.IsSmooth: boolean [ReadOnly] [Deprecated]
	Property Terrain.LastUsedModificationMethod: Enum.TerrainAcquisitionMethod {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Terrain.MaxExtents: Region3int16 [ReadOnly]
	Property Terrain.PhysicsGrid: BinaryString [Hidden] [NotReplicated] [NotScriptable]
	Property Terrain.SmoothGrid: BinaryString [Hidden] [NotReplicated] [NotScriptable]
	Function Terrain:AutowedgeCell(x: number, y: number, z: number) -> boolean [Deprecated]
	Function Terrain:AutowedgeCells(region: Region3int16) -> () [Deprecated]
	Function Terrain:CanShorelinesBeUpgraded() -> boolean {RobloxScriptSecurity}
	Function Terrain:CanSmoothVoxelsBeUpgraded() -> boolean {RobloxScriptSecurity}
	Function Terrain:CellCenterToWorld(x: number, y: number, z: number) -> Vector3
	Function Terrain:CellCornerToWorld(x: number, y: number, z: number) -> Vector3
	Function Terrain:Clear() -> ()
	Function Terrain:ConvertToSmooth() -> () {PluginSecurity} [Deprecated]
	Function Terrain:CopyRegion(region: Region3int16) -> TerrainRegion
	Function Terrain:CountCells() -> number
	Function Terrain:FillBall(center: Vector3, radius: number, material: Enum.Material) -> ()
	Function Terrain:FillBlock(cframe: CFrame, size: Vector3, material: Enum.Material) -> ()
	Function Terrain:FillCylinder(cframe: CFrame, height: number, radius: number, material: Enum.Material) -> ()
	Function Terrain:FillRegion(region: Region3, resolution: number, material: Enum.Material) -> ()
	Function Terrain:FillWedge(cframe: CFrame, size: Vector3, material: Enum.Material) -> ()
	Function Terrain:GetCell(x: number, y: number, z: number) -> ...any [Deprecated]
	Function Terrain:GetMaterialColor(material: Enum.Material) -> Color3 {🧬Safe}
	Function Terrain:GetTerrainWireframe(cframe: CFrame, size: Vector3) -> { any } {RobloxScriptSecurity}
	Function Terrain:GetWaterCell(x: number, y: number, z: number) -> ...any [Deprecated]
	Function Terrain:PasteRegion(region: TerrainRegion, corner: Vector3int16, pasteEmptyCells: boolean) -> ()
	Function Terrain:ReadVoxelChannels(region: Region3, resolution: number, channelIds: { any }) -> { [string]: any } [CustomLuaState] {🧬Safe}
	Function Terrain:ReadVoxels(region: Region3, resolution: number) -> ...any [CustomLuaState] {🧬Safe}
	Function Terrain:ReplaceMaterial(region: Region3, resolution: number, sourceMaterial: Enum.Material, targetMaterial: Enum.Material) -> ()
	Function Terrain:ReplaceMaterialInTransform(cframe: CFrame, size: Vector3, sourceMaterial: Enum.Material, targetMaterial: Enum.Material) -> () {RobloxScriptSecurity}
	Function Terrain:ReplaceMaterialInTransformSubregion(cframe: CFrame, size: Vector3, sourceMaterial: Enum.Material, targetMaterial: Enum.Material, targetRegion: Region3int16) -> () {RobloxScriptSecurity}
	Function Terrain:SetCell(x: number, y: number, z: number, material: Enum.CellMaterial, block: Enum.CellBlock, orientation: Enum.CellOrientation) -> () [Deprecated]
	Function Terrain:SetCells(region: Region3int16, material: Enum.CellMaterial, block: Enum.CellBlock, orientation: Enum.CellOrientation) -> () [Deprecated]
	Function Terrain:SetMaterialColor(material: Enum.Material, value: Color3) -> ()
	Function Terrain:SetMaterialInTransform(cframe: CFrame, size: Vector3, targetMaterial: Enum.Material) -> () {RobloxScriptSecurity}
	Function Terrain:SetMaterialInTransformSubregion(cframe: CFrame, size: Vector3, targetMaterial: Enum.Material, targetRegion: Region3int16) -> () {RobloxScriptSecurity}
	Function Terrain:SetWaterCell(x: number, y: number, z: number, force: Enum.WaterForce, direction: Enum.WaterDirection) -> () [Deprecated]
	Function Terrain:SmoothRegion(region: Region3, resolution: number, strength: number) -> ...any {RobloxScriptSecurity} [CustomLuaState] {🧬Safe}
	Function Terrain:WorldToCell(position: Vector3) -> Vector3
	Function Terrain:WorldToCellPreferEmpty(position: Vector3) -> Vector3
	Function Terrain:WorldToCellPreferSolid(position: Vector3) -> Vector3
	Function Terrain:WriteVoxelChannels(region: Region3, resolution: number, channels: { [string]: any }) -> () [CustomLuaState]
	Function Terrain:WriteVoxels(region: Region3, resolution: number, materials: { any }, occupancy: { any }) -> () [CustomLuaState]
Class TriangleMeshPart : BasePart [NotCreatable]
	Property TriangleMeshPart.FluidFidelity: Enum.FluidFidelity {✏️PluginSecurity} [📁 LoadOnly] [NotReplicated]
	Property TriangleMeshPart.FluidFidelityInternal: Enum.FluidFidelity {RobloxSecurity} [Hidden] [NotScriptable]
	Property TriangleMeshPart.UnscaledCofm: Vector3 {RobloxSecurity} [Hidden]
	Property TriangleMeshPart.UnscaledVolInertiaDiags: Vector3 {RobloxSecurity} [Hidden]
	Property TriangleMeshPart.UnscaledVolInertiaOffDiags: Vector3 {RobloxSecurity} [Hidden]
	Property TriangleMeshPart.UnscaledVolume: number {RobloxSecurity} [Hidden]
	Property TriangleMeshPart.CollisionFidelity: Enum.CollisionFidelity {✏️PluginSecurity} [📁 LoadOnly] [NotReplicated]
	Property TriangleMeshPart.AeroMeshData: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
	Property TriangleMeshPart.MeshSize: Vector3 [ReadOnly]
	Property TriangleMeshPart.PhysicalConfigData: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
Class MeshPart : TriangleMeshPart
	Property MeshPart.DoubleSided: boolean {✏️PluginSecurity}
	Property MeshPart.EditableMeshString: SharedString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property MeshPart.HasJointOffset: boolean {✏️NotAccessibleSecurity} [Hidden]
	Property MeshPart.HasSkinnedMesh: boolean {✏️NotAccessibleSecurity} [Hidden]
	Property MeshPart.MeshID: ContentId [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Property MeshPart.MeshId: ContentId {✏️NotAccessibleSecurity}
	Property MeshPart.RenderFidelity: Enum.RenderFidelity {✏️PluginSecurity} [NotReplicated]
	Property MeshPart.RenderFidelityReplicate: Enum.RenderFidelity {✏️PluginSecurity} [Hidden] [NotScriptable]
	Property MeshPart.TextureID: ContentId
	Property MeshPart.VertexCount: number {RobloxSecurity} [Hidden] [NotScriptable]
	Property MeshPart.InitialSize: Vector3 {RobloxSecurity} [Hidden] [NotScriptable]
	Property MeshPart.JointOffset: Vector3 {✏️NotAccessibleSecurity} [Hidden]
	Property MeshPart.PhysicsData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property MeshPart.AlternateMeshHash: number {RobloxSecurity} [Hidden] [ReadOnly] [NotScriptable]
	Function MeshPart:ApplyMesh(meshPart: Instance) -> ()
Class PartOperation : TriangleMeshPart
	Property PartOperation.RenderFidelity: Enum.RenderFidelity {✏️PluginSecurity}
	Property PartOperation.SmoothingAngle: number {✏️PluginSecurity}
	Property PartOperation.AssetId: ContentId {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.CSGMesh2KernelMap: SharedString [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.CSGPropertyData: CSGPropertyData {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.ChildData: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.ChildData2: SharedString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.DCDPropertyData: CSGPropertyData {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.FormFactor: Enum.FormFactor {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.InitialSize: Vector3 {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.ManifoldMesh: SharedString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.MeshData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.MeshData2: SharedString {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.PhysicsData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property PartOperation.SerializedCSGTree: SharedString [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.SerializedOperationGraph: SharedString [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperation.TriangleCount: number [ReadOnly]
	Property PartOperation.UsePartColor: boolean
	Function PartOperation:SubstituteGeometry(source: Instance) -> ()
Class IntersectOperation : PartOperation
Class NegateOperation : PartOperation
Class UnionOperation : PartOperation
Class TrussPart : BasePart
	Property TrussPart.Style: Enum.Style [📁 LoadOnly] [NotReplicated]
Class VehicleSeat : BasePart
	Property VehicleSeat.AreHingesDetected: number [ReadOnly]
	Property VehicleSeat.Disabled: boolean
	Property VehicleSeat.HeadsUpDisplay: boolean
	Property VehicleSeat.MaxSpeed: number
	Property VehicleSeat.Occupant: Humanoid? [ReadOnly]
	Property VehicleSeat.Steer: number [NotReplicated]
	Property VehicleSeat.SteerFloat: number
	Property VehicleSeat.Throttle: number [NotReplicated]
	Property VehicleSeat.ThrottleFloat: number
	Property VehicleSeat.Torque: number
	Property VehicleSeat.TurnSpeed: number
	Function VehicleSeat:Sit(humanoid: Instance) -> ()
	Event VehicleSeat.RemoteCreateSeatWeld(humanoid: Instance) [Hidden]
	Event VehicleSeat.RemoteDestroySeatWeld() [Hidden]
Class Model : PVInstance
	Property Model.LevelOfDetail: Enum.ModelLevelOfDetail {PluginSecurity}
	Property Model.ModelStreamingMode: Enum.ModelStreamingMode
	Property Model.LodEntity: LodDataEntity? [Hidden] [NotScriptable]
	Property Model.ModelMeshCFrame: CFrame [Hidden] [NotScriptable]
	Property Model.ModelMeshData: SharedString [Hidden] [NotScriptable]
	Property Model.ModelMeshSize: Vector3 [Hidden] [NotScriptable]
	Property Model.NeedsPivotMigration: boolean [Hidden] [NotReplicated] [NotScriptable]
	Property Model.PrimaryPart: BasePart?
	Property Model.Scale: number [NotReplicated] [NotScriptable]
	Property Model.ScaleFactor: number [Hidden] [NotScriptable]
	Property Model.WorldPivot: CFrame [NotReplicated]
	Property Model.WorldPivotData: CFrame? [Hidden] [NotScriptable]
	Function Model:AddPersistentPlayer(playerInstance: Player? = nil) -> ()
	Function Model:BreakJoints() -> () [Deprecated]
	Function Model:GetBoundingBox() -> (CFrame, Vector3)
	Function Model:GetExtentsSize() -> Vector3
	Function Model:GetModelCFrame() -> CFrame [Deprecated]
	Function Model:GetModelSize() -> Vector3 [Deprecated]
	Function Model:GetPersistentPlayers() -> { Instance }
	Function Model:GetPrimaryPartCFrame() -> CFrame [Deprecated]
	Function Model:GetScale() -> number
	Function Model:MakeJoints() -> () [Deprecated]
	Function Model:MoveTo(position: Vector3) -> ()
	Function Model:RemovePersistentPlayer(playerInstance: Player? = nil) -> ()
	Function Model:ResetOrientationToIdentity() -> () [Deprecated]
	Function Model:ScaleTo(newScaleFactor: number) -> ()
	Function Model:SetIdentityOrientation() -> () [Deprecated]
	Function Model:SetPrimaryPartCFrame(cframe: CFrame) -> () [Deprecated]
	Function Model:TranslateBy(delta: Vector3) -> ()
	Function Model:move(location: Vector3) -> () [Deprecated]
Class Actor : Model
	Function Actor:BindToMessage(topic: string, function: (...any) -> ...any) -> RBXScriptConnection {🧬Safe}
	Function Actor:BindToMessageParallel(topic: string, function: (...any) -> ...any) -> RBXScriptConnection {🧬Safe}
	Function Actor:SendMessage(topic: string, message: ...any) -> () {🧬Safe}
Class BackpackItem : Model [NotCreatable]
	Property BackpackItem.TextureId: ContentId
Class HopperBin : BackpackItem [Deprecated]
	Property HopperBin.Active: boolean [Deprecated]
	Property HopperBin.BinType: Enum.BinType [Deprecated]
	Property HopperBin.Command: string [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable] [Deprecated]
	Property HopperBin.TextureName: string [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable] [Deprecated]
	Function HopperBin:Disable() -> () {RobloxScriptSecurity} [Deprecated]
	Function HopperBin:ToggleSelect() -> () {RobloxScriptSecurity} [Deprecated]
	Event HopperBin.Deselected() [Deprecated]
	Event HopperBin.ReplicatedSelected() [Hidden] [Deprecated]
	Event HopperBin.Selected(mouse: Instance) [Deprecated]
Class Tool : BackpackItem
	Property Tool.ToolTip: string
	Property Tool.CanBeDropped: boolean
	Property Tool.ManualActivationOnly: boolean
	Property Tool.RequiresHandle: boolean
	Property Tool.Enabled: boolean
	Property Tool.Grip: CFrame
	Property Tool.GripForward: Vector3 [Hidden] [NotReplicated]
	Property Tool.GripPos: Vector3 [Hidden] [NotReplicated]
	Property Tool.GripRight: Vector3 [Hidden] [NotReplicated]
	Property Tool.GripUp: Vector3 [Hidden] [NotReplicated]
	Function Tool:Activate() -> ()
	Function Tool:Deactivate() -> ()
	Event Tool.Activated()
	Event Tool.Deactivated()
	Event Tool.Equipped(mouse: Mouse)
	Event Tool.Unequipped()
	Event Tool.VRLaserPointerClicked(player: Player) {RobloxSecurity} [Hidden]
Class Flag : Tool [Deprecated]
	Property Flag.TeamColor: BrickColor [Deprecated]
Class Status : Model [NotCreatable] [Deprecated]
Class WorldRoot : Model [NotCreatable]
	Function WorldRoot:ArePartsTouchingOthers(partList: { Instance }, overlapIgnored: number? = 0.000199999995) -> boolean
	Function WorldRoot:Blockcast(cframe: CFrame, size: Vector3, direction: Vector3, params: RaycastParams? = RaycastParams?.new()) -> RaycastResult? {🧬Safe}
	Function WorldRoot:BulkMoveTo(partList: { Instance }, cframeList: { any }, eventMode: Enum.BulkMoveMode? = "FireAllEvents") -> ()
	Function WorldRoot:CacheCurrentTerrain(id: string, center: Vector3, radius: number) -> string {RobloxScriptSecurity}
	Function WorldRoot:ClearCachedTerrain(id: string) -> boolean {RobloxScriptSecurity}
	Function WorldRoot:FindPartOnRay(ray: Ray, ignoreDescendantsInstance: Instance? = nil, terrainCellsAreCubes: boolean? = false, ignoreWater: boolean? = false) -> ...any [Deprecated]
	Function WorldRoot:FindPartOnRayWithIgnoreList(ray: Ray, ignoreDescendantsTable: { Instance }, terrainCellsAreCubes: boolean? = false, ignoreWater: boolean? = false) -> ...any [Deprecated]
	Function WorldRoot:FindPartOnRayWithWhitelist(ray: Ray, whitelistDescendantsTable: { Instance }, ignoreWater: boolean? = false) -> ...any [Deprecated]
	Function WorldRoot:FindPartsInRegion3(region: Region3, ignoreDescendantsInstance: Instance? = nil, maxParts: number? = 20) -> { Instance } [Deprecated]
	Function WorldRoot:FindPartsInRegion3WithIgnoreList(region: Region3, ignoreDescendantsTable: { Instance }, maxParts: number? = 20) -> { Instance } [Deprecated]
	Function WorldRoot:FindPartsInRegion3WithWhiteList(region: Region3, whitelistDescendantsTable: { Instance }, maxParts: number? = 20) -> { Instance } [Deprecated]
	Function WorldRoot:GetPartBoundsInBox(cframe: CFrame, size: Vector3, overlapParams: OverlapParams? = OverlapParams?.new()) -> { Instance } {🧬Safe}
	Function WorldRoot:GetPartBoundsInRadius(position: Vector3, radius: number, overlapParams: OverlapParams? = OverlapParams?.new()) -> { Instance } {🧬Safe}
	Function WorldRoot:GetPartsInPart(part: BasePart, overlapParams: OverlapParams? = OverlapParams?.new()) -> { Instance } {🧬Safe}
	Function WorldRoot:IKMoveTo(part: BasePart, target: CFrame, translateStiffness: number? = 0.5, rotateStiffness: number? = 0.5, collisionsMode: Enum.IKCollisionsMode? = "OtherMechanismsAnchored") -> () {PluginSecurity}
	Function WorldRoot:IsRegion3Empty(region: Region3, ignoreDescendentsInstance: Instance? = nil) -> boolean [Deprecated]
	Function WorldRoot:IsRegion3EmptyWithIgnoreList(region: Region3, ignoreDescendentsTable: { Instance }) -> boolean [Deprecated]
	Function WorldRoot:Raycast(origin: Vector3, direction: Vector3, raycastParams: RaycastParams? = RaycastParams?.new()) -> RaycastResult? {🧬Safe}
	Function WorldRoot:RaycastCachedTerrain(id: string, origin: Vector3, direction: Vector3, ignoreWater: boolean) -> RaycastResult? {RobloxScriptSecurity}
	Function WorldRoot:SetInsertPoint(point: Vector3, ignoreGrid: boolean? = false) -> () {RobloxScriptSecurity}
	Function WorldRoot:Shapecast(part: BasePart, direction: Vector3, params: RaycastParams? = RaycastParams?.new()) -> RaycastResult?
	Function WorldRoot:Spherecast(position: Vector3, radius: number, direction: Vector3, params: RaycastParams? = RaycastParams?.new()) -> RaycastResult? {🧬Safe}
	Function WorldRoot:StepPhysics(dt: number, parts: { Instance }? = Objects?.new()) -> () {PluginSecurity}
Class Workspace : WorldRoot [NotCreatable] [Service]
	Property Workspace.AirDensity: number
	Property Workspace.AllowThirdPartySales: boolean [NotReplicated]
	Property Workspace.AvatarUnificationMode: Enum.AvatarUnificationMode [NotScriptable]
	Property Workspace.CSGAsyncDynamicCollision: Enum.CSGAsyncDynamicCollision [NotScriptable]
	Property Workspace.ClientAnimatorThrottling: Enum.ClientAnimatorThrottlingMode
	Property Workspace.CollisionGroupData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property Workspace.CollisionGroups: string [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Property Workspace.DataModelPlaceVersion: number [Hidden] [NotScriptable]
	Property Workspace.DecreaseMinimumPartDensityMode: Enum.DecreaseMinimumPartDensityMode [NotScriptable]
	Property Workspace.ExplicitAutoJoints: boolean [Hidden] [NotScriptable]
	Property Workspace.FallenPartsDestroyHeight: number {✏️PluginSecurity}
	Property Workspace.FilteringEnabled: boolean {✏️PluginSecurity} [Hidden] [NotReplicated] [Deprecated]
	Property Workspace.FluidForces: Enum.FluidForces [NotScriptable]
	Property Workspace.GlobalWind: Vector3
	Property Workspace.Gravity: number
	Property Workspace.IKControlConstraintSupport: Enum.IKControlConstraintSupport [NotScriptable]
	Property Workspace.InterpolationThrottling: Enum.InterpolationThrottlingMode {✏️PluginSecurity} [Hidden] [NotReplicated] [Deprecated]
	Property Workspace.MeshPartHeadsAndAccessories: Enum.MeshPartHeadsAndAccessories [NotScriptable]
	Property Workspace.MoverConstraintRootBehavior: Enum.MoverConstraintRootBehaviorMode [NotScriptable]
	Property Workspace.PathfindingUseImprovedSearch: Enum.PathfindingUseImprovedSearch [NotScriptable] [NotBrowsable]
	Property Workspace.PhysicsSteppingMethod: Enum.PhysicsSteppingMethod [NotScriptable]
	Property Workspace.PlayerCharacterDestroyBehavior: Enum.PlayerCharacterDestroyBehavior [NotScriptable]
	Property Workspace.PrimalPhysicsSolver: Enum.PrimalPhysicsSolver [NotScriptable]
	Property Workspace.RenderingCacheOptimizations: Enum.RenderingCacheOptimizationMode [NotScriptable]
	Property Workspace.ReplicateInstanceDestroySetting: Enum.ReplicateInstanceDestroySetting [NotScriptable]
	Property Workspace.Retargeting: Enum.AnimatorRetargetingMode
	Property Workspace.SignalBehavior: Enum.SignalBehavior [NotScriptable]
	Property Workspace.SignalBehavior2: Enum.SignalBehavior [Hidden] [NotReplicated] [NotScriptable]
	Property Workspace.Terrain: Terrain? [ReadOnly]
	Property Workspace.TerrainWeldsFixed: boolean [Hidden] [NotScriptable]
	Property Workspace.TouchesUseCollisionGroups: boolean [NotScriptable]
	Property Workspace.CurrentCamera: Camera? [NotReplicated]
	Property Workspace.DistributedGameTime: number [NotReplicated]
	Property Workspace.InsertPoint: Vector3 [NotReplicated]
	Property Workspace.RejectCharacterDeletions: Enum.RejectCharacterDeletions [NotScriptable]
	Property Workspace.ModelStreamingBehavior: Enum.ModelStreamingBehavior [NotScriptable]
	Property Workspace.StreamOutBehavior: Enum.StreamOutBehavior [NotScriptable]
	Property Workspace.StreamingEnabled: boolean {✏️PluginSecurity}
	Property Workspace.StreamingIntegrityMode: Enum.StreamingIntegrityMode [NotScriptable]
	Property Workspace.StreamingMinRadius: number [NotScriptable]
	Property Workspace.StreamingPauseMode: Enum.StreamingPauseMode [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable]
	Property Workspace.StreamingTargetRadius: number [NotScriptable]
	Function Workspace:BreakJoints(objects: { Instance }) -> () {PluginSecurity} [Deprecated]
	Function Workspace:CalculateJumpDistance(gravity: number, jumpPower: number, walkSpeed: number) -> number {RobloxScriptSecurity}
	Function Workspace:CalculateJumpHeight(gravity: number, jumpPower: number) -> number {RobloxScriptSecurity}
	Function Workspace:CalculateJumpPower(gravity: number, jumpHeight: number) -> number {RobloxScriptSecurity}
	Function Workspace:ExperimentalSolverIsEnabled() -> boolean {LocalUserSecurity}
	Function Workspace:GetNumAwakeParts() -> number {🧬Safe}
	Function Workspace:GetPhysicsThrottling() -> number {🧬Safe}
	Function Workspace:GetRealPhysicsFPS() -> number {🧬Safe}
	Function Workspace:GetServerTimeNow() -> number {🧬Safe}
	Function Workspace:JoinToOutsiders(objects: { Instance }, jointType: Enum.JointCreationMode) -> ()
	Function Workspace:MakeJoints(objects: { Instance }) -> () {PluginSecurity} [Deprecated]
	Function Workspace:PGSIsEnabled() -> boolean
	Function Workspace:SetAvatarUnificationMode(value: Enum.AvatarUnificationMode) -> () {RobloxScriptSecurity}
	Function Workspace:SetMeshPartHeadsAndAccessories(value: Enum.MeshPartHeadsAndAccessories) -> () {RobloxScriptSecurity}
	Function Workspace:SetPhysicsThrottleEnabled(value: boolean) -> () {LocalUserSecurity}
	Function Workspace:UnjoinFromOutsiders(objects: { Instance }) -> ()
	Function Workspace:ZoomToExtents() -> () {PluginSecurity}
	Event Workspace.PersistentLoaded(player: Player)
Class WorldModel : WorldRoot
Class PackageLink : Instance [NotCreatable] [NotBrowsable]
	Property PackageLink.Creator: string [ReadOnly] [NotScriptable]
	Property PackageLink.PackageAssetName: string [ReadOnly] [NotScriptable]
	Property PackageLink.PermissionLevel: Enum.PackagePermission [ReadOnly] [NotScriptable]
	Property PackageLink.AutoUpdate: boolean [NotScriptable]
	Property PackageLink.DefaultName: string {✏️NotAccessibleSecurity}
	Property PackageLink.ModifiedState: number [Hidden] [NotScriptable]
	Property PackageLink.PackageGuid: number [Hidden] [NotScriptable]
	Property PackageLink.PackageId: ContentId [ReadOnly]
	Property PackageLink.PackageIdSerialize: ContentId [Hidden] [NotScriptable]
	Property PackageLink.SerializedDefaultAttributes: BinaryString {✏️NotAccessibleSecurity}
	Property PackageLink.Status: string {RobloxScriptSecurity} [ReadOnly]
	Property PackageLink.VersionIdSerialize: number [Hidden] [NotScriptable]
	Property PackageLink.VersionNumber: number {✏️NotAccessibleSecurity} [📁 LoadOnly] [NotReplicated]
	Property PackageLink.CanAutoUpdate: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
Class PackageService : Instance [NotCreatable] [Service] [NotReplicated]
Class PackageUIService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PackageUIService:ConvertToPackageUpload(uploadUrl: string, cloneInstances: { Instance }, originalInstances: { Instance }) -> () {RobloxScriptSecurity}
	Function PackageUIService:GetPackageInfo(packageAssetId: number) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function PackageUIService:PublishPackage(packageInstance: Instance, addUndoWayPoint: boolean) -> () {RobloxScriptSecurity} [Yields]
	Function PackageUIService:SetPackageVersion(packageInstance: Instance, versionNumber: number) -> Instance? {RobloxScriptSecurity} [Yields]
	Event PackageUIService.OnConvertToPackageResult(isSuccessful: boolean, errorMessage: string) {RobloxScriptSecurity}
	Event PackageUIService.OnOpenConvertToPackagePlugin(instances: { Instance }, name: string, cloneInstances: { Instance }) {RobloxScriptSecurity}
Class Pages : Instance [NotCreatable] [NotReplicated]
	Property Pages.IsFinished: boolean [ReadOnly]
	Function Pages:AdvanceToNextPageAsync() -> () [Yields]
	Function Pages:GetCurrentPage() -> { any }
Class AudioPages : Pages [NotCreatable] [NotReplicated]
Class BanHistoryPages : Pages [NotCreatable] [NotReplicated]
Class CatalogPages : Pages [NotCreatable] [NotReplicated]
Class DataStoreKeyPages : Pages [NotCreatable] [NotReplicated]
	Property DataStoreKeyPages.Cursor: string [ReadOnly]
Class DataStoreListingPages : Pages [NotCreatable] [NotReplicated]
	Property DataStoreListingPages.Cursor: string [ReadOnly]
Class DataStorePages : Pages [NotCreatable] [NotReplicated]
Class DataStoreVersionPages : Pages [NotCreatable] [NotReplicated]
Class FriendPages : Pages [NotCreatable] [NotReplicated]
Class InventoryPages : Pages [NotCreatable] [NotReplicated]
Class EmotesPages : InventoryPages [NotCreatable] [NotReplicated]
Class MemoryStoreHashMapPages : Pages [NotCreatable] [NotReplicated]
Class OutfitPages : Pages [NotCreatable] [NotReplicated]
Class StandardPages : Pages [NotCreatable] [NotReplicated]
Class PartOperationAsset : Instance
	Property PartOperationAsset.ChildData: BinaryString {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property PartOperationAsset.MeshData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
Class ParticleEmitter : Instance
	Property ParticleEmitter.Brightness: number
	Property ParticleEmitter.Color: ColorSequence
	Property ParticleEmitter.LightEmission: number
	Property ParticleEmitter.LightInfluence: number
	Property ParticleEmitter.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property ParticleEmitter.Orientation: Enum.ParticleOrientation
	Property ParticleEmitter.Size: NumberSequence
	Property ParticleEmitter.Squash: NumberSequence
	Property ParticleEmitter.Texture: ContentId
	Property ParticleEmitter.Transparency: NumberSequence
	Property ParticleEmitter.ZOffset: number
	Property ParticleEmitter.EmissionDirection: Enum.NormalId
	Property ParticleEmitter.Enabled: boolean
	Property ParticleEmitter.Lifetime: NumberRange
	Property ParticleEmitter.Rate: number
	Property ParticleEmitter.RotSpeed: NumberRange
	Property ParticleEmitter.Rotation: NumberRange
	Property ParticleEmitter.Speed: NumberRange
	Property ParticleEmitter.SpreadAngle: Vector2
	Property ParticleEmitter.VelocitySpread: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property ParticleEmitter.Shape: Enum.ParticleEmitterShape
	Property ParticleEmitter.ShapeInOut: Enum.ParticleEmitterShapeInOut
	Property ParticleEmitter.ShapePartial: number
	Property ParticleEmitter.ShapeStyle: Enum.ParticleEmitterShapeStyle
	Property ParticleEmitter.FlipbookFramerate: NumberRange
	Property ParticleEmitter.FlipbookIncompatible: string
	Property ParticleEmitter.FlipbookLayout: Enum.ParticleFlipbookLayout
	Property ParticleEmitter.FlipbookMode: Enum.ParticleFlipbookMode
	Property ParticleEmitter.FlipbookStartRandom: boolean
	Property ParticleEmitter.Acceleration: Vector3
	Property ParticleEmitter.Drag: number
	Property ParticleEmitter.LockedToPart: boolean
	Property ParticleEmitter.TimeScale: number
	Property ParticleEmitter.VelocityInheritance: number
	Property ParticleEmitter.WindAffectsDrag: boolean
	Function ParticleEmitter:Clear() -> ()
	Function ParticleEmitter:Emit(particleCount: number? = 16) -> ()
	Function ParticleEmitter:FastForward(numFrames: number) -> () {RobloxScriptSecurity}
	Event ParticleEmitter.OnClearRequested() [Hidden]
	Event ParticleEmitter.OnEmitRequested(particleCount: number) [Hidden]
Class PatchBundlerFileWatch : Instance [NotCreatable] [Service] [NotReplicated]
Class PatchMapping : Instance [NotCreatable] [NotReplicated]
	Property PatchMapping.FlattenTree: boolean
	Property PatchMapping.PatchId: string
	Property PatchMapping.TargetPath: string
Class Path : Instance [NotCreatable] [NotReplicated]
	Property Path.Status: Enum.PathStatus [ReadOnly]
	Function Path:CheckOcclusionAsync(start: number) -> number [Yields]
	Function Path:ComputeAsync(start: Vector3, finish: Vector3) -> () [Yields]
	Function Path:GetPointCoordinates() -> { any } [Deprecated]
	Function Path:GetWaypoints() -> { any }
	Event Path.Blocked(blockedWaypointIdx: number)
	Event Path.Unblocked(unblockedWaypointIdx: number)
Class PathfindingLink : Instance
	Property PathfindingLink.Attachment0: Attachment?
	Property PathfindingLink.Attachment1: Attachment?
	Property PathfindingLink.IsBidirectional: boolean
	Property PathfindingLink.Label: string
Class PathfindingModifier : Instance
	Property PathfindingModifier.Label: string
	Property PathfindingModifier.PassThrough: boolean
Class PathfindingService : Instance [NotCreatable] [Service] [NotReplicated]
	Property PathfindingService.EmptyCutoff: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Function PathfindingService:ComputeRawPathAsync(start: Vector3, finish: Vector3, maxDistance: number) -> Path [Yields] [Deprecated]
	Function PathfindingService:ComputeSmoothPathAsync(start: Vector3, finish: Vector3, maxDistance: number) -> Path [Yields] [Deprecated]
	Function PathfindingService:CreatePath(agentParameters: { [string]: any }? = nil) -> Path
	Function PathfindingService:FindPathAsync(start: Vector3, finish: Vector3) -> Path [Yields]
Class PausedState : Instance [NotCreatable] [NotReplicated]
	Property PausedState.Reason: Enum.DebuggerPauseReason {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property PausedState.ThreadId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property PausedState.AllThreadsPaused: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
Class PausedStateBreakpoint : PausedState [NotCreatable] [NotReplicated]
	Property PausedStateBreakpoint.Breakpoint: Breakpoint? {RobloxScriptSecurity} [Hidden] [ReadOnly]
Class PausedStateException : PausedState [NotCreatable] [NotReplicated]
	Property PausedStateException.ExceptionText: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
Class PermissionsService : Instance [NotCreatable] [Service]
	Function PermissionsService:GetIsThirdPartyAssetAllowed() -> boolean {RobloxScriptSecurity}
	Function PermissionsService:GetIsThirdPartyPurchaseAllowed() -> boolean {RobloxScriptSecurity}
	Function PermissionsService:GetIsThirdPartyTeleportAllowed() -> boolean {RobloxScriptSecurity}
	Function PermissionsService:GetPermissions(assetId: string) -> { any } {RobloxScriptSecurity}
	Function PermissionsService:SetPermissions(assetId: string, permissions: { any }) -> () {RobloxScriptSecurity}
Class PhysicsService : Instance [NotCreatable] [Service]
	Function PhysicsService:CollisionGroupContainsPart(name: string, part: BasePart) -> boolean [Deprecated]
	Function PhysicsService:CollisionGroupSetCollidable(name1: string, name2: string, collidable: boolean) -> ()
	Function PhysicsService:CollisionGroupsAreCollidable(name1: string, name2: string) -> boolean
	Function PhysicsService:CreateCollisionGroup(name: string) -> number [Deprecated]
	Function PhysicsService:GetCollisionGroupId(name: string) -> number [Deprecated]
	Function PhysicsService:GetCollisionGroupName(name: number) -> string [Deprecated]
	Function PhysicsService:GetCollisionGroups() -> { any } [Deprecated]
	Function PhysicsService:GetMaxCollisionGroups() -> number
	Function PhysicsService:GetRegisteredCollisionGroups() -> { any }
	Function PhysicsService:IkSolve(part: BasePart, target: CFrame, translateStiffness: number, rotateStiffness: number) -> () {RobloxScriptSecurity}
	Function PhysicsService:IsCollisionGroupRegistered(name: string) -> boolean
	Function PhysicsService:LocalIkSolve(part: BasePart, target: CFrame, translateStiffness: number, rotateStiffness: number) -> () {LocalUserSecurity}
	Function PhysicsService:RegisterCollisionGroup(name: string) -> ()
	Function PhysicsService:RemoveCollisionGroup(name: string) -> () [Deprecated]
	Function PhysicsService:RenameCollisionGroup(from: string, to: string) -> ()
	Function PhysicsService:SetPartCollisionGroup(part: BasePart, name: string) -> () [Deprecated]
	Function PhysicsService:UnregisterCollisionGroup(name: string) -> ()
Class PhysicsSettings : Instance [NotCreatable] [Settings]
	Property PhysicsSettings.AreAnchorsShown: boolean
	Property PhysicsSettings.AreAssembliesShown: boolean
	Property PhysicsSettings.AreAssemblyCentersOfMassShown: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreAwakePartsHighlighted: boolean
	Property PhysicsSettings.AreBodyTypesShown: boolean
	Property PhysicsSettings.AreCollisionCostsShown: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreConstraintForcesShownForSelectedOrHoveredInstances: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreConstraintTorquesShownForSelectedOrHoveredInstances: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreContactForcesShownForSelectedOrHoveredAssemblies: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreContactIslandsShown: boolean
	Property PhysicsSettings.AreContactPointsShown: boolean
	Property PhysicsSettings.AreGravityForcesShownForSelectedOrHoveredAssemblies: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreJointCoordinatesShown: boolean
	Property PhysicsSettings.AreMagnitudesShownForDrawnForcesAndTorques: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreMechanismsShown: boolean
	Property PhysicsSettings.AreModelCoordsShown: boolean
	Property PhysicsSettings.AreNonAnchorsShown: boolean
	Property PhysicsSettings.AreOwnersShown: boolean
	Property PhysicsSettings.ArePartCoordsShown: boolean
	Property PhysicsSettings.AreRegionsShown: boolean
	Property PhysicsSettings.AreSolverIslandsShown: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreTerrainReplicationRegionsShown: boolean
	Property PhysicsSettings.AreTimestepsShown: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.AreUnalignedPartsShown: boolean
	Property PhysicsSettings.AreWorldCoordsShown: boolean
	Property PhysicsSettings.DisableCSGv2: boolean
	Property PhysicsSettings.DisableCSGv3ForPlugins: boolean
	Property PhysicsSettings.DrawConstraintsNetForce: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.DrawContactsNetForce: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.DrawTotalNetForce: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.EnableForceVisualizationSmoothing: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.FluidForceDrawScale: number {RobloxScriptSecurity}
	Property PhysicsSettings.ForceCSGv2: boolean [Hidden] [NotReplicated]
	Property PhysicsSettings.ForceDrawScale: number {RobloxScriptSecurity}
	Property PhysicsSettings.ForceVisualizationSmoothingSteps: number {RobloxScriptSecurity}
	Property PhysicsSettings.IsInterpolationThrottleShown: boolean
	Property PhysicsSettings.IsReceiveAgeShown: boolean
	Property PhysicsSettings.IsTreeShown: boolean
	Property PhysicsSettings.ShowDecompositionGeometry: boolean
	Property PhysicsSettings.ShowFluidForcesForSelectedOrHoveredMechanisms: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.ShowInstanceNamesForDrawnForcesAndTorques: boolean {RobloxScriptSecurity}
	Property PhysicsSettings.SolverConvergenceMetricType: Enum.SolverConvergenceMetricType {RobloxScriptSecurity}
	Property PhysicsSettings.SolverConvergenceVisualizationMode: Enum.SolverConvergenceVisualizationMode {RobloxScriptSecurity}
	Property PhysicsSettings.TorqueDrawScale: number {RobloxScriptSecurity}
	Property PhysicsSettings.UseCSGv2: boolean
	Property PhysicsSettings.AllowSleep: boolean
	Property PhysicsSettings.PhysicsEnvironmentalThrottle: Enum.EnviromentalPhysicsThrottle
	Property PhysicsSettings.ThrottleAdjustTime: number
Class PlaceStatsService : Instance [NotCreatable] [Service] [NotReplicated]
Class PlacesService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PlacesService:StartPlaySolo() -> () {RobloxScriptSecurity}
	Function PlacesService:StopPlaySolo() -> () {RobloxScriptSecurity}
Class PlatformCloudStorageService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PlatformCloudStorageService:GetUserDataAsync(key: string) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function PlatformCloudStorageService:IsUserDataAvailable() -> boolean {RobloxScriptSecurity}
	Function PlatformCloudStorageService:SetUserDataAsync(key: string, data: { [string]: any }) -> () {RobloxScriptSecurity} [Yields]
Class PlatformFriendsService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PlatformFriendsService:GetPartyMembers() -> { any } {RobloxScriptSecurity} [Yields]
	Function PlatformFriendsService:IsInviteFriendsEnabled() -> boolean {RobloxScriptSecurity}
	Function PlatformFriendsService:IsProfileEnabled() -> boolean {RobloxScriptSecurity}
	Function PlatformFriendsService:ShowInviteFriendsUI() -> () {RobloxScriptSecurity}
	Function PlatformFriendsService:ShowProfile(platformUserId: string) -> () {RobloxScriptSecurity}
Class Player : Instance
	Property Player.CanLoadCharacterAppearance: boolean
	Property Player.GameplayPaused: boolean {✏️NotAccessibleSecurity}
	Property Player.CameraMaxZoomDistance: number
	Property Player.CameraMinZoomDistance: number
	Property Player.CameraMode: Enum.CameraMode
	Property Player.DevCameraOcclusionMode: Enum.DevCameraOcclusionMode
	Property Player.DevComputerCameraMode: Enum.DevComputerCameraMovementMode
	Property Player.DevEnableMouseLock: boolean
	Property Player.DevTouchCameraMode: Enum.DevTouchCameraMovementMode
	Property Player.HealthDisplayDistance: number
	Property Player.NameDisplayDistance: number
	Property Player.DevComputerMovementMode: Enum.DevComputerMovementMode
	Property Player.DevTouchMovementMode: Enum.DevTouchMovementMode
	Property Player.AccountAge: number [ReadOnly]
	Property Player.AccountAgeReplicate: number [Hidden] [NotScriptable]
	Property Player.AppearanceDidLoad: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly] [Deprecated]
	Property Player.AutoJumpEnabled: boolean
	Property Player.Character: Model?
	Property Player.CharacterAppearance: string [NotBrowsable] [Deprecated]
	Property Player.CharacterAppearanceId: number
	Property Player.ChararacterRegionId: Vector3 {RobloxSecurity} [Hidden] [NotScriptable]
	Property Player.ChatMode: Enum.ChatMode {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Player.ChatPrivacyMode: Enum.ChatPrivacyMode {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property Player.CloudEditCameraCoordinateFrame: CFrame [Hidden] [NotScriptable]
	Property Player.CloudEditPlayerActive: boolean [Hidden] [NotScriptable]
	Property Player.CountryRegionCodeReplicate: string [Hidden] [NotScriptable]
	Property Player.DataComplexity: number [Hidden] [ReadOnly] [Deprecated]
	Property Player.DataComplexityLimit: number {LocalUserSecurity} [Hidden] [NotReplicated] [Deprecated]
	Property Player.DataReady: boolean [Hidden] [ReadOnly] [Deprecated]
	Property Player.DisplayName: string
	Property Player.FollowUserId: number [ReadOnly]
	Property Player.FollowUserIdReplicated: number [Hidden] [NotScriptable]
	Property Player.Guest: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Player.HasVerifiedBadge: boolean
	Property Player.InternalCharacterAppearanceLoaded: boolean [Hidden] [NotScriptable]
	Property Player.LocaleId: string [Hidden] [ReadOnly]
	Property Player.MaxSimulationRadius: number {LocalUserSecurity} [Hidden] [NotScriptable]
	Property Player.MaximumSimulationRadius: number {LocalUserSecurity} [Hidden] [NotReplicated]
	Property Player.MembershipType: Enum.MembershipType [ReadOnly]
	Property Player.MembershipTypeReplicate: Enum.MembershipType [Hidden] [NotScriptable]
	Property Player.OsPlatform: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Player.PlatformName: string {RobloxScriptSecurity} [Hidden]
	Property Player.RawJoinData: BinaryString {RobloxSecurity} [Hidden] [NotScriptable]
	Property Player.ReplicationFocus: Instance?
	Property Player.RespawnLocation: SpawnLocation?
	Property Player.SimulationRadius: number {LocalUserSecurity} [Hidden]
	Property Player.SuperSafeChatReplicate: boolean {LocalUserSecurity} [Hidden] [NotScriptable]
	Property Player.Teleported: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Player.TeleportedIn: boolean {RobloxScriptSecurity} [Hidden]
	Property Player.UnfilteredChat: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Player.UserId: number
	Property Player.VRDevice: string {RobloxScriptSecurity} [Hidden]
	Property Player.VREnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Player.Neutral: boolean
	Property Player.Team: Team? [NotReplicated]
	Property Player.TeamColor: BrickColor
	Function Player:AddToBlockList(userIds: { any }) -> () {RobloxScriptSecurity}
	Function Player:ClearCharacterAppearance() -> ()
	Function Player:DistanceFromCharacter(point: Vector3) -> number
	Function Player:GetFriendStatus(player: Player) -> Enum.FriendStatus {RobloxScriptSecurity}
	Function Player:GetFriendsOnline(maxFriends: number? = 200) -> { any } [Yields]
	Function Player:GetGameSessionID() -> string {RobloxSecurity}
	Function Player:GetJoinData() -> { [string]: any } [CustomLuaState]
	Function Player:GetMouse() -> Mouse
	Function Player:GetNetworkPing() -> number {🧬Safe}
	Function Player:GetRankInGroup(groupId: number) -> number [Yields]
	Function Player:GetRoleInGroup(groupId: number) -> string [Yields]
	Function Player:GetUnder13() -> boolean {RobloxScriptSecurity}
	Function Player:HasAppearanceLoaded() -> boolean
	Function Player:IsBestFriendsWith(userId: number) -> boolean [Yields] [Deprecated]
	Function Player:IsFriendsWith(userId: number) -> boolean [Yields]
	Function Player:IsInGroup(groupId: number) -> boolean [Yields]
	Function Player:IsVerified() -> boolean
	Function Player:Kick(message: string? = "") -> ()
	Function Player:LoadBoolean(key: string) -> boolean [Deprecated]
	Function Player:LoadCharacter() -> () [Yields]
	Function Player:LoadCharacterAppearance(assetInstance: Instance) -> () [Deprecated]
	Function Player:LoadCharacterBlocking() -> () {LocalUserSecurity} [Yields]
	Function Player:LoadCharacterWithHumanoidDescription(humanoidDescription: HumanoidDescription) -> () [Yields]
	Function Player:LoadData() -> () {LocalUserSecurity} [Deprecated]
	Function Player:LoadInstance(key: string) -> Instance? [Deprecated]
	Function Player:LoadNumber(key: string) -> number [Deprecated]
	Function Player:LoadString(key: string) -> string [Deprecated]
	Function Player:Move(walkDirection: Vector3, relativeToCamera: boolean? = false) -> ()
	Function Player:RemoveCharacter() -> () {LocalUserSecurity}
	Function Player:RequestFriendship(player: Player) -> () {RobloxScriptSecurity}
	Function Player:RequestStreamAroundAsync(position: Vector3, timeOut: number? = 0) -> () [Yields]
	Function Player:RevokeFriendship(player: Player) -> () {RobloxScriptSecurity}
	Function Player:SaveBoolean(key: string, value: boolean) -> () [Deprecated]
	Function Player:SaveData() -> () {LocalUserSecurity} [Deprecated]
	Function Player:SaveInstance(key: string, value: Instance) -> () [Deprecated]
	Function Player:SaveNumber(key: string, value: number) -> () [Deprecated]
	Function Player:SaveString(key: string, value: string) -> () [Deprecated]
	Function Player:SetAccountAge(accountAge: number) -> () {PluginSecurity}
	Function Player:SetBlockListInitialized() -> () {RobloxScriptSecurity}
	Function Player:SetCharacterAppearanceJson(jsonBlob: string) -> () {RobloxScriptSecurity}
	Function Player:SetChatTranslationSettingsLocaleId(locale: string) -> () {RobloxScriptSecurity}
	Function Player:SetExperienceSettingsLocaleId(locale: string) -> () {RobloxScriptSecurity}
	Function Player:SetMembershipType(membershipType: Enum.MembershipType) -> () {RobloxScriptSecurity}
	Function Player:SetModerationAccessKey(moderationAccessKey: string) -> () {RobloxScriptSecurity}
	Function Player:SetSuperSafeChat(value: boolean) -> () {PluginSecurity}
	Function Player:SetUnder13(value: boolean) -> () {RobloxSecurity} [Deprecated]
	Function Player:UpdatePlayerBlocked(userId: number, blocked: boolean) -> () {RobloxScriptSecurity}
	Function Player:WaitForDataReady() -> boolean [Yields] [Deprecated]
	Event Player.CharacterAdded(character: Model)
	Event Player.CharacterAppearanceLoaded(character: Model)
	Event Player.CharacterRemoving(character: Model)
	Event Player.Chatted(message: string, recipient: Player)
	Event Player.CloudEditSelectionChanged(newSelection: { any }) {RobloxSecurity} [Hidden]
	Event Player.ConnectDiedSignalBackend() {RobloxSecurity} [Hidden]
	Event Player.FriendStatusChanged(player: Player, friendStatus: Enum.FriendStatus) {RobloxScriptSecurity}
	Event Player.Idled(time: number)
	Event Player.Kill() {LocalUserSecurity} [Hidden]
	Event Player.OnTeleport(teleportState: Enum.TeleportState, placeId: number, spawnName: string)
	Event Player.OnTeleportInternal(teleportState: Enum.TeleportState, teleportInfo: { [string]: any }, customLoadingScreen: Instance) {RobloxSecurity} [Hidden]
	Event Player.PlayerCharacterLoaded(metrics: { [string]: any }) {RobloxSecurity} [Hidden]
	Event Player.PlayerChatTranslationSettingsLocaleSetFromLua(newLocaleId: string) {RobloxSecurity} [Hidden]
	Event Player.PlayerExperienceSettingsLocaleSetFromLua(newLocaleId: string) {RobloxSecurity} [Hidden]
	Event Player.RemoteFriendRequestSignal(otherUserId: number, eventType: Enum.FriendRequestEvent) {RobloxScriptSecurity} [Hidden]
	Event Player.RemoteInsert(url: string, position: Vector3) {LocalUserSecurity} [Hidden]
	Event Player.ScopeCheckInitiated(guid: string, serializedScopes: { any }, metadata: { [string]: any }) {RobloxSecurity} [Hidden]
	Event Player.ScriptSecurityError(hash: string, error: string, stack: string) {LocalUserSecurity} [Hidden]
	Event Player.ServerToClientUnfilteredChatReplicate(value: boolean) {RobloxSecurity} [Hidden]
	Event Player.ServerUpdatedHead(assetType: Enum.AssetType, assetId: number) {RobloxSecurity} [Hidden]
	Event Player.SetShutdownMessage(message: string) {RobloxSecurity} [Hidden]
	Event Player.SimulationRadiusChanged(radius: number) {LocalUserSecurity}
	Event Player.StatsAvailable(info: string) {LocalUserSecurity} [Hidden]
Class PlayerEmulatorService : Instance [NotCreatable] [Service] [NotReplicated]
	Property PlayerEmulatorService.CustomPoliciesEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.EmulatedCountryCode: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.EmulatedGameLocale: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.PlayerEmulationEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.PseudolocalizationEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.SerializedEmulatedPolicyInfo: BinaryString {RobloxSecurity} [Hidden] [NotReplicated]
	Property PlayerEmulatorService.TextElongationFactor: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function PlayerEmulatorService:GetEmulatedPolicyInfo() -> { [string]: any } {RobloxScriptSecurity}
	Function PlayerEmulatorService:RegionCodeWillHaveAutomaticNonCustomPolicies(regionCode: string) -> boolean {RobloxScriptSecurity}
	Function PlayerEmulatorService:SetEmulatedPolicyInfo(emulatedPolicyInfo: { [string]: any }) -> () {RobloxScriptSecurity}
Class PlayerHydrationService : Instance [NotCreatable] [Service]
	Event PlayerHydrationService.PlayerHydration(userId: number, playerHydrationBlob: string, playerHydrationSignature: string) {RobloxSecurity} [Hidden]
Class PlayerScripts : Instance [NotCreatable] [NotReplicated]
	Function PlayerScripts:ClearComputerCameraMovementModes() -> ()
	Function PlayerScripts:ClearComputerMovementModes() -> ()
	Function PlayerScripts:ClearTouchCameraMovementModes() -> ()
	Function PlayerScripts:ClearTouchMovementModes() -> ()
	Function PlayerScripts:GetRegisteredComputerCameraMovementModes() -> { any } {RobloxScriptSecurity}
	Function PlayerScripts:GetRegisteredComputerMovementModes() -> { any } {RobloxScriptSecurity}
	Function PlayerScripts:GetRegisteredTouchCameraMovementModes() -> { any } {RobloxScriptSecurity}
	Function PlayerScripts:GetRegisteredTouchMovementModes() -> { any } {RobloxScriptSecurity}
	Function PlayerScripts:RegisterComputerCameraMovementMode(cameraMovementMode: Enum.ComputerCameraMovementMode) -> ()
	Function PlayerScripts:RegisterComputerMovementMode(movementMode: Enum.ComputerMovementMode) -> ()
	Function PlayerScripts:RegisterTouchCameraMovementMode(cameraMovementMode: Enum.TouchCameraMovementMode) -> ()
	Function PlayerScripts:RegisterTouchMovementMode(movementMode: Enum.TouchMovementMode) -> ()
	Event PlayerScripts.ComputerCameraMovementModeRegistered() {RobloxScriptSecurity}
	Event PlayerScripts.ComputerMovementModeRegistered() {RobloxScriptSecurity}
	Event PlayerScripts.TouchCameraMovementModeRegistered() {RobloxScriptSecurity}
	Event PlayerScripts.TouchMovementModeRegistered() {RobloxScriptSecurity}
Class PlayerViewService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PlayerViewService:GetDeviceCameraCFrame(player: Player? = nil) -> CFrame
	Function PlayerViewService:GetDeviceCameraCFrameForSelfView() -> CFrame {RobloxScriptSecurity}
	Function PlayerViewService:OnCameraCFrameReplicationRequest() -> () {RobloxScriptSecurity}
	Function PlayerViewService:UpdateDeviceCFrame(player: Player? = nil, cframe: CFrame? = CFrame?.new(), timestamp: number? = 0) -> () {RobloxScriptSecurity}
Class Players : Instance [NotCreatable] [Service]
	Property Players.CharacterAutoLoads: boolean [NotReplicated]
	Property Players.UseStrafingAnimations: boolean [NotScriptable]
	Property Players.BubbleChat: boolean [ReadOnly]
	Property Players.ClassicChat: boolean [ReadOnly]
	Property Players.LocalPlayer: Player? [ReadOnly]
	Property Players.MaxPlayers: number [ReadOnly]
	Property Players.MaxPlayersInternal: number {LocalUserSecurity} [Hidden]
	Property Players.NumPlayers: number [ReadOnly] [Deprecated]
	Property Players.PreferredPlayers: number [ReadOnly]
	Property Players.PreferredPlayersInternal: number {LocalUserSecurity} [Hidden]
	Property Players.RespawnTime: number
	Property Players.ServerGitHash: string {RobloxSecurity} [Hidden] [NotScriptable]
	Property Players.ServerLogPrefix: string {RobloxSecurity} [Hidden] [NotScriptable]
	Function Players:BanAsync(config: { [string]: any }) -> () [Yields]
	Function Players:Chat(message: string) -> () {PluginSecurity}
	Function Players:CreateHumanoidModelFromDescription(description: HumanoidDescription, rigType: Enum.HumanoidRigType, assetTypeVerification: Enum.AssetTypeVerification? = "Default") -> Model [Yields]
	Function Players:CreateHumanoidModelFromUserId(userId: number) -> Model [Yields]
	Function Players:CreateLocalPlayer() -> Player {LocalUserSecurity}
	Function Players:GetBanHistoryAsync(userId: number) -> BanHistoryPages [Yields]
	Function Players:GetCharacterAppearanceAsync(userId: number) -> Model [Yields] [Deprecated]
	Function Players:GetCharacterAppearanceInfoAsync(userId: number) -> { [string]: any } [Yields]
	Function Players:GetFriendsAsync(userId: number) -> FriendPages [Yields]
	Function Players:GetHumanoidDescriptionFromOutfitId(outfitId: number) -> HumanoidDescription [Yields]
	Function Players:GetHumanoidDescriptionFromUserId(userId: number) -> HumanoidDescription [Yields]
	Function Players:GetNameFromUserIdAsync(userId: number) -> string [Yields]
	Function Players:GetPlayerByUserId(userId: number) -> Player {🧬Safe}
	Function Players:GetPlayerFromCharacter(character: Model) -> Player
	Function Players:GetPlayers() -> { Instance } {🧬Safe}
	Function Players:GetUserIdFromNameAsync(userName: string) -> number [Yields]
	Function Players:GetUserThumbnailAsync(userId: number, thumbnailType: Enum.ThumbnailType, thumbnailSize: Enum.ThumbnailSize) -> ...any [Yields]
	Function Players:ReportAbuse(player: Player, reason: string, optionalMessage: string) -> () {LocalUserSecurity}
	Function Players:ReportAbuseV3(player: Player, jsonTags: string) -> () {RobloxScriptSecurity}
	Function Players:ReportChatAbuse(eligibleChatLines: { any }, targetChatLines: { any }, tags: { [string]: any }) -> () {RobloxScriptSecurity}
	Function Players:ResetLocalPlayer() -> () {LocalUserSecurity}
	Function Players:SetChatStyle(style: Enum.ChatStyle? = "Classic") -> () {PluginSecurity}
	Function Players:SetLocalPlayerInfo(userId: number, userName: string, displayName: string, membershipType: Enum.MembershipType, isUnder13: boolean) -> () {RobloxScriptSecurity}
	Function Players:TeamChat(message: string) -> () {PluginSecurity}
	Function Players:UnbanAsync(config: { [string]: any }) -> () [Yields]
	Function Players:WhisperChat(message: string, player: Instance) -> () {LocalUserSecurity}
	Function Players:playerFromCharacter(character: Model) -> Player [Deprecated]
	Function Players:players() -> { Instance } [Deprecated]
	Event Players.CloudEditApplyEditsMessage(playerName: string, scriptName: string) {RobloxSecurity} [Hidden]
	Event Players.FriendRequestEvent(player: Player, player: Player, friendRequestEvent: Enum.FriendRequestEvent) {RobloxScriptSecurity}
	Event Players.GameAnnounce(message: string) {RobloxScriptSecurity}
	Event Players.PlayerAdded(player: Player)
	Event Players.PlayerChatted(chatType: Enum.PlayerChatType, player: Player, message: string, targetPlayer: Player) {LocalUserSecurity}
	Event Players.PlayerConnecting(player: Player) {LocalUserSecurity}
	Event Players.PlayerDisconnecting(player: Player) {LocalUserSecurity}
	Event Players.PlayerMembershipChanged(player: Player)
	Event Players.PlayerRejoining(player: Player) {LocalUserSecurity}
	Event Players.PlayerRemoving(player: Player)
	Event Players.PromptGameServerReportEnrichment(reportId: string) {RobloxSecurity} [Hidden]
	Event Players.PromptGameServerTargetedChatReportEnrichment(reportId: string, eligibleChatLines: { any }, targetChatLines: { any }) {RobloxSecurity} [Hidden]
	Event Players.PromptReportServerEnrichmentAndScan(v1comment: string, submitterId: number, abuserId: number, reportId: string) {RobloxSecurity} [Hidden]
	Event Players.RequestCloudEditImmediatePublishWithContext(spanContext: string) {RobloxSecurity} [Hidden]
	Event Players.RequestCloudEditKick(playerId: number) {RobloxSecurity} [Hidden]
	Event Players.RequestCloudEditShutdown() {RobloxSecurity} [Hidden]
	Event Players.RequestTeamCreateImmediateSaveWithContext(spanContext: string) {RobloxSecurity} [Hidden]
	Event Players.TeamCreatePublishFinished(publishSuccessful: boolean) {RobloxSecurity} [Hidden]
	Event Players.TeamCreateSaveFinished(saveSuccessful: boolean) {RobloxSecurity} [Hidden]
	Event Players.TeamCreateServerMessage(messageType: Enum.MessageType, message: string, printToStatusBar: boolean) {RobloxSecurity} [Hidden]
	Event Players.UserSubscriptionStatusChanged(user: Player, subscriptionId: string)
Class Plugin : Instance [NotCreatable]
	Property Plugin.UsesAssetInsertionDrag: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Plugin.CollisionEnabled: boolean [ReadOnly]
	Property Plugin.DisableUIDragDetectorDrags: boolean {RobloxScriptSecurity}
	Property Plugin.GridSize: number [ReadOnly]
	Property Plugin.HostDataModelType: Enum.StudioDataModelType {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Plugin.HostDataModelTypeIsCurrent: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Plugin.MultipleDocumentInterfaceInstance: MultipleDocumentInterfaceInstance? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function Plugin:Activate(exclusiveMouse: boolean) -> () {PluginSecurity}
	Function Plugin:CreateDockWidgetPluginGui(pluginGuiId: string, dockWidgetPluginGuiInfo: DockWidgetPluginGuiInfo) -> DockWidgetPluginGui {PluginSecurity} [Yields]
	Function Plugin:CreatePluginAction(actionId: string, text: string, statusTip: string, iconName: string? = "", allowBinding: boolean? = true) -> PluginAction {PluginSecurity}
	Function Plugin:CreatePluginMenu(id: string, title: string? = "", icon: string? = "") -> PluginMenu {PluginSecurity}
	Function Plugin:CreateQWidgetPluginGui(pluginGuiId: string, pluginGuiOptions: { [string]: any }) -> QWidgetPluginGui {RobloxScriptSecurity} [Yields]
	Function Plugin:CreateToolbar(name: string) -> PluginToolbar {PluginSecurity}
	Function Plugin:Deactivate() -> () {PluginSecurity}
	Function Plugin:GetItem(key: string, defaultValue: any) -> any {RobloxScriptSecurity}
	Function Plugin:GetJoinMode() -> Enum.JointCreationMode {PluginSecurity}
	Function Plugin:GetMouse() -> PluginMouse {PluginSecurity}
	Function Plugin:GetPluginComponent(name: string) -> { [string]: any } {RobloxScriptSecurity} [CustomLuaState]
	Function Plugin:GetSelectedRibbonTool() -> Enum.RibbonTool {PluginSecurity}
	Function Plugin:GetSetting(key: string) -> any {PluginSecurity}
	Function Plugin:GetStudioUserId() -> number {PluginSecurity} [Deprecated]
	Function Plugin:GetUri() -> { [string]: any } {RobloxScriptSecurity}
	Function Plugin:ImportFbxAnimation(rigModel: Instance, isR15: boolean? = true) -> Instance? {PluginSecurity} [Yields]
	Function Plugin:ImportFbxRig(isR15: boolean? = true) -> Instance? {PluginSecurity} [Yields]
	Function Plugin:Intersect(objects: { Instance }) -> Instance? {PluginSecurity}
	Function Plugin:Invoke(key: string, arguments: ...any) -> () {RobloxScriptSecurity}
	Function Plugin:IsActivated() -> boolean {PluginSecurity}
	Function Plugin:IsActivatedWithExclusiveMouse() -> boolean {PluginSecurity}
	Function Plugin:Negate(objects: { Instance }) -> { Instance } {PluginSecurity}
	Function Plugin:OnInvoke(key: string, callback: (...any) -> ...any) -> Instance? {RobloxScriptSecurity}
	Function Plugin:OnSetItem(key: string, callback: (...any) -> ...any) -> Instance? {RobloxScriptSecurity}
	Function Plugin:OpenScript(script: LuaSourceContainer, lineNumber: number? = 1) -> () {PluginSecurity}
	Function Plugin:OpenWikiPage(url: string) -> () {PluginSecurity}
	Function Plugin:PauseSound(sound: Instance) -> () {RobloxScriptSecurity}
	Function Plugin:PlaySound(sound: Instance, normalizedTimePosition: number? = 0) -> () {RobloxScriptSecurity}
	Function Plugin:PromptForExistingAssetId(assetType: string) -> number {PluginSecurity} [Yields]
	Function Plugin:PromptSaveSelection(suggestedFileName: string? = "") -> boolean {PluginSecurity} [Yields]
	Function Plugin:ResumeSound(sound: Instance) -> () {RobloxScriptSecurity}
	Function Plugin:SaveSelectedToRoblox() -> () {PluginSecurity}
	Function Plugin:SelectRibbonTool(tool: Enum.RibbonTool, position: UDim2) -> () {PluginSecurity}
	Function Plugin:Separate(objects: { Instance }) -> { Instance } {PluginSecurity}
	Function Plugin:SetItem(key: string, value: any) -> () {RobloxScriptSecurity}
	Function Plugin:SetReady() -> () {RobloxScriptSecurity}
	Function Plugin:SetSetting(key: string, value: any) -> () {PluginSecurity}
	Function Plugin:StartDecalDrag(decal: Instance) -> () {RobloxScriptSecurity}
	Function Plugin:StartDrag(dragData: { [string]: any }) -> () {PluginSecurity}
	Function Plugin:StopAllSounds() -> () {RobloxScriptSecurity}
	Function Plugin:Union(objects: { Instance }) -> Instance? {PluginSecurity}
	Event Plugin.Deactivation() {PluginSecurity}
	Event Plugin.Ready() {RobloxScriptSecurity}
	Event Plugin.Unloading() {PluginSecurity}
	Callback Plugin.ProcessAssetInsertionDrag(assetId: string, assetTypeId: number, instances: { Instance }) -> { Instance } {RobloxScriptSecurity} [NoYield]
	Callback Plugin.ProcessAssetInsertionDrop() -> () {RobloxScriptSecurity} [NoYield]
Class PluginAction : Instance [NotReplicated]
	Property PluginAction.ActionId: string [ReadOnly]
	Property PluginAction.AllowBinding: boolean [ReadOnly]
	Property PluginAction.Checked: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PluginAction.DefaultShortcut: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PluginAction.Enabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property PluginAction.StatusTip: string [ReadOnly]
	Property PluginAction.Text: string [ReadOnly]
	Event PluginAction.Triggered() {PluginSecurity}
Class PluginCapabilities : Instance
	Property PluginCapabilities.Manifest: string {RobloxScriptSecurity}
Class PluginDebugService : Instance [NotCreatable] [Service] [NotReplicated]
Class PluginDragEvent : Instance [NotCreatable] [NotReplicated]
	Property PluginDragEvent.Data: string [ReadOnly]
	Property PluginDragEvent.MimeType: string [ReadOnly]
	Property PluginDragEvent.Position: Vector2 [ReadOnly]
	Property PluginDragEvent.Sender: string [ReadOnly]
Class PluginGuiService : Instance [NotCreatable] [Service] [NotReplicated]
Class PluginManagementService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PluginManagementService:GetOTAPluginVersion(pluginName: string? = "") -> number {RobloxScriptSecurity} [Yields]
	Function PluginManagementService:SetAutoUpdate(pluginId: number, state: boolean) -> () {RobloxScriptSecurity}
Class PluginManager : Instance [NotCreatable]
	Function PluginManager:CreatePlugin() -> Instance? {PluginSecurity} [Deprecated] [CustomLuaState]
	Function PluginManager:ExportPlace(filePath: string? = "") -> () {PluginSecurity}
	Function PluginManager:ExportSelection(filePath: string? = "") -> () {PluginSecurity}
Class PluginManagerInterface : Instance [NotCreatable] [NotReplicated]
	Function PluginManagerInterface:CreatePlugin() -> Instance? {PluginSecurity} [Deprecated] [CustomLuaState]
	Function PluginManagerInterface:ExportPlace(filePath: string? = "") -> () {PluginSecurity}
	Function PluginManagerInterface:ExportSelection(filePath: string? = "") -> () {PluginSecurity}
Class PluginMenu : Instance [NotCreatable] [NotReplicated]
	Property PluginMenu.Icon: string [📁 LoadOnly] [NotReplicated]
	Property PluginMenu.Title: string [📁 LoadOnly] [NotReplicated]
	Function PluginMenu:AddAction(action: Instance) -> () {PluginSecurity}
	Function PluginMenu:AddMenu(menu: Instance) -> () {PluginSecurity}
	Function PluginMenu:AddNewAction(actionId: string, text: string, icon: string? = "") -> Instance? {PluginSecurity}
	Function PluginMenu:AddSeparator() -> () {PluginSecurity}
	Function PluginMenu:Clear() -> () {PluginSecurity}
	Function PluginMenu:ShowAsync() -> Instance? {PluginSecurity} [Yields]
Class PluginPolicyService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PluginPolicyService:GetPluginPolicy(pluginName: string) -> { [string]: any } {RobloxScriptSecurity}
Class PluginToolbar : Instance [NotCreatable]
	Function PluginToolbar:CreateButton(buttonId: string, tooltip: string, iconname: string, text: string? = "") -> PluginToolbarButton {PluginSecurity}
	Function PluginToolbar:CreatePopupButton(buttonId: string, tooltip: string, iconname: string, text: string? = "") -> PluginToolbarButton {RobloxScriptSecurity}
Class PluginToolbarButton : Instance [NotCreatable]
	Property PluginToolbarButton.ClickableWhenViewportHidden: boolean [📁 LoadOnly] [NotReplicated]
	Property PluginToolbarButton.Enabled: boolean [📁 LoadOnly] [NotReplicated]
	Property PluginToolbarButton.Icon: ContentId [📁 LoadOnly] [NotReplicated]
	Function PluginToolbarButton:SetActive(active: boolean) -> () {PluginSecurity}
	Function PluginToolbarButton:SetDropdownActive(active: boolean) -> () {RobloxScriptSecurity}
	Event PluginToolbarButton.Click() {PluginSecurity}
	Event PluginToolbarButton.DropdownClick() {RobloxScriptSecurity}
Class PointsService : Instance [NotCreatable] [Service] [Deprecated]
	Function PointsService:AwardPoints(userId: number, amount: number) -> ...any [Yields] [Deprecated] [Deprecated]
	Function PointsService:GetAwardablePoints() -> number [Deprecated] [Deprecated]
	Function PointsService:GetGamePointBalance(userId: number) -> number [Yields] [Deprecated] [Deprecated]
	Function PointsService:GetPointBalance(userId: number) -> number [Yields] [Deprecated] [Deprecated]
	Event PointsService.PointsAwarded(userId: number, pointsAwarded: number, userBalanceInGame: number, userTotalBalance: number) [Deprecated]
Class PolicyService : Instance [NotCreatable] [Service] [NotReplicated]
	Property PolicyService.IsLuobuServer: Enum.TriStateBoolean {RobloxScriptSecurity} [Hidden]
	Property PolicyService.LuobuWhitelisted: Enum.TriStateBoolean {RobloxScriptSecurity} [Hidden]
	Function PolicyService:GetPolicyInfoForPlayerAsync(player: Instance) -> { [string]: any } [Yields]
	Function PolicyService:GetPolicyInfoForServerRobloxOnlyAsync() -> { [string]: any } {RobloxScriptSecurity} [Yields]
Class PoseBase : Instance [NotCreatable]
	Property PoseBase.EasingDirection: Enum.PoseEasingDirection
	Property PoseBase.EasingStyle: Enum.PoseEasingStyle
	Property PoseBase.Weight: number
Class NumberPose : PoseBase
	Property NumberPose.Value: number
Class Pose : PoseBase
	Property Pose.CFrame: CFrame
	Property Pose.MaskWeight: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Function Pose:AddSubPose(pose: Instance) -> ()
	Function Pose:GetSubPoses() -> { Instance }
	Function Pose:RemoveSubPose(pose: Instance) -> ()
Class PostEffect : Instance [NotCreatable]
	Property PostEffect.Enabled: boolean
Class BloomEffect : PostEffect
	Property BloomEffect.Intensity: number
	Property BloomEffect.Size: number
	Property BloomEffect.Threshold: number
Class BlurEffect : PostEffect
	Property BlurEffect.Size: number
Class ColorCorrectionEffect : PostEffect
	Property ColorCorrectionEffect.Brightness: number
	Property ColorCorrectionEffect.Contrast: number
	Property ColorCorrectionEffect.Saturation: number
	Property ColorCorrectionEffect.TintColor: Color3
Class ColorGradingEffect : PostEffect
	Property ColorGradingEffect.TonemapperPreset: Enum.TonemapperPreset
Class DepthOfFieldEffect : PostEffect
	Property DepthOfFieldEffect.FarIntensity: number
	Property DepthOfFieldEffect.FocusDistance: number
	Property DepthOfFieldEffect.InFocusRadius: number
	Property DepthOfFieldEffect.NearIntensity: number
Class SunRaysEffect : PostEffect
	Property SunRaysEffect.Intensity: number
	Property SunRaysEffect.Spread: number
Class ProcessInstancePhysicsService : Instance [NotCreatable] [Service]
Class ProximityPrompt : Instance
	Property ProximityPrompt.ActionText: string
	Property ProximityPrompt.ClickablePrompt: boolean
	Property ProximityPrompt.Enabled: boolean
	Property ProximityPrompt.Exclusivity: Enum.ProximityPromptExclusivity
	Property ProximityPrompt.GamepadKeyCode: Enum.KeyCode
	Property ProximityPrompt.HoldDuration: number
	Property ProximityPrompt.KeyboardKeyCode: Enum.KeyCode
	Property ProximityPrompt.MaxActivationDistance: number
	Property ProximityPrompt.ObjectText: string
	Property ProximityPrompt.RequiresLineOfSight: boolean
	Property ProximityPrompt.Style: Enum.ProximityPromptStyle
	Property ProximityPrompt.UIOffset: Vector2
	Property ProximityPrompt.AutoLocalize: boolean
	Property ProximityPrompt.RootLocalizationTable: LocalizationTable?
	Function ProximityPrompt:InputHoldBegin() -> ()
	Function ProximityPrompt:InputHoldEnd() -> ()
	Event ProximityPrompt.ButtonHoldBeganActionReplicated(player: Player) {RobloxSecurity} [Hidden]
	Event ProximityPrompt.ButtonHoldEndedActionReplicated(player: Player) {RobloxSecurity} [Hidden]
	Event ProximityPrompt.PromptButtonHoldBegan(playerWhoTriggered: Player)
	Event ProximityPrompt.PromptButtonHoldEnded(playerWhoTriggered: Player)
	Event ProximityPrompt.PromptHidden()
	Event ProximityPrompt.PromptShown(inputType: Enum.ProximityPromptInputType)
	Event ProximityPrompt.TriggerEnded(playerWhoTriggered: Player)
	Event ProximityPrompt.TriggerEndedActionReplicated(player: Player) {RobloxSecurity} [Hidden]
	Event ProximityPrompt.Triggered(playerWhoTriggered: Player)
	Event ProximityPrompt.TriggeredActionReplicated(player: Instance) {RobloxSecurity} [Hidden]
Class ProximityPromptService : Instance [Service] [NotBrowsable]
	Property ProximityPromptService.Enabled: boolean
	Property ProximityPromptService.MaxPromptsVisible: number
	Event ProximityPromptService.PromptButtonHoldBegan(prompt: ProximityPrompt, playerWhoTriggered: Player)
	Event ProximityPromptService.PromptButtonHoldEnded(prompt: ProximityPrompt, playerWhoTriggered: Player)
	Event ProximityPromptService.PromptHidden(prompt: ProximityPrompt)
	Event ProximityPromptService.PromptShown(prompt: ProximityPrompt, inputType: Enum.ProximityPromptInputType)
	Event ProximityPromptService.PromptTriggerEnded(prompt: ProximityPrompt, playerWhoTriggered: Player)
	Event ProximityPromptService.PromptTriggered(prompt: ProximityPrompt, playerWhoTriggered: Player)
Class PublishService : Instance [NotCreatable] [Service] [NotReplicated]
	Function PublishService:CreateAssetAndWaitForAssetId(instances: { Instance }, operationId: string, creatorType: Enum.AssetCreatorType, creatorId: number, assetType: string, name: string, description: string, expectedPrice: number? = 0) -> number {RobloxScriptSecurity} [Yields]
	Function PublishService:CreateAssetOrAssetVersionAndPollAssetWithTelemetryAsync(serializedInstance: string, creatorType: Enum.AssetCreatorType, creatorId: number, assetType: string, assetId: number, name: string, description: string, token: string, contentType: string, expectedPrice: number? = 0) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function PublishService:CreateAssetOrAssetVersionAndPollAssetWithTelemetryAsyncWithAddParam(serializedInstance: string, publishInfo: { [string]: any }) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function PublishService:PublishCageMeshAsync(wrap: Instance, cageType: Enum.CageType) -> ContentId {RobloxScriptSecurity} [Yields]
	Function PublishService:PublishDescendantAssets(instance: Instance) -> boolean {RobloxScriptSecurity}
Class RTAnimationTracker : Instance [NotReplicated]
	Property RTAnimationTracker.Active: boolean [Hidden] [NotReplicated]
	Property RTAnimationTracker.EnableFallbackAudioInput: boolean [Hidden] [NotReplicated]
	Property RTAnimationTracker.SessionName: string [Hidden] [NotReplicated]
	Property RTAnimationTracker.TrackerMode: Enum.TrackerMode [Hidden] [ReadOnly]
	Property RTAnimationTracker.TrackerType: Enum.TrackerType [Hidden] [NotReplicated]
	Function RTAnimationTracker:Step() -> () {RobloxScriptSecurity}
	Event RTAnimationTracker.TrackerError(errorCode: Enum.TrackerError, msg: string)
	Event RTAnimationTracker.TrackerPrompt(prompt: Enum.TrackerPromptEvent)
Class RbxAnalyticsService : Instance [NotCreatable] [Service]
	Function RbxAnalyticsService:AddGlobalPointsField(key: string, value: number) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:AddGlobalPointsTag(key: string, value: string) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:DEPRECATED_TrackEvent(category: string, action: string, label: string, value: number? = 0) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:DEPRECATED_TrackEventWithArgs(category: string, action: string, label: string, args: { [string]: any }, value: number? = 0) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:GetClientId() -> string {RobloxScriptSecurity}
	Function RbxAnalyticsService:GetPlaySessionId() -> string {RobloxScriptSecurity}
	Function RbxAnalyticsService:GetSessionId() -> string {RobloxScriptSecurity}
	Function RbxAnalyticsService:ReleaseRBXEventStream(target: string) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:RemoveGlobalPointsField(key: string) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:RemoveGlobalPointsTag(key: string) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:ReportCounter(counterName: string, amount: number? = 1) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:ReportInfluxSeries(seriesName: string, points: { [string]: any }, throttlingPercentage: number) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:ReportStats(category: string, value: number) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:ReportToDiagByCountryCode(featureName: string, measureName: string, seconds: number) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:SendEventDeferred(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:SendEventImmediately(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:SetRBXEvent(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:SetRBXEventStream(target: string, eventContext: string, eventName: string, additionalArgs: { [string]: any }) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:TrackEvent(category: string, action: string, label: string, value: number? = 0) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:TrackEventWithArgs(category: string, action: string, label: string, args: { [string]: any }, value: number? = 0) -> () {RobloxScriptSecurity}
	Function RbxAnalyticsService:UpdateHeartbeatObject(args: { [string]: any }) -> () {RobloxScriptSecurity}
Class ReflectionMetadata : Instance
Class ReflectionMetadataCallbacks : Instance
Class ReflectionMetadataClasses : Instance
Class ReflectionMetadataEnums : Instance
Class ReflectionMetadataEvents : Instance
Class ReflectionMetadataFunctions : Instance
Class ReflectionMetadataItem : Instance [NotCreatable]
	Property ReflectionMetadataItem.Browsable: boolean
	Property ReflectionMetadataItem.ClassCategory: string
	Property ReflectionMetadataItem.ClientOnly: boolean
	Property ReflectionMetadataItem.Constraint: string
	Property ReflectionMetadataItem.Deprecated: boolean
	Property ReflectionMetadataItem.EditingDisabled: boolean
	Property ReflectionMetadataItem.EditorType: string
	Property ReflectionMetadataItem.FFlag: string
	Property ReflectionMetadataItem.IsBackend: boolean
	Property ReflectionMetadataItem.PropertyOrder: number
	Property ReflectionMetadataItem.ScriptContext: string
	Property ReflectionMetadataItem.ServerOnly: boolean
	Property ReflectionMetadataItem.SliderScaling: string
	Property ReflectionMetadataItem.UIMaximum: number
	Property ReflectionMetadataItem.UIMinimum: number
	Property ReflectionMetadataItem.UINumTicks: number
Class ReflectionMetadataClass : ReflectionMetadataItem
	Property ReflectionMetadataClass.ExplorerImageIndex: number
	Property ReflectionMetadataClass.ExplorerOrder: number
	Property ReflectionMetadataClass.Insertable: boolean
	Property ReflectionMetadataClass.PreferredParent: string
	Property ReflectionMetadataClass.ServiceVisibility: Enum.ServiceVisibility {RobloxSecurity} [Hidden] [NotReplicated]
Class ReflectionMetadataEnum : ReflectionMetadataItem
Class ReflectionMetadataEnumItem : ReflectionMetadataItem
Class ReflectionMetadataMember : ReflectionMetadataItem
Class ReflectionMetadataProperties : Instance
Class ReflectionMetadataYieldFunctions : Instance
Class ReflectionService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ReflectionService:GetPropertyNames(name: string) -> { any } {RobloxScriptSecurity}
Class RemoteCursorService : Instance [NotCreatable] [Service]
	Event RemoteCursorService.BroadcastRemoteCursorPositions(script: string, remoteCursorPosition: string) {RobloxSecurity} [Hidden]
	Event RemoteCursorService.RequestAllRemoteCursorPositionForScript(script: string) {RobloxSecurity} [Hidden]
	Event RemoteCursorService.UpdateClientRemoteCursorPosition(script: string, remoteCursorPosition: string) {RobloxSecurity} [Hidden]
Class RemoteDebuggerServer : Instance [NotCreatable] [Service] [NotReplicated]
Class RemoteFunction : Instance
	Function RemoteFunction:InvokeClient(player: Player, arguments: ...any) -> ...any [Yields]
	Function RemoteFunction:InvokeServer(arguments: ...any) -> ...any [Yields]
	Event RemoteFunction.RemoteOnInvokeClient(id: number, arguments: ...any) [Hidden]
	Event RemoteFunction.RemoteOnInvokeError(id: number, arguments: string) [Hidden]
	Event RemoteFunction.RemoteOnInvokeServer(id: number, player: Player, arguments: ...any) [Hidden]
	Event RemoteFunction.RemoteOnInvokeSuccess(id: number, arguments: ...any) [Hidden]
	Callback RemoteFunction.OnClientInvoke(arguments: ...any) -> ...any
	Callback RemoteFunction.OnServerInvoke(player: Player, arguments: ...any) -> ...any
Class RenderSettings : Instance [NotCreatable] [Service] [NotBrowsable]
	Property RenderSettings.MeshCacheSize: number
	Property RenderSettings.AutoFRMLevel: number
	Property RenderSettings.EnableFRM: boolean [📁 LoadOnly] [Hidden] [NotReplicated]
	Property RenderSettings.MeshPartDetailLevel: Enum.MeshPartDetailLevel
	Property RenderSettings.ReloadAssets: boolean
	Property RenderSettings.RenderCSGTrianglesDebug: boolean
	Property RenderSettings.ShowBoundingBoxes: boolean
	Property RenderSettings.ViewMode: Enum.ViewMode
	Property RenderSettings.Enable VR Mode: boolean
	Property RenderSettings.ExportMergeByMaterial: boolean
	Property RenderSettings.FrameRateManager: Enum.FramerateManagerMode
	Property RenderSettings.GraphicsMode: Enum.GraphicsMode
	Property RenderSettings.EagerBulkExecution: boolean
	Property RenderSettings.EditQualityLevel: Enum.QualityLevel
	Property RenderSettings.QualityLevel: Enum.QualityLevel
	Function RenderSettings:GetMaxQualityLevel() -> number
Class RenderingTest : Instance
	Property RenderingTest.CFrame: CFrame
	Property RenderingTest.ComparisonDiffThreshold: number
	Property RenderingTest.ComparisonMethod: Enum.RenderingTestComparisonMethod
	Property RenderingTest.ComparisonPsnrThreshold: number
	Property RenderingTest.Description: string
	Property RenderingTest.FieldOfView: number
	Property RenderingTest.Orientation: Vector3 [Hidden] [NotReplicated]
	Property RenderingTest.PerfTest: boolean
	Property RenderingTest.Position: Vector3 [Hidden] [NotReplicated]
	Property RenderingTest.QualityAuto: boolean
	Property RenderingTest.QualityLevel: number
	Property RenderingTest.RenderingTestFrameCount: number
	Property RenderingTest.ShouldSkip: boolean
	Property RenderingTest.Ticket: string
	Property RenderingTest.Timeout: number
	Function RenderingTest:RenderdocTriggerCapture() -> ()
Class ReplicatedFirst : Instance [NotCreatable] [Service]
	Function ReplicatedFirst:IsDefaultLoadingGuiRemoved() -> boolean {RobloxScriptSecurity}
	Function ReplicatedFirst:IsFinishedReplicating() -> boolean {RobloxScriptSecurity}
	Function ReplicatedFirst:RemoveDefaultLoadingScreen() -> ()
	Function ReplicatedFirst:SetDefaultLoadingGuiRemoved() -> () {RobloxScriptSecurity}
	Event ReplicatedFirst.DefaultLoadingGuiRemoved() {RobloxScriptSecurity}
	Event ReplicatedFirst.FinishedReplicating() {RobloxScriptSecurity}
	Event ReplicatedFirst.RemoveDefaultLoadingGuiSignal() {RobloxScriptSecurity}
Class ReplicatedStorage : Instance [NotCreatable] [Service]
Class RibbonNotificationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function RibbonNotificationService:OnNotificationUpdateFromPlugin(newNotificationId: string, seenNotificationId: string) -> () {RobloxScriptSecurity}
	Event RibbonNotificationService.AllNotificationsReadFromRibbon() {RobloxScriptSecurity}
	Event RibbonNotificationService.NewNotificationFromRibbon(newNotificationId: string) {RobloxScriptSecurity}
	Event RibbonNotificationService.NotificationReadFromRibbon(newNotificationId: string) {RobloxScriptSecurity}
	Event RibbonNotificationService.ToggleNotificationTray(checked: boolean, newNotificationAvailable: boolean) {RobloxScriptSecurity}
Class RobloxPluginGuiService : Instance [NotCreatable] [Service] [NotReplicated]
Class RobloxReplicatedStorage : Instance [NotCreatable] [Service] [NotBrowsable]
Class RobloxServerStorage : Instance [NotCreatable] [Service] [NotReplicated]
Class RomarkService : Instance [NotCreatable] [Service]
	Function RomarkService:EndRemoteRomarkTest() -> ()
	Event RomarkService.RomarkEndOfTest() {RobloxScriptSecurity} [Hidden]
Class RotationCurve : Instance
	Property RotationCurve.Length: number [ReadOnly]
	Property RotationCurve.ValuesAndTimes: BinaryString [Hidden] [NotScriptable]
	Function RotationCurve:GetKeyAtIndex(index: number) -> RotationCurveKey
	Function RotationCurve:GetKeyIndicesAtTime(time: number) -> { any }
	Function RotationCurve:GetKeys() -> { any }
	Function RotationCurve:GetValueAtTime(time: number) -> CFrame?
	Function RotationCurve:InsertKey(key: RotationCurveKey) -> { any }
	Function RotationCurve:RemoveKeyAtIndex(startingIndex: number, count: number? = 1) -> number
	Function RotationCurve:SetKeys(keys: { any }) -> number
Class RtMessagingService : Instance [NotCreatable] [Service] [NotReplicated]
Class RunService : Instance [NotCreatable] [Service] [NotReplicated]
	Property RunService.ClientGitHash: string {RobloxScriptSecurity} [ReadOnly]
	Property RunService.RunState: Enum.RunState {PluginSecurity} [NotReplicated]
	Function RunService:BindToRenderStep(name: string, priority: number, function: (...any) -> ...any) -> ()
	Function RunService:GetCoreScriptVersion() -> string {RobloxScriptSecurity}
	Function RunService:GetRobloxClientChannel() -> string {RobloxScriptSecurity}
	Function RunService:GetRobloxGuiFocused() -> boolean {RobloxScriptSecurity}
	Function RunService:GetRobloxVersion() -> string {RobloxScriptSecurity}
	Function RunService:IsClient() -> boolean {🧬Safe}
	Function RunService:IsEdit() -> boolean {PluginSecurity} {🧬Safe}
	Function RunService:IsRunMode() -> boolean {🧬Safe}
	Function RunService:IsRunning() -> boolean
	Function RunService:IsServer() -> boolean {🧬Safe}
	Function RunService:IsStudio() -> boolean {🧬Safe}
	Function RunService:Pause() -> () {PluginSecurity}
	Function RunService:Reset() -> () {PluginSecurity} [Deprecated]
	Function RunService:Run() -> () {PluginSecurity}
	Function RunService:Set3dRenderingEnabled(enable: boolean) -> () {RobloxScriptSecurity}
	Function RunService:SetRobloxGuiFocused(focus: boolean) -> () {RobloxScriptSecurity}
	Function RunService:Stop() -> () {PluginSecurity}
	Function RunService:UnbindFromRenderStep(name: string) -> ()
	Function RunService:setThrottleFramerateEnabled(enable: boolean) -> () {RobloxScriptSecurity}
	Event RunService.Heartbeat(deltaTime: number)
	Event RunService.PostSimulation(deltaTimeSim: number)
	Event RunService.PreAnimation(deltaTimeSim: number)
	Event RunService.PreRender(deltaTimeRender: number)
	Event RunService.PreSimulation(deltaTimeSim: number)
	Event RunService.RenderStepped(deltaTime: number)
	Event RunService.RobloxGuiFocusedChanged(isRobloxGuiFocused: boolean) {RobloxScriptSecurity}
	Event RunService.Stepped(time: number, deltaTime: number)
Class RuntimeScriptService : Instance [NotCreatable] [Service] [NotReplicated]
Class SafetyService : Instance [NotCreatable] [Service]
	Property SafetyService.IsCaptureModeForReport: boolean {RobloxScriptSecurity}
	Function SafetyService:TakeScreenshot(screenshotOptions: { [string]: any }) -> number {RobloxScriptSecurity}
	Event SafetyService.FSTriggeredSignal(requestId: string, playerId: number, mac: string, args: ...any) {RobloxSecurity} [Hidden]
	Event SafetyService.ScreenshotContentReady(screenshotJobId: number, contentId: ContentId) {RobloxScriptSecurity}
	Event SafetyService.ScreenshotUploaded(screenshotJobId: number, screenshotId: string) {RobloxScriptSecurity}
Class ScreenshotHud : Instance [NotCreatable] [NotReplicated]
	Property ScreenshotHud.CameraButtonIcon: ContentId
	Property ScreenshotHud.CameraButtonPosition: UDim2
	Property ScreenshotHud.CloseButtonPosition: UDim2
	Property ScreenshotHud.ExperienceNameOverlayEnabled: boolean [Hidden] [Deprecated]
	Property ScreenshotHud.OverlayFont: Enum.Font [Hidden] [Deprecated]
	Property ScreenshotHud.UsernameOverlayEnabled: boolean [Hidden] [Deprecated]
	Property ScreenshotHud.CloseWhenScreenshotTaken: boolean
	Property ScreenshotHud.HideCoreGuiForCaptures: boolean
	Property ScreenshotHud.HidePlayerGuiForCaptures: boolean
	Property ScreenshotHud.Visible: boolean
Class ScriptBuilder : Instance [NotCreatable] [NotReplicated]
Class SyncScriptBuilder : ScriptBuilder [NotCreatable] [NotReplicated]
	Property SyncScriptBuilder.CompileTarget: Enum.CompileTarget
	Property SyncScriptBuilder.CoverageInfo: boolean
	Property SyncScriptBuilder.DebugInfo: boolean
	Property SyncScriptBuilder.PackAsSource: boolean
	Property SyncScriptBuilder.RawBytecode: boolean [Deprecated]
Class ScriptChangeService : Instance [NotCreatable] [Service] [NotReplicated]
	Event ScriptChangeService.ScriptAdded(script: LuaSourceContainer) {RobloxScriptSecurity}
	Event ScriptChangeService.ScriptBeingRemoved(script: LuaSourceContainer) {RobloxScriptSecurity}
	Event ScriptChangeService.ScriptChanged(script: LuaSourceContainer, property: string) {RobloxScriptSecurity}
	Event ScriptChangeService.ScriptFullNameChanged(script: LuaSourceContainer) {RobloxScriptSecurity}
	Event ScriptChangeService.ScriptSourceChanged(script: LuaSourceContainer) {RobloxScriptSecurity}
Class ScriptCloneWatcher : Instance [NotCreatable] [Service] [NotReplicated]
Class ScriptCloneWatcherHelper : Instance [NotCreatable] [Service] [NotReplicated]
Class ScriptCommitService : Instance [NotCreatable] [Service] [NotReplicated]
Class ScriptContext : Instance [NotCreatable] [Service] [NotReplicated]
	Property ScriptContext.ScriptsDisabled: boolean {LocalUserSecurity} [Hidden]
	Function ScriptContext:AddCoreScriptLocal(name: string, parent: Instance) -> () {RobloxScriptSecurity}
	Function ScriptContext:ClearScriptProfilingData() -> () {RobloxScriptSecurity}
	Function ScriptContext:DeserializeScriptProfilerString(jsonString: string?) -> { [string]: any } {RobloxScriptSecurity} [CustomLuaState]
	Function ScriptContext:GetCoverageStats() -> { any } {RobloxScriptSecurity}
	Function ScriptContext:GetLuauHeapInstanceReferenceReport(target: string) -> { [string]: any } {RobloxScriptSecurity} [CustomLuaState]
	Function ScriptContext:GetLuauHeapMemoryReport(target: string) -> { [string]: any } {RobloxScriptSecurity} [CustomLuaState]
	Function ScriptContext:GetScriptProfilingData() -> string {RobloxScriptSecurity}
	Function ScriptContext:ReportLuaRequireCount() -> () {RobloxScriptSecurity}
	Function ScriptContext:SaveScriptProfilingData(jsonString: string, filename: string) -> string {RobloxScriptSecurity}
	Function ScriptContext:SetTimeout(seconds: number) -> () {PluginSecurity}
	Function ScriptContext:StartScriptProfiling(frequency: number?) -> () {RobloxScriptSecurity}
	Function ScriptContext:StopScriptProfiling() -> string {RobloxScriptSecurity}
	Event ScriptContext.Error(message: string, stackTrace: string, script: Instance)
	Event ScriptContext.ErrorDetailed(message: string, stackTrace: string, script: Instance, details: string, securityLevel: number) {RobloxScriptSecurity}
Class ScriptDebugger : Instance [NotCreatable]
	Property ScriptDebugger.CoreScriptIdentifier: string [Hidden] [NotScriptable]
	Property ScriptDebugger.CurrentLine: number [ReadOnly]
	Property ScriptDebugger.IsDebugging: boolean [ReadOnly]
	Property ScriptDebugger.IsPaused: boolean [ReadOnly]
	Property ScriptDebugger.Script: Instance? [ReadOnly]
	Property ScriptDebugger.ScriptGuid: string [Hidden] [NotScriptable]
	Function ScriptDebugger:AddWatch(expression: string) -> Instance?
	Function ScriptDebugger:GetBreakpoints() -> { Instance }
	Function ScriptDebugger:GetGlobals(stackFrame: number? = 0) -> { [string]: any }
	Function ScriptDebugger:GetLocals(stackFrame: number? = 0) -> { [string]: any }
	Function ScriptDebugger:GetStack() -> { any }
	Function ScriptDebugger:GetUpvalues(stackFrame: number? = 0) -> { [string]: any }
	Function ScriptDebugger:GetWatchValue(watch: Instance) -> any
	Function ScriptDebugger:GetWatches() -> { Instance }
	Function ScriptDebugger:SetBreakpoint(line: number, isContextDependentBreakpoint: boolean) -> Instance?
	Function ScriptDebugger:SetGlobal(name: string, value: any, stackFrame: number) -> ()
	Function ScriptDebugger:SetLocal(name: string, value: any, stackFrame: number? = 0) -> ()
	Function ScriptDebugger:SetUpvalue(name: string, value: any, stackFrame: number? = 0) -> ()
	Event ScriptDebugger.BreakpointAdded(breakpoint: Instance)
	Event ScriptDebugger.BreakpointRemoved(breakpoint: Instance)
	Event ScriptDebugger.EncounteredBreak(line: number, breakReason: Enum.BreakReason)
	Event ScriptDebugger.Resuming()
	Event ScriptDebugger.WatchAdded(watch: Instance)
	Event ScriptDebugger.WatchRemoved(watch: Instance)
Class ScriptDocument : Instance [NotCreatable] [NotReplicated]
	Function ScriptDocument:CloseAsync() -> ...any {PluginSecurity} [Yields]
	Function ScriptDocument:EditTextAsync(newText: string, startLine: number, startCharacter: number, endLine: number, endCharacter: number) -> ...any {PluginSecurity} [Yields]
	Function ScriptDocument:ForceSetSelectionAsync(cursorLine: number, cursorCharacter: number, anchorLine: number? = nil, anchorCharacter: number? = nil) -> ...any {PluginSecurity} [Yields]
	Function ScriptDocument:GetInternalUri() -> string {RobloxScriptSecurity}
	Function ScriptDocument:GetLine(lineIndex: number? = nil) -> string {PluginSecurity}
	Function ScriptDocument:GetLineCount() -> number {PluginSecurity}
	Function ScriptDocument:GetScript() -> LuaSourceContainer {PluginSecurity}
	Function ScriptDocument:GetSelectedText() -> string {PluginSecurity}
	Function ScriptDocument:GetSelection() -> ...any {PluginSecurity}
	Function ScriptDocument:GetSelectionEnd() -> ...any {PluginSecurity}
	Function ScriptDocument:GetSelectionStart() -> ...any {PluginSecurity}
	Function ScriptDocument:GetText(startLine: number? = nil, startCharacter: number? = nil, endLine: number? = nil, endCharacter: number? = nil) -> string {PluginSecurity}
	Function ScriptDocument:GetViewport() -> ...any {PluginSecurity}
	Function ScriptDocument:HasSelectedText() -> boolean {PluginSecurity}
	Function ScriptDocument:IsCommandBar() -> boolean {PluginSecurity}
	Function ScriptDocument:RequestSetSelectionAsync(cursorLine: number, cursorCharacter: number, anchorLine: number? = nil, anchorCharacter: number? = nil) -> ...any {PluginSecurity} [Yields]
	Event ScriptDocument.SelectionChanged(positionLine: number, positionCharacter: number, anchorLine: number, anchorCharacter: number) {PluginSecurity}
	Event ScriptDocument.ViewportChanged(startLine: number, endLine: number) {PluginSecurity}
Class ScriptEditorService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ScriptEditorService:DeregisterAutocompleteCallback(name: string) -> () {PluginSecurity}
	Function ScriptEditorService:DeregisterScriptAnalysisCallback(name: string) -> () {PluginSecurity}
	Function ScriptEditorService:EditSourceAsyncWithRanges(script: LuaSourceContainer, newText: string, startLine: number, startCharacter: number, endLine: number, endCharacter: number) -> ...any {RobloxScriptSecurity} [Yields]
	Function ScriptEditorService:FindScriptDocument(script: LuaSourceContainer) -> ScriptDocument {PluginSecurity}
	Function ScriptEditorService:ForceReloadSource(uri: string, newsrc: string) -> () {RobloxScriptSecurity}
	Function ScriptEditorService:GetEditorSource(script: LuaSourceContainer) -> string {PluginSecurity}
	Function ScriptEditorService:GetScriptDocuments() -> { Instance } {PluginSecurity}
	Function ScriptEditorService:IsAutocompleteCallbackRegistered(name: string) -> boolean {RobloxScriptSecurity}
	Function ScriptEditorService:IsScriptAnalysisCallbackRegistered(name: string) -> boolean {RobloxScriptSecurity}
	Function ScriptEditorService:OpenScriptDocumentAsync(script: LuaSourceContainer) -> ...any {PluginSecurity} [Yields]
	Function ScriptEditorService:RegisterAutocompleteCallback(name: string, priority: number, callbackFunction: (...any) -> ...any) -> () {PluginSecurity}
	Function ScriptEditorService:RegisterScriptAnalysisCallback(name: string, priority: number, callbackFunction: (...any) -> ...any) -> () {PluginSecurity}
	Function ScriptEditorService:StripComments(code: string) -> string {RobloxScriptSecurity}
	Function ScriptEditorService:UpdateSourceAsync(script: LuaSourceContainer, callback: (...any) -> ...any) -> () {PluginSecurity} [Yields]
	Event ScriptEditorService.TextDocumentDidChange(document: ScriptDocument, changesArray: any) {PluginSecurity}
	Event ScriptEditorService.TextDocumentDidClose(oldDocument: ScriptDocument) {PluginSecurity}
	Event ScriptEditorService.TextDocumentDidOpen(newDocument: ScriptDocument) {PluginSecurity}
Class ScriptProfilerService : Instance [NotCreatable] [Service]
	Function ScriptProfilerService:ClientRequestData(player: Player) -> () {PluginSecurity}
	Function ScriptProfilerService:ClientStart(player: Player, frequency: number?) -> () {PluginSecurity}
	Function ScriptProfilerService:ClientStop(player: Player) -> () {PluginSecurity}
	Function ScriptProfilerService:DeserializeJSON(jsonString: string?) -> { [string]: any } {PluginSecurity} [CustomLuaState]
	Function ScriptProfilerService:SaveScriptProfilingData(jsonString: string, filename: string) -> string {RobloxScriptSecurity}
	Function ScriptProfilerService:ServerRequestData() -> () {PluginSecurity}
	Function ScriptProfilerService:ServerStart(frequency: number?) -> () {PluginSecurity}
	Function ScriptProfilerService:ServerStop() -> () {PluginSecurity}
	Event ScriptProfilerService.OnNewData(player: Player, jsonString: string) {PluginSecurity}
	Event ScriptProfilerService.RequestData() {RobloxSecurity} [Hidden]
	Event ScriptProfilerService.SetProfilingState(start: boolean, frequency: number) {RobloxSecurity} [Hidden]
Class ScriptRegistrationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ScriptRegistrationService:GetSourceContainerByScriptGuid(guid: string) -> LuaSourceContainer {RobloxScriptSecurity}
Class ScriptRuntime : Instance [NotCreatable] [NotReplicated]
Class ScriptService : Instance [NotCreatable] [Service]
Class Selection : Instance [NotCreatable] [Service]
	Property Selection.SelectionBoxThickness: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Selection.SelectionLineThickness: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Selection.SelectionThickness: number [ReadOnly]
	Property Selection.ActiveInstance: Instance? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Selection.RenderMode: Enum.SelectionRenderMode {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Selection.ShowActiveInstanceHighlight: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function Selection:Add(instancesToAdd: { Instance }) -> () {PluginSecurity}
	Function Selection:AddFocusCallback(priority: number, function: (...any) -> ...any) -> RBXScriptConnection {RobloxScriptSecurity}
	Function Selection:ClearTerrainSelectionHack() -> () {RobloxScriptSecurity}
	Function Selection:Get() -> { Instance } {PluginSecurity}
	Function Selection:Remove(instancesToRemove: { Instance }) -> () {PluginSecurity}
	Function Selection:Set(selection: { Instance }) -> () {PluginSecurity}
	Function Selection:SetTerrainSelectionHack(center: Vector3, size: Vector3) -> () {RobloxScriptSecurity}
	Event Selection.SelectionChanged()
Class SelectionHighlightManager : Instance [NotCreatable] [Service]
Class SensorBase : Instance [NotCreatable]
	Property SensorBase.UpdateType: Enum.SensorUpdateType
	Function SensorBase:Sense() -> () [Deprecated]
	Event SensorBase.OnSensorOutputChanged()
Class AtmosphereSensor : SensorBase
	Property AtmosphereSensor.AirDensity: number [ReadOnly]
	Property AtmosphereSensor.RelativeWindVelocity: Vector3 [ReadOnly]
Class BuoyancySensor : SensorBase
	Property BuoyancySensor.FullySubmerged: boolean
	Property BuoyancySensor.TouchingSurface: boolean
Class ControllerSensor : SensorBase [NotCreatable]
Class ControllerPartSensor : ControllerSensor
	Property ControllerPartSensor.SearchDistance: number
	Property ControllerPartSensor.SensorMode: Enum.SensorMode
	Property ControllerPartSensor.HitFrame: CFrame
	Property ControllerPartSensor.HitNormal: Vector3
	Property ControllerPartSensor.SensedPart: BasePart?
Class FluidForceSensor : SensorBase [NotBrowsable]
	Property FluidForceSensor.CenterOfPressure: Vector3 [ReadOnly]
	Property FluidForceSensor.Force: Vector3 [ReadOnly]
	Property FluidForceSensor.Torque: Vector3 [ReadOnly]
	Function FluidForceSensor:EvaluateAsync(linearVelocity: Vector3, angularVelocity: Vector3, cframe: CFrame) -> ...any [Yields]
Class ServerScriptService : Instance [NotCreatable] [Service] [NotReplicated]
	Property ServerScriptService.LoadStringEnabled: boolean [NotReplicated] [NotScriptable]
Class ServerStorage : Instance [NotCreatable] [Service] [NotReplicated]
Class ServiceProvider : Instance [NotCreatable] [NotBrowsable]
	Function ServiceProvider:FindService(className: string) -> Instance? {🧬Safe}
	Function ServiceProvider:GetService(className: string) -> Instance?
	Function ServiceProvider:service(className: string) -> Instance? [Deprecated]
	Event ServiceProvider.Close()
	Event ServiceProvider.CloseLate() {LocalUserSecurity}
	Event ServiceProvider.ServiceAdded(service: Instance)
	Event ServiceProvider.ServiceRemoving(service: Instance)
Class DataModel : ServiceProvider [NotCreatable]
	Property DataModel.IsSFFlagsLoaded: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property DataModel.PrivateServerId: string [ReadOnly]
	Property DataModel.PrivateServerOwnerId: number [ReadOnly]
	Property DataModel.VIPServerId: string [Hidden] [ReadOnly] [Deprecated]
	Property DataModel.VIPServerOwnerId: number [Hidden] [ReadOnly] [Deprecated]
	Property DataModel.Workspace: Workspace? [ReadOnly]
	Property DataModel.JobId: string [ReadOnly]
	Property DataModel.CreatorId: number [ReadOnly]
	Property DataModel.CreatorType: Enum.CreatorType [ReadOnly]
	Property DataModel.ForceR15: boolean {RobloxSecurity} [Hidden] [NotScriptable]
	Property DataModel.GameAvatarType: Enum.GameAvatarType {RobloxSecurity} [Hidden] [NotScriptable] [Deprecated]
	Property DataModel.GameId: number [ReadOnly]
	Property DataModel.GearGenreSetting: Enum.GearGenreSetting [ReadOnly] [Deprecated]
	Property DataModel.Genre: Enum.Genre [ReadOnly]
	Property DataModel.PlaceId: number [ReadOnly]
	Property DataModel.PlaceVersion: number [ReadOnly]
	Property DataModel.R15CollisionType: Enum.R15CollisionType {RobloxSecurity} [Hidden] [NotScriptable] [Deprecated]
	Property DataModel.lighting: Instance? [ReadOnly] [Deprecated]
	Function DataModel:BindToClose(function: (...any) -> ...any) -> ()
	Function DataModel:DefineFastFlag(name: string, defaultValue: boolean) -> boolean {RobloxScriptSecurity}
	Function DataModel:DefineFastInt(name: string, defaultValue: number) -> number {RobloxScriptSecurity}
	Function DataModel:DefineFastString(name: string, defaultValue: string) -> string {RobloxScriptSecurity}
	Function DataModel:GetEngineFeature(name: string) -> boolean {LocalUserSecurity}
	Function DataModel:GetFastFlag(name: string) -> boolean {LocalUserSecurity}
	Function DataModel:GetFastInt(name: string) -> number {LocalUserSecurity}
	Function DataModel:GetFastString(name: string) -> string {LocalUserSecurity}
	Function DataModel:GetJobsInfo() -> { any } {PluginSecurity}
	Function DataModel:GetMessage() -> string [Deprecated]
	Function DataModel:GetObjects(url: ContentId) -> { Instance } {PluginSecurity}
	Function DataModel:GetObjectsAllOrNone(url: ContentId, binaryFormatOnly: boolean? = false) -> { Instance } {RobloxScriptSecurity}
	Function DataModel:GetObjectsAsync(url: ContentId) -> { Instance } {RobloxScriptSecurity} [Yields]
	Function DataModel:GetObjectsList(urls: { any }) -> { any } {RobloxScriptSecurity}
	Function DataModel:GetPlaySessionId() -> string {RobloxScriptSecurity}
	Function DataModel:GetRemoteBuildMode() -> boolean [Deprecated]
	Function DataModel:HttpGetAsync(url: string, httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function DataModel:HttpPostAsync(url: string, data: string, contentType: string? = "*/*", httpRequestType: Enum.HttpRequestType? = "Default") -> string {RobloxScriptSecurity} [Yields]
	Function DataModel:InsertObjectsAndJoinIfLegacyAsync(url: ContentId) -> { Instance } {RobloxScriptSecurity} [Yields]
	Function DataModel:IsContentLoaded() -> boolean {RobloxScriptSecurity}
	Function DataModel:IsGearTypeAllowed(gearType: Enum.GearType) -> boolean [Deprecated]
	Function DataModel:IsLoaded() -> boolean
	Function DataModel:IsUniverseMetadataLoaded() -> boolean {RobloxScriptSecurity}
	Function DataModel:Load(url: ContentId) -> () {LocalUserSecurity}
	Function DataModel:OpenScreenshotsFolder() -> () {RobloxScriptSecurity}
	Function DataModel:OpenVideosFolder() -> () {RobloxScriptSecurity}
	Function DataModel:ReportInGoogleAnalytics(category: string, action: string? = "custom", label: string? = "none", value: number? = 0) -> () {RobloxScriptSecurity}
	Function DataModel:SavePlace(saveFilter: Enum.SaveFilter? = "SaveAll") -> boolean [Yields] [Deprecated]
	Function DataModel:SetFastFlagForTesting(name: string, newValue: boolean) -> boolean {RobloxScriptSecurity}
	Function DataModel:SetFastIntForTesting(name: string, newValue: number) -> number {RobloxScriptSecurity}
	Function DataModel:SetFastStringForTesting(name: string, newValue: string) -> string {RobloxScriptSecurity}
	Function DataModel:SetFlagVersion(name: string, version: number) -> () {RobloxScriptSecurity}
	Function DataModel:SetIsLoaded(value: boolean, placeSizeInBytes: number?) -> () {RobloxScriptSecurity}
	Function DataModel:SetPlaceId(placeId: number) -> () {PluginSecurity}
	Function DataModel:SetUniverseId(universeId: number) -> () {PluginSecurity}
	Function DataModel:Shutdown() -> () {LocalUserSecurity}
	Event DataModel.AllowedGearTypeChanged() [Deprecated]
	Event DataModel.GraphicsQualityChangeRequest(betterQuality: boolean)
	Event DataModel.ItemChanged(object: Instance, descriptor: string) [Deprecated]
	Event DataModel.Loaded()
	Event DataModel.ScreenshotReady(path: string) {RobloxScriptSecurity}
	Event DataModel.ScreenshotSavedToAlbum(filename: string, success: boolean, message: string) {RobloxScriptSecurity}
	Event DataModel.UniverseMetadataLoaded() {RobloxScriptSecurity}
	Callback DataModel.OnClose() -> ...any [Deprecated]
Class GenericSettings : ServiceProvider [NotCreatable]
Class AnalysticsSettings : GenericSettings [NotCreatable]
Class GlobalSettings : GenericSettings [NotCreatable] [NotBrowsable]
	Function GlobalSettings:GetFFlag(name: string) -> boolean
	Function GlobalSettings:GetFVariable(name: string) -> string
Class UserSettings : GenericSettings [NotCreatable]
	Function UserSettings:IsUserFeatureEnabled(name: string) -> boolean
	Function UserSettings:Reset() -> ()
	Function UserSettings:SaveState() -> () {RobloxScriptSecurity}
Class ServiceVisibilityService : Instance [NotCreatable] [Service]
	Property ServiceVisibilityService.HiddenServices: BinaryString {RobloxSecurity}
	Property ServiceVisibilityService.VisibleServices: BinaryString {RobloxSecurity}
Class SessionService : Instance [NotCreatable] [Service]
	Function SessionService:AcquireContextFocus(context: string) -> () {RobloxScriptSecurity}
	Function SessionService:GenerateSessionInfoString(includeArbitrarySessions: boolean, includeTag: boolean, includeTimestamps: boolean, includeMetadata: boolean) -> string {RobloxScriptSecurity}
	Function SessionService:GetCreatedTimestampUtcMs(sid: string) -> number {RobloxScriptSecurity}
	Function SessionService:GetMetadata(sid: string, key: string) -> any {RobloxScriptSecurity}
	Function SessionService:GetRootSID() -> string {RobloxScriptSecurity}
	Function SessionService:GetSessionID(structuralId: string) -> string {RobloxScriptSecurity}
	Function SessionService:GetSessionTag(sid: string) -> string {RobloxScriptSecurity}
	Function SessionService:IsContextFocused(context: string) -> boolean {RobloxScriptSecurity}
	Function SessionService:ReleaseContextFocus(context: string) -> () {RobloxScriptSecurity}
	Function SessionService:RemoveMetadata(sid: string, key: string, context: string? = "") -> () {RobloxScriptSecurity}
	Function SessionService:RemoveSession(sid: string, context: string? = "") -> () {RobloxScriptSecurity}
	Function SessionService:RemoveSessionsWithMetadataKey(key: string) -> () {RobloxScriptSecurity}
	Function SessionService:ReplaceSession(sid: string, tag: string) -> () {RobloxScriptSecurity}
	Function SessionService:SessionExists(sid: string) -> boolean {RobloxScriptSecurity}
	Function SessionService:SetMetadata(sid: string, key: string, value: any, context: string? = "") -> () {RobloxScriptSecurity}
	Function SessionService:SetSession(parentSid: string, childSid: string, tag: string, context: string? = "") -> () {RobloxScriptSecurity}
Class SharedTableRegistry : Instance [NotCreatable] [Service] [NotReplicated]
	Function SharedTableRegistry:GetSharedTable(name: string) -> SharedTable {🧬Safe}
	Function SharedTableRegistry:SetSharedTable(name: string, st: SharedTable?) -> () {🧬Safe}
Class ShorelineUpgraderService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ShorelineUpgraderService:Cancel() -> () {RobloxScriptSecurity}
	Function ShorelineUpgraderService:Start() -> () {RobloxScriptSecurity}
	Event ShorelineUpgraderService.Status(progressRatio: number) {RobloxScriptSecurity}
Class Sky : Instance
	Property Sky.CelestialBodiesShown: boolean
	Property Sky.MoonAngularSize: number
	Property Sky.MoonTextureId: ContentId
	Property Sky.SkyboxBk: ContentId
	Property Sky.SkyboxDn: ContentId
	Property Sky.SkyboxFt: ContentId
	Property Sky.SkyboxLf: ContentId
	Property Sky.SkyboxRt: ContentId
	Property Sky.SkyboxUp: ContentId
	Property Sky.StarCount: number
	Property Sky.SunAngularSize: number
	Property Sky.SunTextureId: ContentId
Class Smoke : Instance
	Property Smoke.Color: Color3
	Property Smoke.Enabled: boolean
	Property Smoke.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Smoke.Opacity: number [📁 LoadOnly] [NotReplicated]
	Property Smoke.RiseVelocity: number [📁 LoadOnly] [NotReplicated]
	Property Smoke.Size: number [📁 LoadOnly] [NotReplicated]
	Property Smoke.TimeScale: number
	Property Smoke.opacity_xml: number [Hidden] [NotScriptable]
	Property Smoke.riseVelocity_xml: number [Hidden] [NotScriptable]
	Property Smoke.size_xml: number [Hidden] [NotScriptable]
	Function Smoke:FastForward(numFrames: number) -> () {RobloxScriptSecurity}
Class SmoothVoxelsUpgraderService : Instance [NotCreatable] [Service] [NotReplicated]
	Function SmoothVoxelsUpgraderService:Cancel() -> () {RobloxScriptSecurity}
	Function SmoothVoxelsUpgraderService:Start() -> () {RobloxScriptSecurity}
	Event SmoothVoxelsUpgraderService.Status(progressRatio: number) {RobloxScriptSecurity}
Class SnippetService : Instance [NotCreatable] [Service] [NotReplicated]
Class SocialService : Instance [NotCreatable] [Service] [NotReplicated]
	Function SocialService:CanSendCallInviteAsync(player: Instance) -> boolean [Yields]
	Function SocialService:CanSendGameInviteAsync(player: Instance, recipientId: number? = 0) -> boolean [Yields]
	Function SocialService:HideSelfView() -> ()
	Function SocialService:InvokeGameInvitePromptClosed(player: Instance, recipientIds: { any }) -> () {RobloxScriptSecurity}
	Function SocialService:InvokeIrisInvite(player: Instance, tag: string, irisParticipants: { any }) -> () {RobloxScriptSecurity}
	Function SocialService:InvokeIrisInvitePromptClosed(player: Instance) -> () {RobloxScriptSecurity}
	Function SocialService:PromptGameInvite(player: Instance, experienceInviteOptions: Instance? = nil) -> ()
	Function SocialService:PromptPhoneBook(player: Instance, tag: string) -> ()
	Function SocialService:ShowSelfView(selfViewPosition: Enum.SelfViewPosition? = "LastPosition") -> ()
	Event SocialService.CallInviteStateChanged(player: Instance, inviteState: Enum.InviteState)
	Event SocialService.GameInvitePromptClosed(player: Instance, recipientIds: { any })
	Event SocialService.IrisInviteInitiated(message: string) {RobloxSecurity} [Hidden]
	Event SocialService.PhoneBookPromptClosed(player: Instance)
	Event SocialService.PromptInviteRequested(player: Instance, experienceInviteOptions: Instance) {RobloxScriptSecurity}
	Event SocialService.PromptIrisInviteRequested(player: Instance, tag: string) {RobloxScriptSecurity}
	Event SocialService.SelfViewHidden() {RobloxScriptSecurity}
	Event SocialService.SelfViewVisible(selfViewPosition: Enum.SelfViewPosition) {RobloxScriptSecurity}
	Callback SocialService.OnCallInviteInvoked(tag: string, callParticipantIds: { any }) -> Instance
Class Sound : Instance
	Property Sound.ChannelCount: number {RobloxScriptSecurity} [ReadOnly] [NotBrowsable]
	Property Sound.IsLoaded: boolean [ReadOnly]
	Property Sound.SoundId: ContentId
	Property Sound.TimeLength: number [ReadOnly]
	Property Sound.IsSpatial: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Sound.PlayOnRemove: boolean
	Property Sound.UsageContextPermission: Enum.UsageContext {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Sound.EmitterSize: number [Deprecated]
	Property Sound.MaxDistance: number [Deprecated]
	Property Sound.MinDistance: number [📁 LoadOnly] [Deprecated]
	Property Sound.Pitch: number [📁 LoadOnly] [Deprecated]
	Property Sound.PlayingReplicator: boolean [Hidden] [NotScriptable]
	Property Sound.TimePositionReplicator: number [Hidden] [NotScriptable]
	Property Sound.RollOffMaxDistance: number [NotReplicated]
	Property Sound.RollOffMinDistance: number [NotReplicated]
	Property Sound.RollOffMode: Enum.RollOffMode
	Property Sound.IsPaused: boolean [Hidden] [ReadOnly]
	Property Sound.IsPlaying: boolean [Hidden] [ReadOnly]
	Property Sound.Looped: boolean
	Property Sound.PlaybackLoudness: number [ReadOnly]
	Property Sound.PlaybackRegionsEnabled: boolean
	Property Sound.PlaybackSpeed: number [NotReplicated]
	Property Sound.Playing: boolean [NotReplicated]
	Property Sound.RollOffGain: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property Sound.TimePosition: number [NotReplicated]
	Property Sound.Volume: number
	Property Sound.LoopRegion: NumberRange
	Property Sound.PlaybackRegion: NumberRange
	Property Sound.SoundGroup: SoundGroup?
	Property Sound.xmlRead_MaxDistance_3: number [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Property Sound.xmlRead_MinDistance_3: number [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable] [Deprecated]
	Function Sound:Pause() -> ()
	Function Sound:Play() -> ()
	Function Sound:Resume() -> ()
	Function Sound:Stop() -> ()
	Event Sound.DidLoop(soundId: string, numOfTimesLooped: number)
	Event Sound.Ended(soundId: string)
	Event Sound.Loaded(soundId: string)
	Event Sound.Paused(soundId: string)
	Event Sound.Played(soundId: string)
	Event Sound.PlayingUpdatedFromClient(value: boolean) {RobloxSecurity} [Hidden]
	Event Sound.PlayingUpdatedFromServer(value: boolean) {RobloxSecurity} [Hidden]
	Event Sound.Resumed(soundId: string)
	Event Sound.Stopped(soundId: string)
	Event Sound.TimePositionUpdatedFromClient(newPositionSeconds: number, lastLuaSetTimePosition: number) {RobloxSecurity} [Hidden]
	Event Sound.TimePositionUpdatedFromServer(newPositionSeconds: number, lastLuaSetTimePosition: number) {RobloxSecurity} [Hidden]
	Event Sound.playbackActionSync(action: number) {RobloxSecurity} [Hidden]
Class SoundEffect : Instance [NotCreatable]
	Property SoundEffect.Enabled: boolean
	Property SoundEffect.Priority: number
Class ChorusSoundEffect : SoundEffect
	Property ChorusSoundEffect.Depth: number
	Property ChorusSoundEffect.Mix: number
	Property ChorusSoundEffect.Rate: number
Class CompressorSoundEffect : SoundEffect
	Property CompressorSoundEffect.Attack: number
	Property CompressorSoundEffect.GainMakeup: number
	Property CompressorSoundEffect.Ratio: number
	Property CompressorSoundEffect.Release: number
	Property CompressorSoundEffect.SideChain: Instance?
	Property CompressorSoundEffect.Threshold: number
Class CustomSoundEffect : SoundEffect [NotCreatable]
Class AssetSoundEffect : CustomSoundEffect [NotCreatable]
Class ChannelSelectorSoundEffect : CustomSoundEffect [NotCreatable] [NotBrowsable]
	Property ChannelSelectorSoundEffect.Channel: number
Class DistortionSoundEffect : SoundEffect
	Property DistortionSoundEffect.Level: number
Class EchoSoundEffect : SoundEffect
	Property EchoSoundEffect.Delay: number
	Property EchoSoundEffect.DryLevel: number
	Property EchoSoundEffect.Feedback: number
	Property EchoSoundEffect.WetLevel: number
Class EqualizerSoundEffect : SoundEffect
	Property EqualizerSoundEffect.HighGain: number
	Property EqualizerSoundEffect.LowGain: number
	Property EqualizerSoundEffect.MidGain: number
Class FlangeSoundEffect : SoundEffect
	Property FlangeSoundEffect.Depth: number
	Property FlangeSoundEffect.Mix: number
	Property FlangeSoundEffect.Rate: number
Class PitchShiftSoundEffect : SoundEffect
	Property PitchShiftSoundEffect.Octave: number
Class ReverbSoundEffect : SoundEffect
	Property ReverbSoundEffect.DecayTime: number
	Property ReverbSoundEffect.Density: number
	Property ReverbSoundEffect.Diffusion: number
	Property ReverbSoundEffect.DryLevel: number
	Property ReverbSoundEffect.WetLevel: number
Class TremoloSoundEffect : SoundEffect
	Property TremoloSoundEffect.Depth: number
	Property TremoloSoundEffect.Duty: number
	Property TremoloSoundEffect.Frequency: number
Class SoundGroup : Instance
	Property SoundGroup.Volume: number
Class SoundService : Instance [NotCreatable] [Service]
	Property SoundService.AmbientReverb: Enum.ReverbType
	Property SoundService.DefaultListenerLocation: Enum.ListenerLocation {PluginSecurity}
	Property SoundService.DistanceFactor: number
	Property SoundService.DopplerScale: number
	Property SoundService.RespectFilteringEnabled: boolean
	Property SoundService.RolloffScale: number
	Property SoundService.VolumetricAudio: Enum.VolumetricAudio [NotScriptable]
	Function SoundService:BeginRecording() -> boolean {RobloxScriptSecurity}
	Function SoundService:EndRecording() -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function SoundService:GetAudioInstances() -> { any } {RobloxScriptSecurity}
	Function SoundService:GetInputDevice() -> ...any {RobloxScriptSecurity}
	Function SoundService:GetInputDevices() -> ...any {RobloxScriptSecurity}
	Function SoundService:GetListener() -> ...any
	Function SoundService:GetOutputDevice() -> ...any {RobloxScriptSecurity}
	Function SoundService:GetOutputDevices() -> ...any {RobloxScriptSecurity}
	Function SoundService:GetRecordingDevices() -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function SoundService:GetSoundMemoryData() -> { [string]: any } {RobloxScriptSecurity}
	Function SoundService:OpenAttenuationCurveEditor(selectedCurveObjects: { Instance }) -> () {PluginSecurity}
	Function SoundService:PlayLocalSound(sound: Instance) -> ()
	Function SoundService:SetInputDevice(name: string, guid: string) -> () {RobloxScriptSecurity}
	Function SoundService:SetListener(listenerType: Enum.ListenerType, listener: ...any) -> ()
	Function SoundService:SetOutputDevice(name: string, guid: string) -> () {RobloxScriptSecurity}
	Function SoundService:SetRecordingDevice(deviceIndex: number) -> boolean {RobloxScriptSecurity}
	Event SoundService.AudioInstanceAdded(instance: Instance) {RobloxScriptSecurity}
	Event SoundService.ClientLoggedEvent(sessionIdRaw: string) {RobloxSecurity} [Hidden]
	Event SoundService.DeviceListChanged(newDevices: ...any) {RobloxScriptSecurity}
	Event SoundService.OpenAttenuationCurveEditorSignal(selectedCurveObjects: { Instance }) {RobloxScriptSecurity}
	Event SoundService.OpenAudioEqualizerEditorSignal(selectedEqualizerObjects: { Instance }) {RobloxScriptSecurity}
Class Sparkles : Instance
	Property Sparkles.Color: Color3 [📁 LoadOnly] [Hidden] [NotReplicated]
	Property Sparkles.Enabled: boolean
	Property Sparkles.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Sparkles.SparkleColor: Color3
	Property Sparkles.TimeScale: number
	Function Sparkles:FastForward(numFrames: number) -> () {RobloxScriptSecurity}
Class SpawnerService : Instance [NotCreatable] [Service]
Class StackFrame : Instance [NotCreatable] [NotReplicated]
	Property StackFrame.FrameId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.FrameName: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.FrameType: Enum.DebuggerFrameType {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Globals: DebuggerVariable? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Line: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Locals: DebuggerVariable? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Script: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Upvalues: DebuggerVariable? {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StackFrame.Populated: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
Class StandalonePluginScripts : Instance
Class StartPageService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StartPageService:generateTempUrlInContentProvider(url: string) -> () {RobloxScriptSecurity}
	Function StartPageService:getDaysSinceFirstUserLogin() -> number {RobloxScriptSecurity}
	Function StartPageService:getLocalGamesFromRegistry() -> { any } {RobloxScriptSecurity}
	Function StartPageService:getRecentAPIGamesFromRegistry() -> { any } {RobloxScriptSecurity}
	Function StartPageService:getStartPageVersionForUser() -> number {RobloxScriptSecurity}
	Function StartPageService:getTempUrlInContentProvider(url: string) -> string {RobloxScriptSecurity}
	Function StartPageService:isTutorialBannerClosed() -> boolean {RobloxScriptSecurity}
	Function StartPageService:isTutorialPopupClosed() -> boolean {RobloxScriptSecurity}
	Function StartPageService:openLink(link: string) -> () {RobloxScriptSecurity}
	Function StartPageService:openLocalFile(filePath: string) -> () {RobloxScriptSecurity}
	Function StartPageService:openPlace(placeId: number, universeId: number, launchTutorial: boolean) -> () {RobloxScriptSecurity}
	Function StartPageService:refreshRegistryDataInStartPage() -> () {RobloxScriptSecurity}
	Function StartPageService:removeAPIGameFromRegistry(gameId: number) -> () {RobloxScriptSecurity}
	Function StartPageService:removeLocalFileFromRegistry(fileName: string) -> () {RobloxScriptSecurity}
	Function StartPageService:setTutorialBannerClosed(closed: boolean) -> () {RobloxScriptSecurity}
	Function StartPageService:setTutorialPopupClosed(closed: boolean) -> () {RobloxScriptSecurity}
	Function StartPageService:startTutorial() -> () {RobloxScriptSecurity}
	Event StartPageService.ImageImportedSignal(urlImported: string, temporaryId: string) {RobloxScriptSecurity}
	Event StartPageService.LocalGamesFromRegistryUpdatedSignal(localGames: { any }) {RobloxScriptSecurity}
	Event StartPageService.RecentApiGamesFromRegistryUpdatedSignal(recentGames: { any }) {RobloxScriptSecurity}
Class StarterGear : Instance
Class StarterPack : Instance [NotCreatable] [Service]
Class StarterPlayer : Instance [NotCreatable] [Service]
	Property StarterPlayer.CameraMaxZoomDistance: number
	Property StarterPlayer.CameraMinZoomDistance: number
	Property StarterPlayer.CameraMode: Enum.CameraMode
	Property StarterPlayer.DevCameraOcclusionMode: Enum.DevCameraOcclusionMode
	Property StarterPlayer.DevComputerCameraMovementMode: Enum.DevComputerCameraMovementMode
	Property StarterPlayer.DevTouchCameraMovementMode: Enum.DevTouchCameraMovementMode
	Property StarterPlayer.AllowCustomAnimations: boolean {✏️RobloxScriptSecurity} [Hidden]
	Property StarterPlayer.AvatarJointUpgrade: Enum.AvatarJointUpgrade [NotReplicated] [NotBrowsable]
	Property StarterPlayer.AvatarJointUpgrade_Serialized: Enum.AvatarJointUpgrade [Hidden] [NotScriptable]
	Property StarterPlayer.CharacterMaxSlopeAngle: number
	Property StarterPlayer.CharacterWalkSpeed: number
	Property StarterPlayer.EnableDynamicHeads: Enum.LoadDynamicHeads [NotScriptable]
	Property StarterPlayer.GameSettingsAssetIDFace: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDHead: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDLeftArm: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDLeftLeg: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDPants: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDRightArm: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDRightLeg: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDShirt: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDTeeShirt: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAssetIDTorso: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsAvatar: Enum.GameAvatarType {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsR15Collision: Enum.R15CollisionType {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsScaleRangeBodyType: NumberRange {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsScaleRangeHead: NumberRange {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsScaleRangeHeight: NumberRange {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsScaleRangeProportion: NumberRange {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.GameSettingsScaleRangeWidth: NumberRange {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StarterPlayer.LoadCharacterAppearance: boolean
	Property StarterPlayer.LoadCharacterLayeredClothing: Enum.LoadCharacterLayeredClothing [Hidden] [NotScriptable]
	Property StarterPlayer.LoadCharacterLayeredClothing : Enum.LoadCharacterLayeredClothing [NotReplicated] [NotScriptable]
	Property StarterPlayer.UserEmotesEnabled: boolean
	Property StarterPlayer.CharacterJumpHeight: number
	Property StarterPlayer.CharacterJumpPower: number
	Property StarterPlayer.CharacterUseJumpPower: boolean
	Property StarterPlayer.DevComputerMovementMode: Enum.DevComputerMovementMode
	Property StarterPlayer.DevTouchMovementMode: Enum.DevTouchMovementMode
	Property StarterPlayer.EnableMouseLockOption: boolean
	Property StarterPlayer.LuaCharacterController: Enum.CharacterControlMode [NotBrowsable]
	Property StarterPlayer.HealthDisplayDistance: number
	Property StarterPlayer.NameDisplayDistance: number
	Property StarterPlayer.AutoJumpEnabled: boolean
	Function StarterPlayer:ClearDefaults() -> () {RobloxScriptSecurity}
Class StarterPlayerScripts : Instance [NotCreatable]
Class StarterCharacterScripts : StarterPlayerScripts [NotCreatable]
Class StartupMessageService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StartupMessageService:GetStartupMessage() -> any {RobloxScriptSecurity}
Class Stats : Instance [NotCreatable] [Service]
	Property Stats.ContactsCount: number [ReadOnly]
	Property Stats.DataReceiveKbps: number [ReadOnly]
	Property Stats.DataSendKbps: number [ReadOnly]
	Property Stats.HeartbeatTimeMs: number [ReadOnly]
	Property Stats.InstanceCount: number [ReadOnly]
	Property Stats.MovingPrimitivesCount: number [ReadOnly]
	Property Stats.PhysicsReceiveKbps: number [ReadOnly]
	Property Stats.PhysicsSendKbps: number [ReadOnly]
	Property Stats.PhysicsStepTimeMs: number [ReadOnly]
	Property Stats.PrimitivesCount: number [ReadOnly]
	Function Stats:GetBrowserTrackerId() -> string {RobloxScriptSecurity}
	Function Stats:GetMemoryUsageMbForTag(tag: Enum.DeveloperMemoryTag) -> number
	Function Stats:GetPaginatedMemoryByTexture(queryType: Enum.TextureQueryType, pageIndex: number, pageSize: number) -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function Stats:GetTotalMemoryUsageMb() -> number
Class StatsItem : Instance [NotCreatable]
	Property StatsItem.DisplayName: string {PluginSecurity} [Hidden] [ReadOnly]
	Function StatsItem:GetValue() -> number {PluginSecurity}
	Function StatsItem:GetValueString() -> string {PluginSecurity}
Class RunningAverageItemDouble : StatsItem [NotCreatable]
Class RunningAverageItemInt : StatsItem [NotCreatable]
Class RunningAverageTimeIntervalItem : StatsItem [NotCreatable]
Class TotalCountTimeIntervalItem : StatsItem [NotCreatable]
Class StopWatchReporter : Instance [NotCreatable] [Service] [NotReplicated]
	Function StopWatchReporter:FinishTask(taskId: number) -> () {RobloxScriptSecurity}
	Function StopWatchReporter:SendReport(reportName: string) -> () {RobloxScriptSecurity}
	Function StopWatchReporter:StartTask(reportName: string, taskName: string) -> number {RobloxScriptSecurity}
Class StreamingService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StreamingService:BindCodeToGuid(runCodeGuid: string, code: string) -> ...any {RobloxScriptSecurity} [Yields]
	Function StreamingService:ExecuteCommandAsync(requestId: string, commandName: string, arg: any) -> any {LocalUserSecurity} [Yields]
	Function StreamingService:GetEphemeralVariable(key: string) -> any {RobloxScriptSecurity}
	Function StreamingService:GetInstance(requestId: string, instanceId: string) -> Instance? {RobloxScriptSecurity}
	Function StreamingService:InvokeCommand(requestId: string, commandName: string, arg: any) -> () {RobloxScriptSecurity}
	Function StreamingService:RegisterCommand(commandName: string, function: ((...any) -> ...any)? = nil) -> () {RobloxScriptSecurity}
	Function StreamingService:RegisterContextCollector(collectorName: string, function: ((...any) -> ...any)? = nil) -> () {RobloxScriptSecurity}
	Function StreamingService:RegisterSequentialCommand(commandName: string, function: ((...any) -> ...any)? = nil) -> () {RobloxScriptSecurity}
	Function StreamingService:RunSandboxedCode(runCodeGuid: string, requestId: string) -> ...any {RobloxScriptSecurity} [Yields]
	Function StreamingService:SetEphemeralVariable(key: string, value: any, timeToLive: number? = -1) -> () {RobloxScriptSecurity}
	Function StreamingService:SetPluginInfoCallback(function: ((...any) -> ...any)? = nil) -> () {RobloxScriptSecurity}
	Function StreamingService:UnregisterCommand(commandName: string) -> () {RobloxScriptSecurity}
	Function StreamingService:UnregisterContextCollector(collectorName: string) -> () {RobloxScriptSecurity}
	Event StreamingService.ConversationCleared() {RobloxScriptSecurity}
	Event StreamingService.RequestEnded(requestId: string) {RobloxScriptSecurity}
	Event StreamingService.RequestError(requestId: string, errorType: string, errorMessage: string) {RobloxScriptSecurity}
	Event StreamingService.RequestStarted(requestId: string, queryToProcess: string) {RobloxScriptSecurity}
	Event StreamingService.SequentialCommandsFinished(requestId: string, success: boolean) {RobloxScriptSecurity}
	Event StreamingService.Stream(requestId: string, commandName: string, streamContent: string) {RobloxScriptSecurity}
Class Studio : Instance [NotCreatable] [Service] [NotReplicated]
	Property Studio.Enable CoreScript Debugger: boolean
	Property Studio.Enable Http Sandboxing: boolean
	Property Studio.Enable Internal Beta Features: boolean
	Property Studio.Enable Internal Features: boolean
	Property Studio.Respect Studio shortcuts when game has focus: boolean
	Property Studio.Set Pivot of Imported Parts: boolean
	Property Studio.Show Diagnostics Bar: boolean
	Property Studio.Main Volume: number {RobloxScriptSecurity}
	Property Studio.Only Play Audio from Window in Focus: boolean
	Property Studio.Auto-Recovery Enabled: boolean
	Property Studio.Auto-Recovery Interval (Minutes): number
	Property Studio.DeprecatedObjectsShown: boolean
	Property Studio.PermissionLevelShown: Enum.PermissionLevelShown
	Property Studio.Camera Mouse Wheel Speed: number
	Property Studio.Camera Pan Speed: number {RobloxScriptSecurity}
	Property Studio.Camera Shift Speed: number
	Property Studio.Camera Speed: number
	Property Studio.Camera Speed Adjust Binding: Enum.CameraSpeedAdjustBinding
	Property Studio.Camera Zoom to Mouse Position: boolean
	Property Studio.CameraAdaptiveSpeed: boolean {RobloxScriptSecurity}
	Property Studio.CameraTweenFocus: boolean {RobloxScriptSecurity}
	Property Studio.FreeCameraSpeedScroll: boolean {RobloxScriptSecurity}
	Property Studio.DraggerActiveColor: Color3 {RobloxScriptSecurity}
	Property Studio.DraggerMajorGridIncrement: number {RobloxScriptSecurity}
	Property Studio.DraggerMaxSoftSnaps: number {RobloxScriptSecurity}
	Property Studio.DraggerPassiveColor: Color3 {RobloxScriptSecurity}
	Property Studio.DraggerShowHoverRuler: boolean {RobloxScriptSecurity}
	Property Studio.DraggerShowMeasurement: boolean {RobloxScriptSecurity}
	Property Studio.DraggerShowTargetSnap: boolean {RobloxScriptSecurity}
	Property Studio.DraggerSoftSnapMarginFactor: number {RobloxScriptSecurity}
	Property Studio.DraggerSummonMarginFactor: number {RobloxScriptSecurity}
	Property Studio.DraggerTiltRotateDuration: number {RobloxScriptSecurity}
	Property Studio.LoadAllBuiltinPluginsInRunModes: boolean {RobloxScriptSecurity}
	Property Studio.LoadUserPluginsInRunModes: boolean {RobloxScriptSecurity}
	Property Studio.ActionOnStopSync: Enum.ActionOnStopSync
	Property Studio.DefaultScriptFileDir: QDir
	Property Studio.IconOverrideDir: QDir {RobloxScriptSecurity}
	Property Studio.LocalAssetsFolder: QDir {✏️RobloxScriptSecurity}
	Property Studio.PluginsDir: QDir
	Property Studio.ReloadBuiltinPluginsOnChange: boolean {RobloxSecurity}
	Property Studio.ReloadLocalPluginsOnChange: boolean {RobloxSecurity}
	Property Studio.Show Core GUI in Explorer while Playing: boolean
	Property Studio.Show FileSyncService: boolean
	Property Studio.Show Hidden Objects in Explorer: boolean
	Property Studio.Show Plugin GUI Service in Explorer: boolean
	Property Studio.Show plus button on hover in Explorer: boolean
	Property Studio.ShowCorePackagesInExplorer: boolean {RobloxScriptSecurity}
	Property Studio.Always Save Script Changes: boolean
	Property Studio.Basic Objects Display Mode: Enum.ListDisplayMode
	Property Studio.DisplayLanguage: string {RobloxScriptSecurity}
	Property Studio.Theme: Instance?
	Property Studio.UI Theme: Enum.UITheme [Hidden] [ReadOnly] [Deprecated]
	Property Studio.CommandBarLocalState: boolean
	Property Studio.LuaDebuggerEnabled: boolean
	Property Studio.LuaDebuggerEnabledAtStartup: boolean [Hidden] [ReadOnly]
	Property Studio.PluginDebuggingEnabled: boolean
	Property Studio.ScriptTimeoutLength: number
	Property Studio.Clear Output On Start: boolean
	Property Studio.Maximum Output Lines: number
	Property Studio.Output Font: QFont
	Property Studio.Output Layout Mode: Enum.OutputLayoutMode
	Property Studio.Line Thickness: number
	Property Studio.Select/Hover Color: Color3
	Property Studio.Auto Clean Empty Line: boolean
	Property Studio.Auto Closing Brackets: boolean
	Property Studio.Auto Closing Quotes: boolean
	Property Studio.Auto Delete Closing Brackets and Quotes: boolean
	Property Studio.Auto Indent Rule: Enum.AutoIndentRule
	Property Studio.Automatically trigger AI Code Completion: boolean {RobloxScriptSecurity}
	Property Studio.Enable Autocomplete: boolean
	Property Studio.Enable Autocomplete Doc View: boolean {RobloxScriptSecurity}
	Property Studio.Enable Script Analysis: boolean {RobloxScriptSecurity}
	Property Studio.Enable Scrollbar Markers: boolean {RobloxScriptSecurity}
	Property Studio.Enable Signature Help: boolean {RobloxScriptSecurity}
	Property Studio.Enable Signature Help Doc View: boolean {RobloxScriptSecurity}
	Property Studio.Enable Temporary Tabs: boolean
	Property Studio.Enable Temporary Tabs In Explorer: boolean
	Property Studio.Enable Type Hover: boolean {RobloxScriptSecurity}
	Property Studio.EnableCodeAssist: boolean {RobloxScriptSecurity}
	Property Studio.EnableIndentationRulers: boolean {RobloxScriptSecurity}
	Property Studio.EnableOnTypeAutocomplete: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Studio.Font: QFont
	Property Studio.Format On Paste: boolean
	Property Studio.Format On Type: boolean
	Property Studio.Highlight Current Line: boolean
	Property Studio.Highlight Occurances: boolean
	Property Studio.Indent Using Spaces: boolean
	Property Studio.LargeFileLineCountThreshold: number {RobloxScriptSecurity}
	Property Studio.LargeFileThreshold: number {RobloxScriptSecurity}
	Property Studio.Rulers: string
	Property Studio.ScriptEditorShouldShowPluginMethods: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Studio.Scroll Past Last Line: boolean
	Property Studio.Show Whitespace: boolean
	Property Studio.Skip Closing Brackets and Quotes: boolean
	Property Studio.Tab Width: number
	Property Studio.Text Wrapping: boolean
	Property Studio."TODO" Color: Color3 [NotReplicated]
	Property Studio."function" Color: Color3 [NotReplicated]
	Property Studio."local" Color: Color3 [NotReplicated]
	Property Studio."nil" Color: Color3 [NotReplicated]
	Property Studio."self" Color: Color3 [NotReplicated]
	Property Studio.Background Color: Color3 [NotReplicated]
	Property Studio.Bool Color: Color3 [NotReplicated]
	Property Studio.Bracket Color: Color3 [NotReplicated]
	Property Studio.Built-in Function Color: Color3 [NotReplicated]
	Property Studio.Comment Color: Color3 [NotReplicated]
	Property Studio.Current Line Highlight Color: Color3 [NotReplicated]
	Property Studio.Debugger Current Line Color: Color3 [NotReplicated]
	Property Studio.Debugger Error Line Color: Color3 [NotReplicated]
	Property Studio.Doc View Code Background Color: Color3 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Studio.Error Color: Color3 [NotReplicated]
	Property Studio.Find Selection Background Color: Color3 [NotReplicated]
	Property Studio.Function Name Color: Color3 [NotReplicated]
	Property Studio.HintColor: Color3 [NotReplicated]
	Property Studio.IndentationRulerColor: Color3 {RobloxScriptSecurity} [NotReplicated]
	Property Studio.InformationColor: Color3 [NotReplicated]
	Property Studio.Keyword Color: Color3 [NotReplicated]
	Property Studio.Luau Keyword Color: Color3 [NotReplicated]
	Property Studio.Matching Word Background Color: Color3 [NotReplicated]
	Property Studio.Menu Item Background Color: Color3 [NotReplicated]
	Property Studio.Method Color: Color3 [NotReplicated]
	Property Studio.Number Color: Color3 [NotReplicated]
	Property Studio.Operator Color: Color3 [NotReplicated]
	Property Studio.Primary Text Color: Color3 [NotReplicated]
	Property Studio.Property Color: Color3 [NotReplicated]
	Property Studio.Ruler Color: Color3 [NotReplicated]
	Property Studio.Script Editor Color Preset: Enum.StudioScriptEditorColorPresets
	Property Studio.Script Editor Scrollbar Background Color: Color3 [NotReplicated]
	Property Studio.Script Editor Scrollbar Handle Color: Color3 [NotReplicated]
	Property Studio.ScriptEditorMenuBorderColor: Color3 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property Studio.Secondary Text Color: Color3 [NotReplicated]
	Property Studio.Selected Menu Item Background Color: Color3 [NotReplicated]
	Property Studio.Selected Text Color: Color3 [NotReplicated]
	Property Studio.Selection Background Color: Color3 [NotReplicated]
	Property Studio.Selection Color: Color3 [NotReplicated]
	Property Studio.String Color: Color3 [NotReplicated]
	Property Studio.Text Color: Color3 [NotReplicated]
	Property Studio.Warning Color: Color3 [NotReplicated]
	Property Studio.Whitespace Color: Color3 [NotReplicated]
	Property Studio.Active Color: Color3
	Property Studio.Active Hover Over Color: Color3
	Property Studio.Animate Hover Over: boolean
	Property Studio.Hover Animate Speed: Enum.HoverAnimateSpeed
	Property Studio.Hover Box Thickness: number {RobloxSecurity}
	Property Studio.Hover Line Thickness: number {RobloxSecurity}
	Property Studio.Hover Over Color: Color3
	Property Studio.Physical Draggers Select Scope By Default: boolean {RobloxScriptSecurity}
	Property Studio.Pivot Snap To Geometry Color: Color3 {RobloxSecurity}
	Property Studio.Select Color: Color3
	Property Studio.Selection Box Thickness: number {RobloxSecurity}
	Property Studio.Selection Line Thickness: number {RobloxSecurity}
	Property Studio.Show Hover Over: boolean
	Property Studio.Use Bounding Box Move Handles: boolean {RobloxScriptSecurity}
	Property Studio.RuntimeUndoBehavior: Enum.RuntimeUndoBehavior
	Property Studio.Show Light Guides: boolean {RobloxScriptSecurity}
	Property Studio.Show Navigation Labels: boolean {RobloxScriptSecurity}
	Property Studio.Show Navigation Mesh: boolean
	Property Studio.Show Pathfinding Links: boolean {RobloxScriptSecurity}
	Property Studio.Show Singly Selected Attachment Parent Frame: boolean {RobloxScriptSecurity}
	Function Studio:GetAvailableThemes() -> { any } {PluginSecurity}
	Event Studio.ThemeChanged() {PluginSecurity}
Class StudioAssetService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StudioAssetService:AutoSetupAvatarAsync(modelId: ContentId, progressCallback: (...any) -> ...any) -> Instance? {RobloxScriptSecurity} [Yields]
	Function StudioAssetService:ConvertToPackageUpload(uploadUrl: string, cloneInstances: { Instance }, originalInstances: { Instance }) -> () {RobloxScriptSecurity}
	Function StudioAssetService:DEPRECATED_SerializeInstances(instances: { Instance }) -> string {RobloxScriptSecurity} [Yields]
	Function StudioAssetService:FireOnUGCSubmitCompleted(cancelled: boolean) -> () {RobloxScriptSecurity}
	Function StudioAssetService:PublishPackage(instance: Instance, publishInfo: { [string]: any }) -> () {RobloxScriptSecurity}
	Function StudioAssetService:RequestAvatarAutosetupAsync(meshId: ContentId, textureId: ContentId, progressCallback: (...any) -> ...any) -> Instance? {RobloxScriptSecurity} [Yields]
	Function StudioAssetService:SerializeInstances(instances: { Instance }, groupId: number? = 0, isPackage: boolean? = false) -> string {RobloxScriptSecurity} [Yields]
	Function StudioAssetService:ShowSaveToRoblox(instances: { Instance }, assetType: any, hasSubsequent: boolean? = false) -> () {RobloxScriptSecurity}
	Function StudioAssetService:UpdatePublishedPackage(assetmetadata: { [string]: any }, rootInstance: Instance, isConvert: boolean? = false, addUndoWaypoint: boolean? = false) -> () {RobloxScriptSecurity}
	Event StudioAssetService.OnConvertToPackageResult(isSuccessful: boolean, errorMessage: string) {RobloxScriptSecurity}
	Event StudioAssetService.OnPublishPackageResult(result: { [string]: any }, errorMessage: string) {RobloxScriptSecurity}
	Event StudioAssetService.OnSaveToRoblox(instances: { Instance }, assetType: any, hasSubsequent: boolean) {RobloxScriptSecurity}
	Event StudioAssetService.OnUGCSubmitCompleted(cancelled: boolean) {RobloxScriptSecurity}
Class StudioAttachment : Instance [NotReplicated]
	Property StudioAttachment.AutoHideParent: boolean
	Property StudioAttachment.IsArrowVisible: boolean
	Property StudioAttachment.Offset: Vector2
	Property StudioAttachment.SourceAnchorPoint: Vector2
	Property StudioAttachment.TargetAnchorPoint: Vector2
Class StudioCallout : Instance [NotReplicated]
	Property StudioCallout.AnchorPoint: Vector2 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioCallout.IsArrowVisible: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioCallout.IsNextVisible: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioCallout.RowName: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioCallout.Text: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioCallout.Title: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function StudioCallout:SetOnNextClicked(onClick: (...any) -> ...any) -> () {RobloxScriptSecurity}
Class StudioData : Instance [NotCreatable] [Service]
	Property StudioData.EnableScriptCollabByDefaultOnLoad: boolean {RobloxScriptSecurity} [Hidden]
Class StudioDeviceEmulatorService : Instance [NotCreatable] [Service] [NotReplicated]
	Property StudioDeviceEmulatorService.HasMultiTouchStarted: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StudioDeviceEmulatorService.IsMultiTouchEmulationOn: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioDeviceEmulatorService.IsMultiTouchEnabled: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StudioDeviceEmulatorService.PivotPosition: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function StudioDeviceEmulatorService:EmulatePCDeviceWithResolution(deviceId: string, resolution: Vector2) -> boolean {RobloxScriptSecurity} [Yields]
	Function StudioDeviceEmulatorService:GetCurrentDeviceId() -> string {RobloxScriptSecurity} [Yields]
	Function StudioDeviceEmulatorService:GetCurrentOrientation() -> Enum.ScreenOrientation {RobloxScriptSecurity} [Yields]
	Function StudioDeviceEmulatorService:GetMaxNumTouches() -> number {RobloxScriptSecurity}
	Function StudioDeviceEmulatorService:GetTouchInBounds(index: number) -> boolean {RobloxScriptSecurity}
	Function StudioDeviceEmulatorService:GetTouchPosition(index: number) -> Vector2 {RobloxScriptSecurity}
	Function StudioDeviceEmulatorService:HasDeviceWithId(deviceId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function StudioDeviceEmulatorService:SetCurrentDeviceId(deviceId: string) -> () {RobloxScriptSecurity} [Yields]
	Function StudioDeviceEmulatorService:SetCurrentOrientation(orientation: Enum.ScreenOrientation) -> () {RobloxScriptSecurity} [Yields]
	Event StudioDeviceEmulatorService.CurrentDeviceIdChanged() {RobloxScriptSecurity}
	Event StudioDeviceEmulatorService.OrientationChanged() {RobloxScriptSecurity}
	Event StudioDeviceEmulatorService.TouchInBoundsChanged() {RobloxScriptSecurity}
	Event StudioDeviceEmulatorService.TouchPositionsChanged() {RobloxScriptSecurity}
Class StudioObjectBase : Instance [NotCreatable] [NotReplicated]
Class StudioWidget : StudioObjectBase [NotCreatable] [NotReplicated]
	Function StudioWidget:SetFixedSize(width: number, height: number) -> () {RobloxScriptSecurity}
Class StudioPublishService : Instance [NotCreatable] [Service] [NotReplicated]
	Property StudioPublishService.PublishLocked: boolean {RobloxScriptSecurity}
	Function StudioPublishService:ClearUploadNames() -> () {RobloxScriptSecurity}
	Function StudioPublishService:CloseAfterPublish(closeMode: Enum.StudioCloseMode) -> () {RobloxScriptSecurity}
	Function StudioPublishService:PublishAs(universeId: number, placeId: number, groupId: number, isPublish: boolean, publishParameters: any, willRetryOnConflict: boolean? = false, allowOpeningNewPlace: boolean? = true) -> () {RobloxScriptSecurity}
	Function StudioPublishService:PublishThenTurnOnTeamCreate() -> () {RobloxScriptSecurity}
	Function StudioPublishService:RefreshDocumentDisplayName() -> () {RobloxScriptSecurity}
	Function StudioPublishService:SetTeamCreateOnPublishInfo(shouldTurnOnTcOnPublish: boolean, newPlaceName: string) -> () {RobloxScriptSecurity}
	Function StudioPublishService:SetUniverseDisplayName(newName: string) -> () {RobloxScriptSecurity}
	Function StudioPublishService:SetUploadNames(placeName: string, universeName: string) -> () {RobloxScriptSecurity}
	Function StudioPublishService:ShowSaveOrPublishPlaceToRoblox(showGameSelect: boolean, isPublish: boolean, closeMode: Enum.StudioCloseMode) -> () {RobloxScriptSecurity}
	Event StudioPublishService.GameNameUpdated(name: string) {RobloxScriptSecurity}
	Event StudioPublishService.GamePublishCancelled() {RobloxScriptSecurity}
	Event StudioPublishService.GamePublishFinished(success: boolean, gameId: number, message: string, reason: Enum.StudioPlaceUpdateFailureReason) {RobloxScriptSecurity}
	Event StudioPublishService.OnPublishAttempt(isPublishAs: boolean) {RobloxScriptSecurity}
	Event StudioPublishService.OnSaveOrPublishPlaceToRoblox(showGameSelect: boolean, isPublish: boolean, closeMode: Enum.StudioCloseMode) {RobloxScriptSecurity}
Class StudioScriptDebugEventListener : Instance [NotCreatable] [Service] [NotReplicated]
Class StudioSdkService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StudioSdkService:GetSdk() -> Instance? {RobloxScriptSecurity}
	Function StudioSdkService:SetSdk(sdk: Instance) -> () {RobloxScriptSecurity}
Class StudioService : Instance [NotCreatable] [Service] [NotReplicated]
	Property StudioService.AlignDraggedObjects: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StudioService.DraggerSolveConstraints: boolean [ReadOnly]
	Property StudioService.DrawConstraintsOnTop: boolean [ReadOnly] [Deprecated]
	Property StudioService.GridSize: number [ReadOnly]
	Property StudioService.HoverInstance: Instance? {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property StudioService.InstalledPluginData: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StudioService.PivotSnapToGeometry: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property StudioService.RotateIncrement: number [ReadOnly]
	Property StudioService.Secrets: string {RobloxScriptSecurity}
	Property StudioService.ShowConstraintDetails: boolean [ReadOnly]
	Property StudioService.ShowWeldDetails: boolean {RobloxScriptSecurity} [ReadOnly]
	Property StudioService.UseLocalSpace: boolean [📁 LoadOnly] [NotReplicated]
	Property StudioService.ActiveScript: Instance? [ReadOnly]
	Property StudioService.StudioLocaleId: string [ReadOnly]
	Function StudioService:AnimationIdSelected(id: number) -> () {RobloxScriptSecurity}
	Function StudioService:CopyToClipboard(stringToCopy: string) -> () {RobloxScriptSecurity}
	Function StudioService:GetBadgeConfigureUrl(badgeId: number) -> string {RobloxScriptSecurity}
	Function StudioService:GetBadgeUploadUrl() -> string {RobloxScriptSecurity}
	Function StudioService:GetClassIcon(className: string) -> { [string]: any } {PluginSecurity}
	Function StudioService:GetPlaceIsPersistedToCloud() -> boolean {RobloxScriptSecurity}
	Function StudioService:GetResourceByCategory(category: string) -> { [string]: any } {RobloxScriptSecurity}
	Function StudioService:GetStartupAssetId() -> string {RobloxScriptSecurity}
	Function StudioService:GetStartupPluginId() -> string {RobloxScriptSecurity}
	Function StudioService:GetTermsOfUseUrl() -> string {RobloxScriptSecurity}
	Function StudioService:GetUserId() -> number {PluginSecurity}
	Function StudioService:GizmoRaycast(origin: Vector3, direction: Vector3, raycastParams: RaycastParams? = RaycastParams?.new()) -> RaycastResult? {PluginSecurity}
	Function StudioService:HasInternalPermission() -> boolean {RobloxScriptSecurity}
	Function StudioService:IsPluginInstalled(assetId: number) -> boolean {RobloxScriptSecurity}
	Function StudioService:IsPluginUpToDate(assetId: number, currentAssetVersion: number) -> boolean {RobloxScriptSecurity}
	Function StudioService:OpenInBrowser_DONOTUSE(url: string) -> () {RobloxScriptSecurity}
	Function StudioService:PromptImportFile(fileTypeFilter: { any }? = {}) -> Instance? {PluginSecurity} [Yields]
	Function StudioService:PromptImportFiles(fileTypeFilter: { any }? = {}) -> { Instance } {PluginSecurity} [Yields]
	Function StudioService:RequestClose(closeMode: Enum.StudioCloseMode) -> () {RobloxScriptSecurity}
	Function StudioService:SetPluginEnabled(assetId: number, state: boolean) -> () {RobloxScriptSecurity}
	Function StudioService:ShowPlaceVersionHistoryDialog(placeId: number) -> () {RobloxScriptSecurity}
	Function StudioService:ShowPublishToRoblox() -> () {RobloxScriptSecurity}
	Function StudioService:TryInstallPlugin(assetId: number, assetVersionId: number) -> () {RobloxScriptSecurity} [Yields]
	Function StudioService:UninstallPlugin(assetId: number) -> () {RobloxScriptSecurity}
	Function StudioService:UpdatePluginManagement() -> () {RobloxScriptSecurity}
	Event StudioService.OnImportFromRoblox() {RobloxScriptSecurity}
	Event StudioService.OnOpenGameSettings(pageIdentifier: string) {RobloxScriptSecurity}
	Event StudioService.OnOpenManagePackagePlugin(userId: number, assetId: number) {RobloxScriptSecurity}
	Event StudioService.OnPluginInstalledFromToolbox() {RobloxScriptSecurity}
	Event StudioService.OnPluginInstalledFromWeb(pluginId: string) {RobloxScriptSecurity}
	Event StudioService.OnPublishAsPlugin(instances: { Instance }) {RobloxScriptSecurity}
	Event StudioService.OnSaveToRoblox(instances: { Instance }) {RobloxScriptSecurity}
	Event StudioService.PromptTransformPluginCheckEnable() {RobloxScriptSecurity}
	Event StudioService.SaveLocallyAsComplete(success: boolean) {RobloxScriptSecurity}
Class StudioTheme : Instance [NotCreatable] [NotReplicated]
	Function StudioTheme:GetColor(styleguideitem: Enum.StudioStyleGuideColor, modifier: Enum.StudioStyleGuideModifier? = "Default") -> Color3 {PluginSecurity}
Class StudioUserService : Instance [NotCreatable] [Service] [NotReplicated]
	Property StudioUserService.IsLoggedIn: boolean {RobloxScriptSecurity} [ReadOnly]
Class StudioWidgetsService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StudioWidgetsService:ApplyFillInBox(target: StudioWidget) -> () {RobloxScriptSecurity}
	Function StudioWidgetsService:ApplyHighlight(target: StudioWidget, rowName: string?) -> () {RobloxScriptSecurity}
	Function StudioWidgetsService:ApplyShadows() -> () {RobloxScriptSecurity}
	Function StudioWidgetsService:ApplySpotlight(target: StudioWidget, rowName: string?) -> () {RobloxScriptSecurity}
	Function StudioWidgetsService:AttachPluginGui(target: StudioWidget, gui: PluginGui, attachment: StudioAttachment) -> () {RobloxScriptSecurity}
	Function StudioWidgetsService:GetWidgetFromLabel(label: string) -> StudioWidget {RobloxScriptSecurity}
	Function StudioWidgetsService:GetWidgetFromPluginGui(gui: PluginGui) -> StudioWidget {RobloxScriptSecurity}
	Function StudioWidgetsService:HideSpotlight() -> () {RobloxScriptSecurity}
Class StyleBase : Instance [NotCreatable]
	Function StyleBase:GetStyleRules() -> { Instance }
	Function StyleBase:InsertStyleRule(rule: StyleRule, index: number?) -> ()
	Function StyleBase:SetStyleRules(rules: { Instance }) -> ()
	Event StyleBase.StyleRulesChanged()
Class StyleRule : StyleBase
	Property StyleRule.Index: number [📁 LoadOnly] [Hidden] [NotScriptable]
	Property StyleRule.Priority: number
	Property StyleRule.PropertiesSerialize: BinaryString [Hidden] [NotScriptable]
	Property StyleRule.Selector: string
	Property StyleRule.SelectorError: string [ReadOnly]
	Function StyleRule:GetProperties() -> { [string]: any }
	Function StyleRule:GetPropertiesResolved() -> { [string]: any } {RobloxScriptSecurity}
	Function StyleRule:GetProperty(name: string) -> any
	Function StyleRule:GetPropertyResolved(name: string) -> any {RobloxScriptSecurity}
	Function StyleRule:SetProperties(table: { [string]: any }) -> ()
	Function StyleRule:SetProperty(name: string, value: any) -> ()
	Event StyleRule.StyleRulePropertyChanged(styleProperty: string) {RobloxScriptSecurity}
Class StyleSheet : StyleBase
	Function StyleSheet:GetDerives() -> { Instance }
	Function StyleSheet:SetDerives(derives: { Instance }) -> ()
Class StyleDerive : Instance
	Property StyleDerive.Index: number [Hidden] [NotScriptable]
	Property StyleDerive.StyleSheet: StyleSheet?
Class StyleLink : Instance
	Property StyleLink.StyleSheet: StyleSheet?
Class StylingService : Instance [NotCreatable] [Service] [NotReplicated]
	Function StylingService:GetAppliedStyles(instance: Instance) -> { any } {RobloxScriptSecurity}
	Function StylingService:GetStyleInfo(style: StyleRule) -> { [string]: any } {RobloxScriptSecurity}
	Function StylingService:GetStyleSheetDerivesChain(styleSheet: StyleSheet) -> { Instance } {RobloxScriptSecurity}
	Function StylingService:GetStyleSheetInfo(styleSheet: StyleSheet) -> { [string]: any } {RobloxScriptSecurity}
	Function StylingService:UpdateUnitTestOnly() -> () {RobloxScriptSecurity}
Class SurfaceAppearance : Instance
	Property SurfaceAppearance.AlphaMode: Enum.AlphaMode {PluginSecurity}
	Property SurfaceAppearance.Color: Color3
	Property SurfaceAppearance.ColorMap: ContentId {PluginSecurity}
	Property SurfaceAppearance.MetalnessMap: ContentId {PluginSecurity}
	Property SurfaceAppearance.NormalMap: ContentId {PluginSecurity}
	Property SurfaceAppearance.RoughnessMap: ContentId {PluginSecurity}
	Property SurfaceAppearance.TexturePack: ContentId {RobloxSecurity}
Class TaskScheduler : Instance [NotCreatable] [Service]
	Property TaskScheduler.ThreadPoolConfig: Enum.ThreadPoolConfig
	Property TaskScheduler.SchedulerDutyCycle: number [ReadOnly]
	Property TaskScheduler.SchedulerRate: number [ReadOnly]
	Property TaskScheduler.ThreadPoolSize: number [ReadOnly]
Class Team : Instance
	Property Team.AutoAssignable: boolean
	Property Team.AutoColorCharacters: boolean [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property Team.ChildOrder: number {RobloxScriptSecurity} [Hidden]
	Property Team.Score: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Property Team.TeamColor: BrickColor
	Function Team:GetPlayers() -> { Instance } {🧬Safe}
	Event Team.PlayerAdded(player: Player)
	Event Team.PlayerRemoved(player: Player)
Class TeamCreateData : Instance [NotCreatable] [Service]
	Property TeamCreateData.InitialCameraCFrame: CFrame {RobloxSecurity} [Hidden] [NotScriptable]
Class TeamCreatePublishService : Instance [NotCreatable] [Service]
Class TeamCreateService : Instance [NotCreatable] [Service] [NotReplicated]
	Function TeamCreateService:CloseGameIfUserDoesntHavePerms() -> () {RobloxScriptSecurity}
	Event TeamCreateService.ToggleManageCollaborators() {RobloxScriptSecurity}
Class Teams : Instance [NotCreatable] [Service]
	Function Teams:GetTeams() -> { Instance }
	Function Teams:RebalanceTeams() -> () [Deprecated]
Class TeleportAsyncResult : Instance [NotCreatable]
	Property TeleportAsyncResult.PrivateServerId: string [ReadOnly]
	Property TeleportAsyncResult.ReservedServerAccessCode: string [ReadOnly]
Class TeleportOptions : Instance
	Property TeleportOptions.ReservedServerAccessCode: string
	Property TeleportOptions.ServerInstanceId: string
	Property TeleportOptions.ShouldReserveServer: boolean
	Function TeleportOptions:GetTeleportData() -> any
	Function TeleportOptions:SetTeleportData(teleportData: any) -> ()
Class TeleportService : Instance [NotCreatable] [Service]
	Property TeleportService.CustomizedTeleportUI: boolean [📁 LoadOnly] [NotReplicated] [Deprecated]
	Function TeleportService:Block() -> () {RobloxScriptSecurity}
	Function TeleportService:GetArrivingTeleportGui() -> Instance?
	Function TeleportService:GetLocalPlayerTeleportData() -> any
	Function TeleportService:GetPlayerPlaceInstanceAsync(userId: number) -> ...any [Yields]
	Function TeleportService:GetTeleportSetting(setting: string) -> any
	Function TeleportService:ReserveServer(placeId: number) -> ...any [Yields]
	Function TeleportService:SetTeleportGui(gui: Instance) -> ()
	Function TeleportService:SetTeleportSetting(setting: string, value: any) -> ()
	Function TeleportService:Teleport(placeId: number, player: Instance? = nil, teleportData: any, customLoadingScreen: Instance? = nil) -> ()
	Function TeleportService:TeleportAsync(placeId: number, players: { Instance }, teleportOptions: Instance? = nil) -> Instance? [Yields]
	Function TeleportService:TeleportCancel() -> () {RobloxScriptSecurity}
	Function TeleportService:TeleportPartyAsync(placeId: number, players: { Instance }, teleportData: any, customLoadingScreen: Instance? = nil) -> string [Yields]
	Function TeleportService:TeleportToPlaceInstance(placeId: number, instanceId: string, player: Instance? = nil, spawnName: string? = "", teleportData: any, customLoadingScreen: Instance? = nil) -> ()
	Function TeleportService:TeleportToPrivateServer(placeId: number, reservedServerAccessCode: string, players: { Instance }, spawnName: string? = "", teleportData: any, customLoadingScreen: Instance? = nil) -> ()
	Function TeleportService:TeleportToSpawnByName(placeId: number, spawnName: string, player: Instance? = nil, teleportData: any, customLoadingScreen: Instance? = nil) -> ()
	Function TeleportService:UnblockAsync() -> ...any {RobloxScriptSecurity} [Yields]
	Event TeleportService.LocalPlayerArrivedFromTeleport(loadingGui: Instance, dataTable: any)
	Event TeleportService.MenuTeleportAttempt() {RobloxScriptSecurity}
	Event TeleportService.SendVIPData(player: Instance, vipServerCode: string, dmPlaceID: number) {RobloxSecurity} [Hidden]
	Event TeleportService.TeleportInProgress(player: Instance, teleportInfo: { [string]: any }) {RobloxSecurity} [Hidden]
	Event TeleportService.TeleportInitFailed(player: Instance, teleportResult: Enum.TeleportResult, errorMessage: string, placeId: number, teleportOptions: Instance)
	Event TeleportService.TeleportInitFailedInternal(player: Instance, teleportResult: Enum.TeleportResult, errorMessage: string, guid: string) {RobloxSecurity} [Hidden]
Class TemporaryCageMeshProvider : Instance [NotCreatable] [Service] [NotReplicated]
Class TemporaryScriptService : Instance [NotCreatable] [Service] [NotReplicated]
Class TerrainDetail : Instance
	Property TerrainDetail.ColorMap: ContentId {PluginSecurity}
	Property TerrainDetail.Face: Enum.TerrainFace
	Property TerrainDetail.MaterialPattern: Enum.MaterialPattern
	Property TerrainDetail.MetalnessMap: ContentId {PluginSecurity}
	Property TerrainDetail.NormalMap: ContentId {PluginSecurity}
	Property TerrainDetail.RoughnessMap: ContentId {PluginSecurity}
	Property TerrainDetail.StudsPerTile: number
	Property TerrainDetail.TexturePack: ContentId [Hidden] [NotScriptable]
Class TerrainRegion : Instance
	Property TerrainRegion.ExtentsMax: Vector3int16 [Hidden] [NotScriptable]
	Property TerrainRegion.ExtentsMin: Vector3int16 [Hidden] [NotScriptable]
	Property TerrainRegion.GridV3: BinaryString [📁 LoadOnly] [Hidden] [WriteOnly] [NotReplicated] [NotScriptable]
	Property TerrainRegion.IsSmooth: boolean [ReadOnly] [Deprecated]
	Property TerrainRegion.SizeInCells: Vector3 [ReadOnly]
	Property TerrainRegion.SmoothGrid: BinaryString [Hidden] [NotReplicated] [NotScriptable]
	Function TerrainRegion:ApplyTransform(rotation: CFrame, size: Vector3) -> () {RobloxScriptSecurity}
	Function TerrainRegion:ApplyTransformSubregion(rotation: CFrame, size: Vector3, region: Region3int16) -> TerrainRegion {RobloxScriptSecurity}
	Function TerrainRegion:ConvertToSmooth() -> () {PluginSecurity} [Deprecated]
	Function TerrainRegion:GetRegionWireframe() -> { any } {RobloxScriptSecurity}
Class TestService : Instance [Service]
	Property TestService.Description: string
	Property TestService.AutoRuns: boolean
	Property TestService.Is30FpsThrottleEnabled: boolean
	Property TestService.IsPhysicsEnvironmentalThrottled: boolean
	Property TestService.IsSleepAllowed: boolean
	Property TestService.ErrorCount: number [ReadOnly]
	Property TestService.TestCount: number [ReadOnly]
	Property TestService.WarnCount: number [ReadOnly]
	Property TestService.ExecuteWithStudioRun: boolean
	Property TestService.NumberOfPlayers: number
	Property TestService.SimulateSecondsLag: number
	Property TestService.Timeout: number
	Function TestService:Check(condition: boolean, description: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Checkpoint(text: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Done() -> ()
	Function TestService:Error(description: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Fail(description: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Message(text: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Require(condition: boolean, description: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:Run() -> () {PluginSecurity} [Yields]
	Function TestService:ScopeTime() -> { [string]: any }
	Function TestService:Warn(condition: boolean, description: string, source: Instance? = nil, line: number? = 0) -> ()
	Function TestService:isFeatureEnabled(name: string) -> boolean
	Event TestService.ServerCollectConditionalResult(condition: boolean, text: string, script: Instance, line: number)
	Event TestService.ServerCollectResult(text: string, script: Instance, line: number)
Class TextBoxService : Instance [NotCreatable] [Service]
Class TextChannel : Instance
	Function TextChannel:AddUserAsync(userId: number) -> ...any [Yields]
	Function TextChannel:DisplaySystemMessage(systemMessage: string, metadata: string? = "") -> TextChatMessage
	Function TextChannel:SendAsync(message: string, metadata: string? = "") -> TextChatMessage [Yields]
	Event TextChannel.MessageReceived(incomingMessage: TextChatMessage)
	Callback TextChannel.OnIncomingMessage(message: TextChatMessage) -> ...any
	Callback TextChannel.ShouldDeliverCallback(message: TextChatMessage, textSource: TextSource) -> ...any
Class TextChatCommand : Instance
	Property TextChatCommand.AutocompleteVisible: boolean
	Property TextChatCommand.Enabled: boolean
	Property TextChatCommand.PrimaryAlias: string
	Property TextChatCommand.SecondaryAlias: string
	Event TextChatCommand.Triggered(originTextSource: TextSource, unfilteredText: string)
Class TextChatConfigurations : Instance [NotCreatable] [NotReplicated]
Class BubbleChatConfiguration : TextChatConfigurations [NotCreatable]
	Property BubbleChatConfiguration.BackgroundColor3: Color3
	Property BubbleChatConfiguration.BackgroundTransparency: number
	Property BubbleChatConfiguration.Font: Enum.Font [Hidden]
	Property BubbleChatConfiguration.FontFace: Font
	Property BubbleChatConfiguration.TailVisible: boolean
	Property BubbleChatConfiguration.TextColor3: Color3
	Property BubbleChatConfiguration.TextSize: number
	Property BubbleChatConfiguration.AdorneeName: string
	Property BubbleChatConfiguration.BubbleDuration: number
	Property BubbleChatConfiguration.BubblesSpacing: number
	Property BubbleChatConfiguration.Enabled: boolean
	Property BubbleChatConfiguration.LocalPlayerStudsOffset: Vector3
	Property BubbleChatConfiguration.MaxBubbles: number
	Property BubbleChatConfiguration.MaxDistance: number
	Property BubbleChatConfiguration.MinimizeDistance: number
	Property BubbleChatConfiguration.VerticalStudsOffset: number
Class ChannelTabsConfiguration : TextChatConfigurations [NotCreatable]
	Property ChannelTabsConfiguration.BackgroundColor3: Color3
	Property ChannelTabsConfiguration.BackgroundTransparency: number
	Property ChannelTabsConfiguration.FontFace: Font
	Property ChannelTabsConfiguration.HoverBackgroundColor3: Color3
	Property ChannelTabsConfiguration.SelectedTabTextColor3: Color3
	Property ChannelTabsConfiguration.TextColor3: Color3
	Property ChannelTabsConfiguration.TextSize: number
	Property ChannelTabsConfiguration.TextStrokeColor3: Color3
	Property ChannelTabsConfiguration.TextStrokeTransparency: number
	Property ChannelTabsConfiguration.Enabled: boolean
	Property ChannelTabsConfiguration.AbsolutePosition: Vector2 [ReadOnly]
	Property ChannelTabsConfiguration.AbsoluteSize: Vector2 [ReadOnly]
	Function ChannelTabsConfiguration:SetAbsolutePosition(value: Vector2) -> () {RobloxScriptSecurity}
	Function ChannelTabsConfiguration:SetAbsoluteSize(value: Vector2) -> () {RobloxScriptSecurity}
Class ChatInputBarConfiguration : TextChatConfigurations [NotCreatable]
	Property ChatInputBarConfiguration.BackgroundColor3: Color3
	Property ChatInputBarConfiguration.BackgroundTransparency: number
	Property ChatInputBarConfiguration.FontFace: Font
	Property ChatInputBarConfiguration.PlaceholderColor3: Color3
	Property ChatInputBarConfiguration.TextColor3: Color3
	Property ChatInputBarConfiguration.TextSize: number
	Property ChatInputBarConfiguration.TextStrokeColor3: Color3
	Property ChatInputBarConfiguration.TextStrokeTransparency: number
	Property ChatInputBarConfiguration.AutocompleteEnabled: boolean
	Property ChatInputBarConfiguration.Enabled: boolean
	Property ChatInputBarConfiguration.KeyboardKeyCode: Enum.KeyCode
	Property ChatInputBarConfiguration.AbsolutePosition: Vector2 [ReadOnly] {🧬Unsafe}
	Property ChatInputBarConfiguration.AbsolutePositionWrite: Vector2 {RobloxScriptSecurity} [Hidden]
	Property ChatInputBarConfiguration.AbsoluteSize: Vector2 [ReadOnly] {🧬Unsafe}
	Property ChatInputBarConfiguration.AbsoluteSizeWrite: Vector2 {RobloxScriptSecurity} [Hidden]
	Property ChatInputBarConfiguration.IsFocused: boolean [ReadOnly] {🧬Unsafe}
	Property ChatInputBarConfiguration.IsFocusedWrite: boolean {RobloxScriptSecurity} [Hidden]
	Property ChatInputBarConfiguration.TargetTextChannel: TextChannel?
	Property ChatInputBarConfiguration.TextBox: TextBox?
Class ChatWindowConfiguration : TextChatConfigurations [NotCreatable]
	Property ChatWindowConfiguration.BackgroundColor3: Color3
	Property ChatWindowConfiguration.BackgroundTransparency: number
	Property ChatWindowConfiguration.FontFace: Font
	Property ChatWindowConfiguration.TextColor3: Color3
	Property ChatWindowConfiguration.TextSize: number
	Property ChatWindowConfiguration.TextStrokeColor3: Color3
	Property ChatWindowConfiguration.TextStrokeTransparency: number
	Property ChatWindowConfiguration.Enabled: boolean
	Property ChatWindowConfiguration.HeightScale: number
	Property ChatWindowConfiguration.WidthScale: number
	Property ChatWindowConfiguration.AbsolutePosition: Vector2 [ReadOnly] {🧬Unsafe}
	Property ChatWindowConfiguration.AbsolutePositionWrite: Vector2 {RobloxScriptSecurity} [Hidden]
	Property ChatWindowConfiguration.AbsoluteSize: Vector2 [ReadOnly] {🧬Unsafe}
	Property ChatWindowConfiguration.AbsoluteSizeWrite: Vector2 {RobloxScriptSecurity} [Hidden]
	Property ChatWindowConfiguration.HorizontalAlignment: Enum.HorizontalAlignment {🧬Unsafe}
	Property ChatWindowConfiguration.VerticalAlignment: Enum.VerticalAlignment {🧬Unsafe}
	Function ChatWindowConfiguration:DeriveNewMessageProperties() -> ChatWindowMessageProperties
Class TextChatMessage : Instance [NotCreatable]
	Property TextChatMessage.BubbleChatMessageProperties: BubbleChatMessageProperties?
	Property TextChatMessage.ChatWindowMessageProperties: ChatWindowMessageProperties?
	Property TextChatMessage.MessageId: string
	Property TextChatMessage.Metadata: string
	Property TextChatMessage.PrefixText: string
	Property TextChatMessage.Status: Enum.TextChatMessageStatus
	Property TextChatMessage.Text: string
	Property TextChatMessage.TextChannel: TextChannel?
	Property TextChatMessage.TextSource: TextSource?
	Property TextChatMessage.Timestamp: DateTime
	Property TextChatMessage.Translation: string
Class TextChatMessageProperties : Instance
	Property TextChatMessageProperties.PrefixText: string
	Property TextChatMessageProperties.Text: string
	Property TextChatMessageProperties.Translation: string
Class BubbleChatMessageProperties : TextChatMessageProperties
	Property BubbleChatMessageProperties.BackgroundColor3: Color3
	Property BubbleChatMessageProperties.BackgroundTransparency: number
	Property BubbleChatMessageProperties.FontFace: Font
	Property BubbleChatMessageProperties.TailVisible: boolean
	Property BubbleChatMessageProperties.TextColor3: Color3
	Property BubbleChatMessageProperties.TextSize: number
Class ChatWindowMessageProperties : TextChatMessageProperties [NotCreatable]
	Property ChatWindowMessageProperties.FontFace: Font
	Property ChatWindowMessageProperties.PrefixTextProperties: ChatWindowMessageProperties?
	Property ChatWindowMessageProperties.TextColor3: Color3
	Property ChatWindowMessageProperties.TextSize: number
	Property ChatWindowMessageProperties.TextStrokeColor3: Color3
	Property ChatWindowMessageProperties.TextStrokeTransparency: number
Class TextChatService : Instance [NotCreatable] [Service]
	Property TextChatService.ChatTranslationEnabled: boolean {✏️RobloxScriptSecurity} [NotReplicated]
	Property TextChatService.ChatTranslationFTUXShown: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextChatService.ChatTranslationToggleEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property TextChatService.ChatVersion: Enum.ChatVersion {✏️NotAccessibleSecurity}
	Property TextChatService.CreateDefaultCommands: boolean {✏️PluginSecurity}
	Property TextChatService.CreateDefaultTextChannels: boolean {✏️PluginSecurity}
	Function TextChatService:CanUserChatAsync(userId: number) -> boolean [Yields]
	Function TextChatService:CanUsersChatAsync(userIdFrom: number, userIdTo: number) -> boolean [Yields]
	Function TextChatService:CanUsersWhisperAsync(fromUserId: number, toUserId: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function TextChatService:DisplayBubble(partOrCharacter: Instance, message: string) -> ()
	Event TextChatService.BubbleDisplayed(partOrCharacter: Instance, textChatMessage: TextChatMessage)
	Event TextChatService.ClientToServerMessageReplicateSignal(text: string, prefixText: string, metadata: string, messageId: string, textSource: TextSource, textChannel: TextChannel, status: Enum.TextChatMessageStatus) {RobloxSecurity} [Hidden]
	Event TextChatService.ClientToServerMessageReplicateSignalV2(text: string, metadata: string, messageId: string, textSource: TextSource, textChannel: TextChannel) {RobloxSecurity} [Hidden]
	Event TextChatService.MessageReceived(textChatMessage: TextChatMessage)
	Event TextChatService.SendingMessage(textChatMessage: TextChatMessage)
	Event TextChatService.ServerToClientMessageReplicateSignal(text: string, prefixText: string, metadata: string, messageId: string, textSource: TextSource, textChannel: TextChannel, timestamp: number, status: Enum.TextChatMessageStatus) {RobloxSecurity} [Hidden]
	Event TextChatService.ServerToClientMessageReplicateSignalV2(data: { [string]: any }) {RobloxSecurity} [Hidden]
	Callback TextChatService.OnBubbleAdded(message: TextChatMessage, adornee: Instance) -> ...any
	Callback TextChatService.OnChatWindowAdded(message: TextChatMessage) -> ...any
	Callback TextChatService.OnIncomingMessage(message: TextChatMessage) -> ...any
Class TextFilterResult : Instance [NotCreatable] [NotReplicated]
	Function TextFilterResult:GetChatForUserAsync(toUserId: number) -> string [Yields]
	Function TextFilterResult:GetNonChatStringForBroadcastAsync() -> string [Yields]
	Function TextFilterResult:GetNonChatStringForUserAsync(toUserId: number) -> string [Yields]
Class TextFilterTranslatedResult : Instance [NotCreatable] [NotReplicated]
	Property TextFilterTranslatedResult.SourceLanguage: string [ReadOnly]
	Property TextFilterTranslatedResult.SourceText: TextFilterResult? [ReadOnly]
	Function TextFilterTranslatedResult:GetTranslationForLocale(locale: string) -> TextFilterResult
	Function TextFilterTranslatedResult:GetTranslations() -> { [string]: any }
Class TextService : Instance [NotCreatable] [Service] [NotReplicated]
	Function TextService:FilterAndTranslateStringAsync(stringToFilter: string, fromUserId: number, targetLocales: { any }, textContext: Enum.TextFilterContext? = "PrivateChat") -> TextFilterTranslatedResult [Yields]
	Function TextService:FilterStringAsync(stringToFilter: string, fromUserId: number, textContext: Enum.TextFilterContext? = "PrivateChat") -> TextFilterResult [Yields]
	Function TextService:GetFamilyInfoAsync(assetId: ContentId) -> { [string]: any } [Yields]
	Function TextService:GetFontMemoryData() -> { [string]: any } {RobloxScriptSecurity}
	Function TextService:GetTextBoundsAsync(params: GetTextBoundsParams) -> Vector2 [Yields]
	Function TextService:GetTextSize(string: string, fontSize: number, font: Enum.Font, frameSize: Vector2) -> Vector2
	Function TextService:SetResolutionScale(scale: number) -> () {RobloxScriptSecurity}
Class TextSource : Instance [NotCreatable]
	Property TextSource.CanSend: boolean
	Property TextSource.UserId: number [ReadOnly]
	Property TextSource.UserIdReplicated: number [Hidden] [NotScriptable]
Class TextureGenerationPartGroup : Instance [NotCreatable] [NotReplicated]
	Function TextureGenerationPartGroup:GetInstances() -> { Instance } {RobloxScriptSecurity}
	Function TextureGenerationPartGroup:GetMeshIdsHash() -> string {RobloxScriptSecurity}
Class TextureGenerationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function TextureGenerationService:CancelGenerationRequest(jobUuid: string) -> () {RobloxScriptSecurity}
	Function TextureGenerationService:CreatePartGroup(instances: { Instance }) -> TextureGenerationPartGroup {RobloxScriptSecurity}
	Function TextureGenerationService:GenerateTexture(previewJobId: string) -> { [string]: any } {RobloxScriptSecurity}
	Function TextureGenerationService:GetQuotasAsync() -> { [string]: any } {RobloxScriptSecurity} [Yields]
	Function TextureGenerationService:PreviewTexture(partGroup: TextureGenerationPartGroup, prompt: string, options: { [string]: any }) -> { [string]: any } {RobloxScriptSecurity}
	Event TextureGenerationService.GenerationNotificationSignal(notificationData: { [string]: any }) {RobloxScriptSecurity}
	Event TextureGenerationService.PreviewNotificationSignal(notificationData: { [string]: any }) {RobloxScriptSecurity}
Class TextureGenerationUnwrappingRequest : Instance [NotCreatable] [NotReplicated]
	Function TextureGenerationUnwrappingRequest:ApplyToDataModel(partGroup: TextureGenerationPartGroup) -> TextureGenerationPartGroup {RobloxScriptSecurity}
	Function TextureGenerationUnwrappingRequest:GetPartGroup() -> TextureGenerationPartGroup {RobloxScriptSecurity}
Class ThirdPartyUserService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ThirdPartyUserService:GetUserPlatformId() -> string {RobloxScriptSecurity}
	Function ThirdPartyUserService:GetUserPlatformName() -> string {RobloxScriptSecurity}
	Function ThirdPartyUserService:HaveActiveUser() -> boolean {RobloxScriptSecurity}
	Function ThirdPartyUserService:IsOver13() -> boolean {RobloxScriptSecurity}
	Function ThirdPartyUserService:RegisterActiveUser(gamepadId: Enum.UserInputType) -> number {RobloxScriptSecurity} [Yields]
	Function ThirdPartyUserService:ReturnToEngagement() -> () {RobloxScriptSecurity}
	Function ThirdPartyUserService:ShowAccountPicker() -> () {RobloxScriptSecurity}
	Event ThirdPartyUserService.ActiveUserSignedOut(signOutStatus: number) {RobloxScriptSecurity}
Class ThreadState : Instance [NotCreatable] [NotReplicated]
	Property ThreadState.FrameCount: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ThreadState.ThreadId: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ThreadState.ThreadName: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property ThreadState.Populated: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function ThreadState:GetFrame(index: number) -> Instance? {RobloxScriptSecurity}
Class TimerService : Instance [NotCreatable] [Service]
Class ToastNotificationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function ToastNotificationService:HideNotification(notificationId: string) -> () {RobloxScriptSecurity}
	Function ToastNotificationService:ShowNotification(message: string, notificationId: string) -> () {RobloxScriptSecurity}
Class TouchInputService : Instance [NotCreatable] [Service]
Class TouchTransmitter : Instance [NotCreatable] [NotBrowsable]
Class TracerService : Instance [NotCreatable] [Service] [NotReplicated]
	Function TracerService:FinishSpan(spanId: string) -> () {RobloxScriptSecurity}
	Function TracerService:StartSpan(name: string, parentId: string) -> string {RobloxScriptSecurity}
Class TrackerLodController : Instance [NotCreatable] [NotReplicated]
	Property TrackerLodController.AudioMode: Enum.TrackerLodFlagMode
	Property TrackerLodController.VideoExtrapolationMode: Enum.TrackerExtrapolationFlagMode
	Property TrackerLodController.VideoLodMode: Enum.TrackerLodValueMode
	Property TrackerLodController.VideoMode: Enum.TrackerLodFlagMode
	Function TrackerLodController:getExtrapolation() -> number {RobloxScriptSecurity}
	Function TrackerLodController:getVideoLod() -> number {RobloxScriptSecurity}
	Function TrackerLodController:isAudioEnabled() -> boolean {RobloxScriptSecurity}
	Function TrackerLodController:isVideoEnabled() -> boolean {RobloxScriptSecurity}
	Event TrackerLodController.UpdateState() {RobloxScriptSecurity}
Class TrackerStreamAnimation : Instance [NotReplicated]
Class Trail : Instance
	Property Trail.Brightness: number
	Property Trail.Color: ColorSequence
	Property Trail.FaceCamera: boolean
	Property Trail.LightEmission: number
	Property Trail.LightInfluence: number
	Property Trail.LocalTransparencyModifier: number [Hidden] [NotReplicated]
	Property Trail.Texture: ContentId
	Property Trail.TextureLength: number
	Property Trail.TextureMode: Enum.TextureMode
	Property Trail.Transparency: NumberSequence
	Property Trail.Attachment0: Attachment?
	Property Trail.Attachment1: Attachment?
	Property Trail.Enabled: boolean
	Property Trail.Lifetime: number
	Property Trail.MaxLength: number
	Property Trail.MinLength: number
	Property Trail.WidthScale: NumberSequence
	Function Trail:Clear() -> ()
	Event Trail.OnClearRequested() [Hidden]
Class Translator : Instance [NotCreatable] [NotReplicated]
	Property Translator.LocaleId: string [ReadOnly]
	Function Translator:FormatByKey(key: string, args: any) -> string
	Function Translator:RobloxOnlyTranslate(context: Instance, text: string) -> string {RobloxScriptSecurity}
	Function Translator:Translate(context: Instance, text: string) -> string
Class TutorialService : Instance [NotCreatable] [Service] [NotReplicated]
	Function TutorialService:GetMainViewSessionId() -> string {RobloxScriptSecurity}
	Function TutorialService:GetStudioWidgetFromLabel(label: string) -> StudioWidget {RobloxScriptSecurity}
	Function TutorialService:GetTutorialIDToLaunch() -> string {RobloxScriptSecurity}
	Function TutorialService:HasUserCompletedTutorial() -> boolean {RobloxScriptSecurity}
	Function TutorialService:HideWidgets(commaSeparatedNames: string) -> boolean {RobloxScriptSecurity}
	Function TutorialService:PromptClosePlace() -> () {RobloxScriptSecurity}
	Function TutorialService:SetTutorialCompletionStatus(completed: boolean) -> () {RobloxScriptSecurity}
	Function TutorialService:ShouldLaunchTutorial() -> boolean {RobloxScriptSecurity}
	Function TutorialService:ShowWidgets(commaSeparatedNames: string) -> boolean {RobloxScriptSecurity}
Class TweenBase : Instance [NotCreatable] [NotBrowsable]
	Property TweenBase.PlaybackState: Enum.PlaybackState [ReadOnly]
	Function TweenBase:Cancel() -> ()
	Function TweenBase:Pause() -> ()
	Function TweenBase:Play() -> ()
	Event TweenBase.Completed(playbackState: Enum.PlaybackState)
Class Tween : TweenBase
	Property Tween.Instance: Instance? [ReadOnly]
	Property Tween.TweenInfo: TweenInfo [ReadOnly]
Class TweenService : Instance [NotCreatable] [Service]
	Function TweenService:Create(instance: Instance, tweenInfo: TweenInfo, propertyTable: { [string]: any }) -> Tween
	Function TweenService:GetValue(alpha: number, easingStyle: Enum.EasingStyle, easingDirection: Enum.EasingDirection) -> number
	Function TweenService:SmoothDamp(current: any, target: any, velocity: any, smoothTime: number, maxSpeed: number?, dt: number?) -> (any, any)
Class UGCAvatarService : Instance [NotCreatable] [Service]
Class UGCValidationService : Instance [NotCreatable] [Service] [NotReplicated]
	Function UGCValidationService:CalculateEditableMeshTotalSurfaceArea(editableMesh: EditableMesh, meshScale: Vector3) -> number {RobloxScriptSecurity}
	Function UGCValidationService:CalculateEditableMeshUniqueUVCount(editableMesh: EditableMesh) -> number {RobloxScriptSecurity}
	Function UGCValidationService:CalculateTotalSurfaceArea(meshId: string, meshScale: Vector3) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:CalculateUniqueUVCount(meshId: string) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:CanLoadAsset(assetId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:CheckEditableMeshInCameraFrustum(editableMesh: EditableMesh, meshScale: Vector3, handleWorldCF: CFrame, cameraWorldCF: CFrame) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:CheckMeshInCameraFrustum(meshId: string, meshScale: Vector3, handleWorldCF: CFrame, cameraWorldCF: CFrame) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:CompareTextureOverlapByteString(byteStringBaseline: string, byteStringFollowup: string) -> { any } {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:CompareTextureOverlapTextureId(textureIdBaseline: string, textureIdFollowup: string) -> { any } {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:FetchAssetWithFormat(url: ContentId, assetFormat: string) -> { Instance } {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetDynamicHeadEditableMeshInactiveControls(editableMesh: EditableMesh, controlNames: { any }) -> ...any {RobloxScriptSecurity}
	Function UGCValidationService:GetDynamicHeadMeshInactiveControls(meshId: string, controlNames: { any }) -> ...any {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetEditableImageSize(editableImage: EditableImage) -> Vector2 {RobloxScriptSecurity}
	Function UGCValidationService:GetEditableMeshMaxNearbyVerticesCollisions(editableMesh: EditableMesh, meshScale: Vector3) -> number {RobloxScriptSecurity}
	Function UGCValidationService:GetEditableMeshTriCount(editableMesh: EditableMesh) -> number {RobloxScriptSecurity}
	Function UGCValidationService:GetEditableMeshVertColors(editableMesh: EditableMesh) -> { any } {RobloxScriptSecurity}
	Function UGCValidationService:GetEditableMeshVerticesSimilarityRate(editableMesh: EditableMesh, meshScale: Vector3) -> number {RobloxScriptSecurity}
	Function UGCValidationService:GetEditableMeshVerts(editableMesh: EditableMesh) -> { any } {RobloxScriptSecurity}
	Function UGCValidationService:GetImageTransparencyWithByteString(textureId: string) -> number {RobloxScriptSecurity}
	Function UGCValidationService:GetImageTransparencyWithTextureID(textureId: string) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetMaxNearbyVerticesCollisions(meshId: string, meshScale: Vector3) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetMeshTriCount(meshId: string) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetMeshVertColors(meshId: string) -> { any } {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetMeshVerticesSimilarityRate(meshId: string, meshScale: Vector3) -> number {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetMeshVerts(meshId: string) -> { any } {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:GetPropertyValue(instance: Instance, property: string) -> any {RobloxScriptSecurity}
	Function UGCValidationService:GetTextureSize(textureId: string) -> Vector2 {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:IsEditableMeshNumCoplanarIntersectionsOverLimit(editableMesh: EditableMesh, limit: number, meshScale: Vector3, intersectBackFaces: boolean) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:IsNumCoplanarIntersectionsOverLimit(meshId: string, limit: number, meshScale: Vector3, intersectBackFaces: boolean) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:RegisterUGCValidationFunction(setFunction: (...any) -> ...any) -> () {RobloxScriptSecurity}
	Function UGCValidationService:ReportUGCValidationTelemetry(assetType: string, data: { [string]: any }) -> () {RobloxScriptSecurity}
	Function UGCValidationService:ResetCollisionFidelity(meshPart: Instance, collisionFidelity: Enum.CollisionFidelity? = "Box") -> () {RobloxScriptSecurity}
	Function UGCValidationService:ResetCollisionFidelityWithEditableMeshDataLua(meshPart: MeshPart, editableMesh: EditableMesh, collisionFidelity: Enum.CollisionFidelity? = "Box") -> () {RobloxScriptSecurity}
	Function UGCValidationService:SetMeshIdBlocking(meshPart: Instance, meshId: string) -> () {RobloxScriptSecurity}
	Function UGCValidationService:ValidateCageMeshIntersection(innerCageMeshId: string, outerCageMeshId: string, refMeshId: string) -> ...any {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateCageNonManifoldAndHoles(meshId: string) -> ...any {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateCageUVCoincident(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateCageUVTriangleArea(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateDynamicHeadEditableMesh(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateDynamicHeadMesh(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateEditableImageNumTextureChannels(editableImage: EditableImage, numTextureChannelsRequired: number) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableImageSize(editableImage: EditableImage) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshBounds(editableMesh: EditableMesh, meshScale: Vector3, boundsOffset: Vector3, attachmentCF: CFrame, handleCF: CFrame) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshCageMeshIntersection(innerCage: EditableMesh, outerCage: EditableMesh, refMesh: EditableMesh) -> ...any {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshCageNonManifoldAndHoles(editableMesh: EditableMesh) -> ...any {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshCageUVCoincident(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshCageUVTriangleArea(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshFullBodyCageDeletion(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshMisMatchUV(innerCage: EditableMesh, outerCage: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshOverlappingVertices(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshTriangleArea(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshTriangles(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshUVSpace(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshUVValuesInReference(referenceValues: { any }, editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshUniqueUVCount(editableMesh: EditableMesh, numRequired: number) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateEditableMeshVertColors(editableMesh: EditableMesh, includeAlpha: boolean? = true) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateFullBodyCageDeletion(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateImageTransparencyThresholdByteString(image: string, threshold: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateImageTransparencyThresholdByteString_V2(image: string, threshold: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateImageTransparencyThresholdTextureID(textureId: string, threshold: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateImageTransparencyThresholdTextureID_V2(textureId: string, threshold: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateMeshBounds(meshId: string, meshScale: Vector3, boundsOffset: Vector3, attachmentCF: CFrame, handleCF: CFrame) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateMeshTriangleArea(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateMeshTriangles(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateMeshVertColors(meshId: string, includeAlpha: boolean? = true) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateMisMatchUV(innerCageMeshId: string, outerCageMeshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateNumTextureChannels(textureId: string, numChannelsRequired: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateOverlappingVertices(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateSkinnedEditableMesh(editableMesh: EditableMesh) -> boolean {RobloxScriptSecurity}
	Function UGCValidationService:ValidateSkinnedMesh(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateTextureAlpha(textureId: string, pixelWidth: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateTextureAlphaByteString(byteString: string, pixelWidth: number) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateTextureSize(textureId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateUVSpace(meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateUVValuesInReference(referenceValues: { any }, meshId: string) -> boolean {RobloxScriptSecurity} [Yields]
	Function UGCValidationService:ValidateUniqueUVCount(meshId: string, numRequired: number) -> boolean {RobloxScriptSecurity} [Yields]
Class UIBase : Instance [NotCreatable]
Class UIComponent : UIBase [NotCreatable]
Class UIConstraint : UIComponent [NotCreatable]
Class UIAspectRatioConstraint : UIConstraint
	Property UIAspectRatioConstraint.AspectRatio: number
	Property UIAspectRatioConstraint.AspectType: Enum.AspectType
	Property UIAspectRatioConstraint.DominantAxis: Enum.DominantAxis
Class UISizeConstraint : UIConstraint
	Property UISizeConstraint.MaxSize: Vector2
	Property UISizeConstraint.MinSize: Vector2
Class UITextSizeConstraint : UIConstraint
	Property UITextSizeConstraint.MaxTextSize: number
	Property UITextSizeConstraint.MinTextSize: number
Class UICorner : UIComponent
	Property UICorner.CornerRadius: UDim
Class UIDragDetector : UIComponent [NotBrowsable]
	Property UIDragDetector.BoundingBehavior: Enum.UIDragDetectorBoundingBehavior
	Property UIDragDetector.BoundingUI: GuiBase2d?
	Property UIDragDetector.DragRelativity: Enum.UIDragDetectorDragRelativity
	Property UIDragDetector.DragSpace: Enum.UIDragDetectorDragSpace
	Property UIDragDetector.DragStyle: Enum.UIDragDetectorDragStyle
	Property UIDragDetector.Enabled: boolean
	Property UIDragDetector.ReferenceUIInstance: GuiObject?
	Property UIDragDetector.ResponseStyle: Enum.UIDragDetectorResponseStyle
	Property UIDragDetector.SelectionModeDragSpeed: UDim2
	Property UIDragDetector.SelectionModeRotateSpeed: number
	Property UIDragDetector.UIDragSpeedAxisMapping: Enum.UIDragSpeedAxisMapping
	Property UIDragDetector.DragAxis: Vector2
	Property UIDragDetector.MaxDragAngle: number
	Property UIDragDetector.MaxDragTranslation: UDim2
	Property UIDragDetector.MinDragAngle: number
	Property UIDragDetector.MinDragTranslation: UDim2
	Property UIDragDetector.DragRotation: number
	Property UIDragDetector.DragUDim2: UDim2
	Property UIDragDetector.ActivatedCursorIcon: ContentId
	Property UIDragDetector.CursorIcon: ContentId
	Function UIDragDetector:AddConstraintFunction(priority: number, function: (...any) -> ...any) -> RBXScriptConnection
	Function UIDragDetector:GetReferencePosition() -> UDim2
	Function UIDragDetector:GetReferenceRotation() -> number
	Function UIDragDetector:SetDragStyleFunction(function: (...any) -> ...any) -> ()
	Event UIDragDetector.DragContinue(inputPosition: Vector2)
	Event UIDragDetector.DragEnd(inputPosition: Vector2)
	Event UIDragDetector.DragStart(inputPosition: Vector2)
Class UIFlexItem : UIComponent
	Property UIFlexItem.FlexMode: Enum.UIFlexMode
	Property UIFlexItem.GrowRatio: number
	Property UIFlexItem.ItemLineAlignment: Enum.ItemLineAlignment
	Property UIFlexItem.ShrinkRatio: number
Class UIGradient : UIComponent
	Property UIGradient.Color: ColorSequence
	Property UIGradient.Enabled: boolean
	Property UIGradient.Offset: Vector2
	Property UIGradient.Rotation: number
	Property UIGradient.Transparency: NumberSequence
Class UILayout : UIComponent [NotCreatable]
Class UIGridStyleLayout : UILayout [NotCreatable] [NotBrowsable]
	Property UIGridStyleLayout.FillDirection: Enum.FillDirection
	Property UIGridStyleLayout.HorizontalAlignment: Enum.HorizontalAlignment
	Property UIGridStyleLayout.SortOrder: Enum.SortOrder
	Property UIGridStyleLayout.VerticalAlignment: Enum.VerticalAlignment
	Property UIGridStyleLayout.AbsoluteContentSize: Vector2 [ReadOnly] {🧬Unsafe}
	Function UIGridStyleLayout:ApplyLayout() -> () [Deprecated]
	Function UIGridStyleLayout:SetCustomSortFunction(function: ((...any) -> ...any)? = nil) -> () [Deprecated]
Class UIGridLayout : UIGridStyleLayout
	Property UIGridLayout.CellPadding: UDim2
	Property UIGridLayout.CellSize: UDim2
	Property UIGridLayout.FillDirectionMaxCells: number
	Property UIGridLayout.StartCorner: Enum.StartCorner
	Property UIGridLayout.AbsoluteCellCount: Vector2 [ReadOnly] {🧬Unsafe}
	Property UIGridLayout.AbsoluteCellSize: Vector2 [ReadOnly] {🧬Unsafe}
Class UIListLayout : UIGridStyleLayout
	Property UIListLayout.Padding: UDim
	Property UIListLayout.Wraps: boolean
	Property UIListLayout.HorizontalFlex: Enum.UIFlexAlignment
	Property UIListLayout.HorizontalPadding: UDim [📁 LoadOnly] [Hidden] [NotScriptable]
	Property UIListLayout.ItemLineAlignment: Enum.ItemLineAlignment
	Property UIListLayout.VerticalFlex: Enum.UIFlexAlignment
	Property UIListLayout.VerticalPadding: UDim [📁 LoadOnly] [Hidden] [NotScriptable]
Class UIPageLayout : UIGridStyleLayout
	Property UIPageLayout.Animated: boolean
	Property UIPageLayout.Circular: boolean
	Property UIPageLayout.EasingDirection: Enum.EasingDirection
	Property UIPageLayout.EasingStyle: Enum.EasingStyle
	Property UIPageLayout.Padding: UDim
	Property UIPageLayout.TweenTime: number
	Property UIPageLayout.CurrentPage: GuiObject? [ReadOnly]
	Property UIPageLayout.GamepadInputEnabled: boolean
	Property UIPageLayout.ScrollWheelInputEnabled: boolean
	Property UIPageLayout.TouchInputEnabled: boolean
	Function UIPageLayout:JumpTo(page: Instance) -> ()
	Function UIPageLayout:JumpToIndex(index: number) -> ()
	Function UIPageLayout:Next() -> ()
	Function UIPageLayout:Previous() -> ()
	Event UIPageLayout.PageEnter(page: Instance)
	Event UIPageLayout.PageLeave(page: Instance)
	Event UIPageLayout.Stopped(currentPage: Instance)
Class UITableLayout : UIGridStyleLayout
	Property UITableLayout.FillEmptySpaceColumns: boolean
	Property UITableLayout.FillEmptySpaceRows: boolean
	Property UITableLayout.Padding: UDim2
	Property UITableLayout.MajorAxis: Enum.TableMajorAxis
Class UIPadding : UIComponent
	Property UIPadding.PaddingBottom: UDim
	Property UIPadding.PaddingLeft: UDim
	Property UIPadding.PaddingRight: UDim
	Property UIPadding.PaddingTop: UDim
Class UIScale : UIComponent
	Property UIScale.Scale: number
Class UIStroke : UIComponent
	Property UIStroke.ApplyStrokeMode: Enum.ApplyStrokeMode
	Property UIStroke.Color: Color3
	Property UIStroke.LineJoinMode: Enum.LineJoinMode
	Property UIStroke.Thickness: number
	Property UIStroke.Transparency: number
	Property UIStroke.Enabled: boolean
Class UIDragDetectorService : Instance [NotCreatable] [Service] [NotReplicated]
Class UnvalidatedAssetService : Instance [NotCreatable] [Service]
	Property UnvalidatedAssetService.CachedData: string {RobloxSecurity} [Hidden] [NotScriptable]
	Function UnvalidatedAssetService:AppendTempAssetId(userId: number, id: number, lookAt: Vector3, camPos: Vector3, usage: string) -> () {RobloxScriptSecurity}
	Function UnvalidatedAssetService:AppendVantagePoint(userId: number, id: number, lookAt: Vector3, camPos: Vector3) -> boolean {RobloxScriptSecurity}
	Function UnvalidatedAssetService:UpgradeTempAssetId(userId: number, tempId: number, assetId: number) -> boolean {RobloxScriptSecurity}
Class UserGameSettings : Instance [NotCreatable] [UserSettings]
	Property UserGameSettings.GraphicsOptimizationMode: Enum.GraphicsOptimizationMode {RobloxScriptSecurity}
	Property UserGameSettings.GraphicsQualityLevel: number {RobloxScriptSecurity}
	Property UserGameSettings.MaxQualityEnabled: boolean {RobloxScriptSecurity}
	Property UserGameSettings.SavedQualityLevel: Enum.SavedQualitySetting
	Property UserGameSettings.CameraMode: Enum.CustomCameraMode {RobloxScriptSecurity}
	Property UserGameSettings.ComputerCameraMovementMode: Enum.ComputerCameraMovementMode
	Property UserGameSettings.ComputerMovementMode: Enum.ComputerMovementMode
	Property UserGameSettings.ControlMode: Enum.ControlMode
	Property UserGameSettings.HapticStrength: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.RotationType: Enum.RotationType
	Property UserGameSettings.TouchCameraMovementMode: Enum.TouchCameraMovementMode
	Property UserGameSettings.TouchMovementMode: Enum.TouchMovementMode
	Property UserGameSettings.VRComfortSetting: Enum.VRComfortSetting {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.VRSafetyBubbleMode: Enum.VRSafetyBubbleMode {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.AllTutorialsDisabled: boolean {RobloxScriptSecurity}
	Property UserGameSettings.CameraYInverted: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.ChatTranslationEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.ChatTranslationFTUXShown: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.ChatTranslationLocale: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.ChatTranslationToggleEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.ChatVisible: boolean {RobloxScriptSecurity}
	Property UserGameSettings.CompletedTutorials: string {RobloxScriptSecurity} [Hidden] [NotScriptable]
	Property UserGameSettings.ComputerCameraMovementChanged: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property UserGameSettings.ComputerMovementChanged: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property UserGameSettings.DefaultCameraID: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.FramerateCap: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.Fullscreen: boolean {RobloxScriptSecurity}
	Property UserGameSettings.GamepadCameraSensitivity: number
	Property UserGameSettings.HasEverUsedVR: boolean {RobloxScriptSecurity}
	Property UserGameSettings.IsUsingCameraYInverted: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserGameSettings.IsUsingGamepadCameraSensitivity: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserGameSettings.MasterVolume: number {RobloxScriptSecurity}
	Property UserGameSettings.MasterVolumeStudio: number {RobloxScriptSecurity}
	Property UserGameSettings.MicroProfilerWebServerEnabled: boolean {RobloxScriptSecurity} [Hidden]
	Property UserGameSettings.MicroProfilerWebServerIP: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserGameSettings.MicroProfilerWebServerPort: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserGameSettings.MouseSensitivity: number
	Property UserGameSettings.MouseSensitivityFirstPerson: Vector2 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.MouseSensitivityThirdPerson: Vector2 {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.OnScreenProfilerEnabled: boolean {RobloxScriptSecurity} [Hidden]
	Property UserGameSettings.OnboardingsCompleted: string {RobloxScriptSecurity}
	Property UserGameSettings.PartyVoiceVolume: number {RobloxScriptSecurity}
	Property UserGameSettings.PerformanceStatsVisible: boolean {RobloxScriptSecurity} [Hidden]
	Property UserGameSettings.PlayerHeight: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.PreferredTextSize: Enum.PreferredTextSize {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.PreferredTransparency: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.QualityResetLevel: number {RobloxScriptSecurity} [Hidden]
	Property UserGameSettings.RCCProfilerRecordFrameRate: number
	Property UserGameSettings.RCCProfilerRecordTimeFrame: number
	Property UserGameSettings.ReducedMotion: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.StartMaximized: boolean {RobloxScriptSecurity} [NotReplicated] [NotScriptable]
	Property UserGameSettings.StartScreenPosition: Vector2 {RobloxScriptSecurity} [NotReplicated] [NotScriptable]
	Property UserGameSettings.StartScreenSize: Vector2 {RobloxScriptSecurity} [NotReplicated] [NotScriptable]
	Property UserGameSettings.TouchCameraMovementChanged: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property UserGameSettings.TouchMovementChanged: boolean {RobloxSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Property UserGameSettings.UiNavigationKeyBindEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.UsedCoreGuiIsVisibleToggle: boolean {RobloxScriptSecurity}
	Property UserGameSettings.UsedCustomGuiIsVisibleToggle: boolean {RobloxScriptSecurity}
	Property UserGameSettings.UsedHideHudShortcut: boolean {RobloxScriptSecurity}
	Property UserGameSettings.VREnabled: boolean {RobloxScriptSecurity}
	Property UserGameSettings.VRRotationIntensity: number {RobloxScriptSecurity}
	Property UserGameSettings.VRSmoothRotationEnabled: boolean {✏️RobloxScriptSecurity}
	Property UserGameSettings.VRSmoothRotationEnabledCustomOption: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.VRThirdPersonFollowCamEnabled: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.VRThirdPersonFollowCamEnabledCustomOption: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.VignetteEnabled: boolean {✏️RobloxScriptSecurity}
	Property UserGameSettings.VignetteEnabledCustomOption: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property UserGameSettings.gaID: string {RobloxScriptSecurity} [Hidden] [NotReplicated] [NotScriptable]
	Function UserGameSettings:GetCameraYInvertValue() -> number
	Function UserGameSettings:GetDefaultFramerateCap() -> number {RobloxScriptSecurity}
	Function UserGameSettings:GetOnboardingCompleted(onboardingId: string) -> boolean
	Function UserGameSettings:GetTutorialState(tutorialId: string) -> boolean {RobloxScriptSecurity}
	Function UserGameSettings:InFullScreen() -> boolean
	Function UserGameSettings:InStudioMode() -> boolean
	Function UserGameSettings:ResetOnboardingCompleted(onboardingId: string) -> () {RobloxScriptSecurity}
	Function UserGameSettings:SetCameraYInvertVisible() -> ()
	Function UserGameSettings:SetGamepadCameraSensitivityVisible() -> ()
	Function UserGameSettings:SetOnboardingCompleted(onboardingId: string) -> ()
	Function UserGameSettings:SetTutorialState(tutorialId: string, value: boolean) -> () {RobloxScriptSecurity}
	Event UserGameSettings.FullscreenChanged(isFullscreen: boolean)
	Event UserGameSettings.PerformanceStatsVisibleChanged(isPerformanceStatsVisible: boolean) {RobloxScriptSecurity}
	Event UserGameSettings.StudioModeChanged(isStudioMode: boolean)
Class UserInputService : Instance [NotCreatable] [Service] [NotReplicated]
	Property UserInputService.LegacyInputEventsEnabled: boolean {RobloxScriptSecurity} [Hidden] [Deprecated]
	Property UserInputService.ModalEnabled: boolean [Deprecated]
	Property UserInputService.AccelerometerEnabled: boolean [ReadOnly]
	Property UserInputService.BottomBarSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserInputService.GamepadEnabled: boolean [ReadOnly]
	Property UserInputService.GyroscopeEnabled: boolean [ReadOnly]
	Property UserInputService.KeyboardEnabled: boolean [ReadOnly]
	Property UserInputService.MouseBehavior: Enum.MouseBehavior
	Property UserInputService.MouseDeltaSensitivity: number [📁 LoadOnly] [NotReplicated]
	Property UserInputService.MouseEnabled: boolean [ReadOnly]
	Property UserInputService.MouseIcon: ContentId
	Property UserInputService.MouseIconEnabled: boolean
	Property UserInputService.NavBarSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserInputService.OnScreenKeyboardAnimationDuration: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserInputService.OnScreenKeyboardPosition: Vector2 [ReadOnly]
	Property UserInputService.OnScreenKeyboardSize: Vector2 [ReadOnly]
	Property UserInputService.OnScreenKeyboardVisible: boolean [ReadOnly]
	Property UserInputService.OverrideMouseIconBehavior: Enum.OverrideMouseIconBehavior {RobloxScriptSecurity} [Hidden]
	Property UserInputService.RightBarSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserInputService.StatusBarSize: Vector2 {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property UserInputService.TouchEnabled: boolean [ReadOnly]
	Property UserInputService.UserHeadCFrame: CFrame [ReadOnly] [Deprecated]
	Property UserInputService.VREnabled: boolean [ReadOnly]
	Function UserInputService:GamepadSupports(gamepadNum: Enum.UserInputType, gamepadKeyCode: Enum.KeyCode) -> boolean
	Function UserInputService:GetConnectedGamepads() -> { any }
	Function UserInputService:GetDeviceAcceleration() -> InputObject
	Function UserInputService:GetDeviceGravity() -> InputObject
	Function UserInputService:GetDeviceLevel() -> Enum.DeviceLevel {RobloxScriptSecurity}
	Function UserInputService:GetDeviceRotation() -> ...any
	Function UserInputService:GetDeviceType() -> Enum.DeviceType {RobloxScriptSecurity}
	Function UserInputService:GetFocusedTextBox() -> TextBox
	Function UserInputService:GetGamepadConnected(gamepadNum: Enum.UserInputType) -> boolean
	Function UserInputService:GetGamepadState(gamepadNum: Enum.UserInputType) -> { any }
	Function UserInputService:GetImageForKeyCode(keyCode: Enum.KeyCode) -> ContentId
	Function UserInputService:GetKeysPressed() -> { any }
	Function UserInputService:GetLastInputType() -> Enum.UserInputType
	Function UserInputService:GetMouseButtonsPressed() -> { any }
	Function UserInputService:GetMouseDelta() -> Vector2
	Function UserInputService:GetMouseLocation() -> Vector2
	Function UserInputService:GetNavigationGamepads() -> { any }
	Function UserInputService:GetPlatform() -> Enum.Platform {RobloxScriptSecurity}
	Function UserInputService:GetStringForKeyCode(keyCode: Enum.KeyCode) -> string
	Function UserInputService:GetSupportedGamepadKeyCodes(gamepadNum: Enum.UserInputType) -> { any }
	Function UserInputService:GetUserCFrame(type: Enum.UserCFrame) -> CFrame [Deprecated]
	Function UserInputService:IsGamepadButtonDown(gamepadNum: Enum.UserInputType, gamepadKeyCode: Enum.KeyCode) -> boolean
	Function UserInputService:IsKeyDown(keyCode: Enum.KeyCode) -> boolean
	Function UserInputService:IsMouseButtonPressed(mouseButton: Enum.UserInputType) -> boolean
	Function UserInputService:IsNavigationGamepad(gamepadEnum: Enum.UserInputType) -> boolean
	Function UserInputService:RecenterUserHeadCFrame() -> ()
	Function UserInputService:SendAppUISizes(statusBarSize: Vector2, navBarSize: Vector2, bottomBarSize: Vector2, rightBarSize: Vector2) -> () {RobloxScriptSecurity}
	Function UserInputService:SetNavigationGamepad(gamepadEnum: Enum.UserInputType, enabled: boolean) -> ()
	Event UserInputService.DeviceAccelerationChanged(acceleration: InputObject)
	Event UserInputService.DeviceGravityChanged(gravity: InputObject)
	Event UserInputService.DeviceRotationChanged(rotation: InputObject, cframe: CFrame)
	Event UserInputService.GamepadConnected(gamepadNum: Enum.UserInputType)
	Event UserInputService.GamepadDisconnected(gamepadNum: Enum.UserInputType)
	Event UserInputService.InputBegan(input: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.InputChanged(input: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.InputEnded(input: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.JumpRequest()
	Event UserInputService.LastInputTypeChanged(lastInputType: Enum.UserInputType)
	Event UserInputService.PointerAction(wheel: number, pan: Vector2, pinch: number, gameProcessedEvent: boolean)
	Event UserInputService.StatusBarTapped(position: Vector2) {RobloxScriptSecurity}
	Event UserInputService.TextBoxFocusReleased(textboxReleased: TextBox)
	Event UserInputService.TextBoxFocused(textboxFocused: TextBox)
	Event UserInputService.TouchDrag(dragDirection: Enum.SwipeDirection, numberOfTouches: number, gameProcessedEvent: boolean) {RobloxScriptSecurity}
	Event UserInputService.TouchEnded(touch: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.TouchLongPress(touchPositions: { any }, state: Enum.UserInputState, gameProcessedEvent: boolean)
	Event UserInputService.TouchMoved(touch: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.TouchPan(touchPositions: { any }, totalTranslation: Vector2, velocity: Vector2, state: Enum.UserInputState, gameProcessedEvent: boolean)
	Event UserInputService.TouchPinch(touchPositions: { any }, scale: number, velocity: number, state: Enum.UserInputState, gameProcessedEvent: boolean)
	Event UserInputService.TouchRotate(touchPositions: { any }, rotation: number, velocity: number, state: Enum.UserInputState, gameProcessedEvent: boolean)
	Event UserInputService.TouchStarted(touch: InputObject, gameProcessedEvent: boolean)
	Event UserInputService.TouchSwipe(swipeDirection: Enum.SwipeDirection, numberOfTouches: number, gameProcessedEvent: boolean)
	Event UserInputService.TouchTap(touchPositions: { any }, gameProcessedEvent: boolean)
	Event UserInputService.TouchTapInWorld(position: Vector2, processedByUI: boolean)
	Event UserInputService.UserCFrameChanged(type: Enum.UserCFrame, value: CFrame) [Deprecated]
	Event UserInputService.WindowFocusReleased()
	Event UserInputService.WindowFocused()
Class UserService : Instance [NotCreatable] [Service]
	Function UserService:GetUserInfosByUserIdsAsync(userIds: { any }) -> { any } [Yields]
Class VRService : Instance [NotCreatable] [Service]
	Property VRService.AutomaticScaling: Enum.VRScaling
	Property VRService.AvatarGestures: boolean
	Property VRService.ControllerModels: Enum.VRControllerModelMode
	Property VRService.FadeOutViewOnCollision: boolean
	Property VRService.GuiInputUserCFrame: Enum.UserCFrame [NotReplicated]
	Property VRService.LaserPointer: Enum.VRLaserPointerMode
	Property VRService.DidPointerHit: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property VRService.LaserDistance: number {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property VRService.PointerHitCFrame: CFrame {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property VRService.QuestASWState: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property VRService.QuestDisplayRefreshRate: number {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property VRService.ThirdPersonFollowCamEnabled: boolean [ReadOnly]
	Property VRService.VRDeviceAvailable: boolean {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property VRService.VRDeviceName: string {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Property VRService.VREnabled: boolean [ReadOnly]
	Property VRService.VRSessionState: Enum.VRSessionState {RobloxScriptSecurity} [Hidden] [ReadOnly]
	Function VRService:GetTouchpadMode(pad: Enum.VRTouchpad) -> Enum.VRTouchpadMode
	Function VRService:GetUserCFrame(type: Enum.UserCFrame) -> CFrame
	Function VRService:GetUserCFrameEnabled(type: Enum.UserCFrame) -> boolean
	Function VRService:IsMaquettes() -> boolean {RobloxScriptSecurity}
	Function VRService:IsVRAppBuild() -> boolean {RobloxScriptSecurity}
	Function VRService:RecenterUserHeadCFrame() -> ()
	Function VRService:RequestNavigation(cframe: CFrame, inputUserCFrame: Enum.UserCFrame) -> ()
	Function VRService:SetTouchpadMode(pad: Enum.VRTouchpad, mode: Enum.VRTouchpadMode) -> ()
	Event VRService.LaserPointerTriggered(input: InputObject) {RobloxScriptSecurity}
	Event VRService.NavigationRequested(cframe: CFrame, inputUserCFrame: Enum.UserCFrame)
	Event VRService.TouchpadModeChanged(pad: Enum.VRTouchpad, mode: Enum.VRTouchpadMode)
	Event VRService.UserCFrameChanged(type: Enum.UserCFrame, value: CFrame)
	Event VRService.UserCFrameEnabled(type: Enum.UserCFrame, enabled: boolean)
Class VRStatusService : Instance [NotCreatable] [Service]
Class ValueBase : Instance [NotCreatable]
Class BinaryStringValue : ValueBase
	Property BinaryStringValue.Value: BinaryString [Hidden] [NotScriptable]
	Event BinaryStringValue.Changed(value: BinaryString)
Class BoolValue : ValueBase
	Property BoolValue.Value: boolean
	Event BoolValue.Changed(value: boolean)
Class BrickColorValue : ValueBase
	Property BrickColorValue.Value: BrickColor
	Event BrickColorValue.Changed(value: BrickColor)
Class CFrameValue : ValueBase
	Property CFrameValue.Value: CFrame
	Event CFrameValue.Changed(value: CFrame)
Class Color3Value : ValueBase
	Property Color3Value.Value: Color3
	Event Color3Value.Changed(value: Color3)
Class DoubleConstrainedValue : ValueBase [Deprecated]
	Property DoubleConstrainedValue.ConstrainedValue: number [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property DoubleConstrainedValue.MaxValue: number [Deprecated]
	Property DoubleConstrainedValue.MinValue: number [Deprecated]
	Property DoubleConstrainedValue.Value: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Event DoubleConstrainedValue.Changed(value: number) [Deprecated]
Class IntConstrainedValue : ValueBase [Deprecated]
	Property IntConstrainedValue.ConstrainedValue: number [📁 LoadOnly] [Hidden] [NotReplicated] [Deprecated]
	Property IntConstrainedValue.MaxValue: number [Deprecated]
	Property IntConstrainedValue.MinValue: number [Deprecated]
	Property IntConstrainedValue.Value: number [📁 LoadOnly] [NotReplicated] [Deprecated]
	Event IntConstrainedValue.Changed(value: number) [Deprecated]
Class IntValue : ValueBase
	Property IntValue.Value: number
	Event IntValue.Changed(value: number)
Class NumberValue : ValueBase
	Property NumberValue.Value: number
	Event NumberValue.Changed(value: number)
Class ObjectValue : ValueBase
	Property ObjectValue.Value: Instance?
	Event ObjectValue.Changed(value: Instance)
Class RayValue : ValueBase
	Property RayValue.Value: Ray
	Event RayValue.Changed(value: Ray)
Class StringValue : ValueBase
	Property StringValue.Value: string
	Event StringValue.Changed(value: string)
Class Vector3Value : ValueBase
	Property Vector3Value.Value: Vector3
	Event Vector3Value.Changed(value: Vector3)
Class Vector3Curve : Instance
	Function Vector3Curve:GetValueAtTime(time: number) -> { any }
	Function Vector3Curve:X() -> FloatCurve
	Function Vector3Curve:Y() -> FloatCurve
	Function Vector3Curve:Z() -> FloatCurve
Class VersionControlService : Instance [NotCreatable] [Service]
	Property VersionControlService.ScriptCollabEnabled: boolean {RobloxScriptSecurity} [Hidden]
	Property VersionControlService.ScriptCollabVersionHistoryEnabled: boolean {RobloxSecurity} [Hidden] [NotScriptable]
	Event VersionControlService.BroadcastScriptChangesSubmitted(scriptGuid: string) {RobloxSecurity} [Hidden]
	Event VersionControlService.CommitRejectedInfo(reason: number) {LocalUserSecurity} [Hidden]
	Event VersionControlService.LockedScriptBatchCommit(scriptGuidTuple: ...any, scriptTextTuple: ...any, commitMessage: string) {LocalUserSecurity} [Hidden]
	Event VersionControlService.RequestAllEditorsSignal() {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptBatchCommit(scriptGuidTuple: ...any, scriptHashBaseTuple: ...any, scriptTextTuple: ...any, commitMessage: string) {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptChangesSubmitted(scriptGuid: string, submitted: boolean) {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptEditorAdded(scriptGuid: string, editor: Instance) {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptEditorRemoved(scriptGuid: string, editor: Instance) {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptStartEdit(scriptGuid: string) {LocalUserSecurity} [Hidden]
	Event VersionControlService.ScriptStopEdit(scriptGuid: string) {LocalUserSecurity} [Hidden]
Class VideoCaptureService : Instance [NotCreatable] [Service]
	Property VideoCaptureService.Active: boolean {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Property VideoCaptureService.CameraID: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function VideoCaptureService:GetCameraDevices() -> { [string]: any } {RobloxScriptSecurity}
	Event VideoCaptureService.DevicesChanged() {RobloxScriptSecurity}
	Event VideoCaptureService.Error(cameraid: string, errorcode: string) {RobloxScriptSecurity}
	Event VideoCaptureService.Started(cameraid: string) {RobloxScriptSecurity}
	Event VideoCaptureService.Stopped(cameraid: string) {RobloxScriptSecurity}
Class VideoDeviceInput : Instance [NotReplicated]
	Property VideoDeviceInput.Active: boolean
	Property VideoDeviceInput.CameraId: string
	Property VideoDeviceInput.CaptureQuality: Enum.VideoDeviceCaptureQuality
	Property VideoDeviceInput.IsReady: boolean [ReadOnly]
Class VideoService : Instance [NotCreatable] [Service]
Class VirtualInputManager : Instance [Service]
	Property VirtualInputManager.AdditionalLuaState: string {RobloxScriptSecurity} [Hidden] [NotReplicated]
	Function VirtualInputManager:Dump() -> () {RobloxScriptSecurity}
	Function VirtualInputManager:HandleGamepadAxisInput(objectId: number, keyCode: Enum.KeyCode, x: number, y: number, z: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:HandleGamepadButtonInput(deviceId: number, keyCode: Enum.KeyCode, buttonState: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:HandleGamepadConnect(deviceId: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:HandleGamepadDisconnect(deviceId: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendAccelerometerEvent(x: number, y: number, z: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendGravityEvent(x: number, y: number, z: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendGyroscopeEvent(quatX: number, quatY: number, quatZ: number, quatW: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendKeyEvent(isPressed: boolean, keyCode: Enum.KeyCode, isRepeatedKey: boolean, layerCollector: Instance) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendMouseButtonEvent(x: number, y: number, mouseButton: number, isDown: boolean, layerCollector: Instance, repeatCount: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendMouseMoveEvent(x: number, y: number, layerCollector: Instance) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendMouseWheelEvent(x: number, y: number, isForwardScroll: boolean, layerCollector: Instance) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendTextInputCharacterEvent(str: string, layerCollector: Instance) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SendTouchEvent(touchId: number, state: number, x: number, y: number) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:SetInputTypesToIgnore(inputTypesToIgnore: any) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:StartPlaying(fileName: string) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:StartPlayingJSON(string: string) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:StartRecording() -> () {RobloxScriptSecurity}
	Function VirtualInputManager:StopPlaying() -> () {RobloxScriptSecurity}
	Function VirtualInputManager:StopRecording() -> () {RobloxScriptSecurity}
	Function VirtualInputManager:WaitForInputEventsProcessed() -> () {RobloxScriptSecurity} [Yields]
	Function VirtualInputManager:sendRobloxEvent(namespace: string, detail: string, detailType: string) -> () {RobloxScriptSecurity}
	Function VirtualInputManager:sendThemeChangeEvent(themeName: string) -> () {RobloxScriptSecurity}
	Event VirtualInputManager.PlaybackCompleted(additionalLuaState: string) {RobloxScriptSecurity}
	Event VirtualInputManager.RecordingCompleted(result: string) {RobloxScriptSecurity}
Class VirtualUser : Instance [NotCreatable] [Service] [NotReplicated]
	Function VirtualUser:Button1Down(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:Button1Up(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:Button2Down(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:Button2Up(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:CaptureController() -> () {LocalUserSecurity}
	Function VirtualUser:ClickButton1(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:ClickButton2(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:MoveMouse(position: Vector2, camera: CFrame? = CFrame?.new()) -> () {LocalUserSecurity}
	Function VirtualUser:SetKeyDown(key: string) -> () {LocalUserSecurity}
	Function VirtualUser:SetKeyUp(key: string) -> () {LocalUserSecurity}
	Function VirtualUser:StartRecording() -> () {LocalUserSecurity}
	Function VirtualUser:StopRecording() -> string {LocalUserSecurity}
	Function VirtualUser:TypeKey(key: string) -> () {LocalUserSecurity}
Class VisibilityCheckDispatcher : Instance [NotCreatable] [Service]
Class Visit : Instance [NotCreatable] [Service] [NotReplicated]
Class VisualizationMode : Instance
	Property VisualizationMode.Enabled: boolean {RobloxScriptSecurity}
	Property VisualizationMode.Title: string {RobloxScriptSecurity}
	Property VisualizationMode.ToolTip: string {RobloxScriptSecurity}
Class VisualizationModeCategory : Instance
	Property VisualizationModeCategory.Enabled: boolean {RobloxScriptSecurity}
	Property VisualizationModeCategory.Title: string {RobloxScriptSecurity}
Class VisualizationModeService : Instance [NotCreatable] [Service]
Class VoiceChatInternal : Instance [NotCreatable] [Service] [NotBrowsable]
	Property VoiceChatInternal.VoiceChatState: Enum.VoiceChatState [Hidden] [ReadOnly] [Deprecated]
	Function VoiceChatInternal:GetAndClearCallFailureMessage() -> string {RobloxScriptSecurity} [Deprecated]
	Function VoiceChatInternal:GetAudioProcessingSettings() -> ...any [Deprecated]
	Function VoiceChatInternal:GetChannelId() -> string {RobloxScriptSecurity}
	Function VoiceChatInternal:GetGroupId() -> string {RobloxScriptSecurity}
	Function VoiceChatInternal:GetMicDevices() -> ...any [Deprecated]
	Function VoiceChatInternal:GetParticipants() -> { any } [Deprecated]
	Function VoiceChatInternal:GetSessionId() -> string {RobloxScriptSecurity}
	Function VoiceChatInternal:GetSpeakerDevices() -> ...any [Deprecated]
	Function VoiceChatInternal:GetVoiceChatApiVersion() -> number [Deprecated]
	Function VoiceChatInternal:GetVoiceChatAvailable() -> number [Deprecated]
	Function VoiceChatInternal:GetVoiceExperienceId() -> string {RobloxScriptSecurity}
	Function VoiceChatInternal:IsContextVoiceEnabled() -> boolean {RobloxScriptSecurity}
	Function VoiceChatInternal:IsPublishPaused() -> boolean [Deprecated]
	Function VoiceChatInternal:IsSubscribePaused(userId: number) -> boolean [Deprecated]
	Function VoiceChatInternal:IsVoiceEnabledForUserIdAsync(userId: number) -> boolean [Yields]
	Function VoiceChatInternal:JoinByGroupId(groupId: string, isMicMuted: boolean? = false) -> boolean [Deprecated]
	Function VoiceChatInternal:JoinByGroupIdToken(groupId: string, isMicMuted: boolean, isRetry: boolean? = false) -> boolean [Deprecated]
	Function VoiceChatInternal:Leave() -> () [Deprecated]
	Function VoiceChatInternal:LogPublisherWebRTCStats() -> boolean {RobloxScriptSecurity}
	Function VoiceChatInternal:LogSubscriptionWebRTCStats() -> boolean {RobloxScriptSecurity}
	Function VoiceChatInternal:PublishPause(paused: boolean) -> boolean [Deprecated]
	Function VoiceChatInternal:SetMicDevice(micDeviceName: string, micDeviceGuid: string) -> () [Deprecated]
	Function VoiceChatInternal:SetSpeakerDevice(speakerDeviceName: string, speakerDeviceGuid: string) -> () [Deprecated]
	Function VoiceChatInternal:SubscribeBlock(userId: number) -> boolean {RobloxScriptSecurity}
	Function VoiceChatInternal:SubscribePause(userId: number, paused: boolean) -> boolean [Deprecated]
	Function VoiceChatInternal:SubscribePauseAll(paused: boolean) -> boolean [Deprecated]
	Function VoiceChatInternal:SubscribeRetry(userId: number) -> boolean {RobloxScriptSecurity}
	Function VoiceChatInternal:SubscribeUnblock(userId: number) -> boolean {RobloxScriptSecurity}
	Event VoiceChatInternal.LocalPlayerModerated() {RobloxScriptSecurity}
	Event VoiceChatInternal.ParticipantsStateChanged(participantsLeft: { any }, participantsJoined: { any }, updatedStates: { any }) {RobloxScriptSecurity} [Deprecated]
	Event VoiceChatInternal.PlayerMicActivitySignalChange(activityInfo: { [string]: any }) {RobloxScriptSecurity} [Deprecated]
	Event VoiceChatInternal.StateChanged(old: Enum.VoiceChatState, new: Enum.VoiceChatState) [Deprecated]
	Event VoiceChatInternal.TempSetMicMutedToggleMic() {RobloxScriptSecurity}
Class VoiceChatService : Instance [NotCreatable] [Service]
	Property VoiceChatService.EnableDefaultVoice: boolean {PluginSecurity}
	Property VoiceChatService.UseAudioApi: Enum.AudioApiRollout {PluginSecurity}
	Property VoiceChatService.UseNewAudioApi: boolean {RobloxScriptSecurity} [Hidden]
	Property VoiceChatService.UseNewControlPaths: boolean {RobloxSecurity} [Hidden]
	Property VoiceChatService.UseNewJoinFlow: boolean {RobloxSecurity} [Hidden]
	Property VoiceChatService.UseRME: boolean {RobloxSecurity} [Hidden]
	Property VoiceChatService.VoiceChatEnabledForPlaceOnRcc: boolean {RobloxScriptSecurity} [Hidden]
	Property VoiceChatService.VoiceChatEnabledForUniverseOnRcc: boolean {RobloxScriptSecurity} [Hidden]
	Function VoiceChatService:IsVoiceEnabledForUserIdAsync(userId: number) -> boolean [Yields]
	Function VoiceChatService:joinVoice() -> () {RobloxScriptSecurity}
	Event VoiceChatService.ClientRetryJoin() {RobloxSecurity} [Hidden]
	Event VoiceChatService.ClientRetryJoinWithConfig(sessionConfigFlags: number) {RobloxSecurity} [Hidden]
	Event VoiceChatService.JoinedVoice(channelName: string, participantId: number, sessionId: string, channelId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.PublishStateChange(muteState: Enum.MuteState, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.PublishingHandshakeAcked(handshakeAnswer: string, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.PublishingHandshakeCompleted(sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.PublishingHandshakeInitiated(handshakeOffer: string, muteState: Enum.MuteState, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.ReJoinedVoice(channelName: string, participantId: number, sessionId: string, channelId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.RelayCandidatesGathered(voiceControlPath: Enum.VoiceControlPath, serializedIceCandidates: string, isLast: boolean, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscribeStateChange(muteState: Enum.MuteState, userIds: string, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionDropped(sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionFeedStarted(eventTag: number, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionHandshakeAcked(eventTag: number, handshakeAnswer: string, usersToMute: string, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionHandshakeCompleted(sessionId: string, eventTag: number) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionHandshakeInitiated(handshakeOffer: string, newSubscriptionStates: string, isNewConnection: boolean, sessionId: string, eventTag: number) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionInitialClientDescriptor(eventTag: number, initialClientDescriptor: string, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionInitialClientDescriptorRequested(eventTag: number, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.SubscriptionReset(sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.TurnServerInfoAcked(eventTag: number, userId: number, turnServerInfo: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.TurnServerInfoRequested(eventTag: number, userId: number) {RobloxSecurity} [Hidden]
	Event VoiceChatService.UserTurnAuth(sessionId: string, userName: string, password: string, ttl: number, uris: { any }) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatClientVoiceCapability() {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatClientVoiceCapabilityWithConfig(sessionConfigFlags: number) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatPlayerMuteStateChangedClientToServer(muteState: Enum.MuteState) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatPlayerMuteStateChangedServerToClient(muteState: Enum.MuteState) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatSampleTaggedEventClientToServer(tag: number, value: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatSampleTaggedEventServerToClient(tag: number, value: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatSubscriptionInitialBatchEmpty(sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceChatplayerMuteStatusChangedEvent(userId: number, muted: boolean, sessionId: string) {RobloxSecurity} [Hidden]
	Event VoiceChatService.VoiceSetupFailed(voiceControlPath: Enum.VoiceControlPath, serializedFailure: string, sessionId: string) {RobloxSecurity} [Hidden]
Class WeldConstraint : Instance
	Property WeldConstraint.Active: boolean [ReadOnly]
	Property WeldConstraint.Enabled: boolean [📁 LoadOnly] [NotReplicated]
	Property WeldConstraint.State: number [Hidden] [NotScriptable]
	Property WeldConstraint.CFrame0: CFrame [Hidden] [NotScriptable]
	Property WeldConstraint.CFrame1: CFrame [📁 LoadOnly] [Hidden] [NotReplicated] [NotScriptable]
	Property WeldConstraint.Part0: BasePart? [📁 LoadOnly] [NotReplicated]
	Property WeldConstraint.Part0Internal: BasePart? [Hidden] [NotScriptable]
	Property WeldConstraint.Part1: BasePart? [📁 LoadOnly] [NotReplicated]
	Property WeldConstraint.Part1Internal: BasePart? [Hidden] [NotScriptable]
Class Wire : Instance
	Property Wire.Connected: boolean [ReadOnly]
	Property Wire.SourceInstance: Instance?
	Property Wire.SourceName: string
	Property Wire.TargetInstance: Instance?
	Property Wire.TargetName: string
Enum AccessModifierType
	EnumItem AccessModifierType.Allow : 0
	EnumItem AccessModifierType.Deny : 1
Enum AccessoryType
	EnumItem AccessoryType.Unknown : 0
	EnumItem AccessoryType.Hat : 1
	EnumItem AccessoryType.Hair : 2
	EnumItem AccessoryType.Face : 3
	EnumItem AccessoryType.Neck : 4
	EnumItem AccessoryType.Shoulder : 5
	EnumItem AccessoryType.Front : 6
	EnumItem AccessoryType.Back : 7
	EnumItem AccessoryType.Waist : 8
	EnumItem AccessoryType.TShirt : 9
	EnumItem AccessoryType.Shirt : 10
	EnumItem AccessoryType.Pants : 11
	EnumItem AccessoryType.Jacket : 12
	EnumItem AccessoryType.Sweater : 13
	EnumItem AccessoryType.Shorts : 14
	EnumItem AccessoryType.LeftShoe : 15
	EnumItem AccessoryType.RightShoe : 16
	EnumItem AccessoryType.DressSkirt : 17
	EnumItem AccessoryType.Eyebrow : 18
	EnumItem AccessoryType.Eyelash : 19
Enum ActionOnStopSync
	EnumItem ActionOnStopSync.AlwaysAsk : 0
	EnumItem ActionOnStopSync.KeepLocalFiles : 1
	EnumItem ActionOnStopSync.DeleteLocalFiles : 2
Enum ActionType
	EnumItem ActionType.Nothing : 0
	EnumItem ActionType.Pause : 1
	EnumItem ActionType.Lose : 2
	EnumItem ActionType.Draw : 3
	EnumItem ActionType.Win : 4
Enum ActuatorRelativeTo
	EnumItem ActuatorRelativeTo.Attachment0 : 0
	EnumItem ActuatorRelativeTo.Attachment1 : 1
	EnumItem ActuatorRelativeTo.World : 2
Enum ActuatorType
	EnumItem ActuatorType.None : 0
	EnumItem ActuatorType.Motor : 1
	EnumItem ActuatorType.Servo : 2
Enum AdEventType
	EnumItem AdEventType.VideoLoaded : 0 [Deprecated]
	EnumItem AdEventType.VideoRemoved : 1 [Deprecated]
	EnumItem AdEventType.UserCompletedVideo : 2 [Deprecated]
	EnumItem AdEventType.RewardedAdLoaded : 3
	EnumItem AdEventType.RewardedAdGrant : 4
	EnumItem AdEventType.RewardedAdUnloaded : 5
Enum AdShape
	EnumItem AdShape.HorizontalRectangle : 1
Enum AdTeleportMethod
	EnumItem AdTeleportMethod.Undefined : 0
	EnumItem AdTeleportMethod.PortalForward : 1
	EnumItem AdTeleportMethod.InGameMenuBackButton : 2
	EnumItem AdTeleportMethod.UIBackButton : 3
Enum AdUIEventType
	EnumItem AdUIEventType.AdLabelClicked : 0
	EnumItem AdUIEventType.VolumeButtonClicked : 1
	EnumItem AdUIEventType.FullscreenButtonClicked : 2
	EnumItem AdUIEventType.PlayButtonClicked : 3
	EnumItem AdUIEventType.PauseButtonClicked : 4
	EnumItem AdUIEventType.CloseButtonClicked : 5
	EnumItem AdUIEventType.WhyThisAdClicked : 6
Enum AdUIType
	EnumItem AdUIType.None : 0
	EnumItem AdUIType.Image : 1
	EnumItem AdUIType.Video : 2
Enum AdUnitStatus
	EnumItem AdUnitStatus.Inactive : 0
	EnumItem AdUnitStatus.Active : 1
Enum AdornCullingMode
	EnumItem AdornCullingMode.Automatic : 0
	EnumItem AdornCullingMode.Never : 1
Enum AlignType
	EnumItem AlignType.Parallel : 0 [Deprecated]
	EnumItem AlignType.Perpendicular : 1 [Deprecated]
	EnumItem AlignType.PrimaryAxisParallel : 2
	EnumItem AlignType.PrimaryAxisPerpendicular : 3
	EnumItem AlignType.PrimaryAxisLookAt : 4
	EnumItem AlignType.AllAxes : 5
Enum AlphaMode
	EnumItem AlphaMode.Overlay : 0
	EnumItem AlphaMode.Transparency : 1
Enum AnalyticsCustomFieldKeys
	EnumItem AnalyticsCustomFieldKeys.CustomField01 : 0
	EnumItem AnalyticsCustomFieldKeys.CustomField02 : 1
	EnumItem AnalyticsCustomFieldKeys.CustomField03 : 2
Enum AnalyticsEconomyAction
	EnumItem AnalyticsEconomyAction.Default : 0
	EnumItem AnalyticsEconomyAction.Acquire : 1
	EnumItem AnalyticsEconomyAction.Spend : 2
Enum AnalyticsEconomyFlowType
	EnumItem AnalyticsEconomyFlowType.Sink : 0
	EnumItem AnalyticsEconomyFlowType.Source : 1
Enum AnalyticsEconomyTransactionType
	EnumItem AnalyticsEconomyTransactionType.IAP : 0
	EnumItem AnalyticsEconomyTransactionType.Shop : 1
	EnumItem AnalyticsEconomyTransactionType.Gameplay : 2
	EnumItem AnalyticsEconomyTransactionType.ContextualPurchase : 3
	EnumItem AnalyticsEconomyTransactionType.TimedReward : 4
	EnumItem AnalyticsEconomyTransactionType.Onboarding : 5
Enum AnalyticsLogLevel
	EnumItem AnalyticsLogLevel.Trace : 0
	EnumItem AnalyticsLogLevel.Debug : 1
	EnumItem AnalyticsLogLevel.Information : 2
	EnumItem AnalyticsLogLevel.Warning : 3
	EnumItem AnalyticsLogLevel.Error : 4
	EnumItem AnalyticsLogLevel.Fatal : 5
Enum AnalyticsProgressionStatus
	EnumItem AnalyticsProgressionStatus.Default : 0
	EnumItem AnalyticsProgressionStatus.Begin : 1
	EnumItem AnalyticsProgressionStatus.Complete : 2
	EnumItem AnalyticsProgressionStatus.Abandon : 3
	EnumItem AnalyticsProgressionStatus.Fail : 4
Enum AnalyticsProgressionType
	EnumItem AnalyticsProgressionType.Custom : 0
	EnumItem AnalyticsProgressionType.Start : 1
	EnumItem AnalyticsProgressionType.Fail : 2
	EnumItem AnalyticsProgressionType.Complete : 3
Enum AnimationClipFromVideoStatus
	EnumItem AnimationClipFromVideoStatus.Initializing : 0
	EnumItem AnimationClipFromVideoStatus.Pending : 1
	EnumItem AnimationClipFromVideoStatus.Processing : 2
	EnumItem AnimationClipFromVideoStatus.ErrorGeneric : 4
	EnumItem AnimationClipFromVideoStatus.Success : 6
	EnumItem AnimationClipFromVideoStatus.ErrorVideoTooLong : 7
	EnumItem AnimationClipFromVideoStatus.ErrorNoPersonDetected : 8
	EnumItem AnimationClipFromVideoStatus.ErrorVideoUnstable : 9
	EnumItem AnimationClipFromVideoStatus.Timeout : 10
	EnumItem AnimationClipFromVideoStatus.Cancelled : 11
	EnumItem AnimationClipFromVideoStatus.ErrorMultiplePeople : 12
	EnumItem AnimationClipFromVideoStatus.ErrorUploadingVideo : 2001
Enum AnimationPriority
	EnumItem AnimationPriority.Idle : 0
	EnumItem AnimationPriority.Movement : 1
	EnumItem AnimationPriority.Action : 2
	EnumItem AnimationPriority.Action2 : 3
	EnumItem AnimationPriority.Action3 : 4
	EnumItem AnimationPriority.Action4 : 5
	EnumItem AnimationPriority.Core : 1000
Enum AnimatorRetargetingMode
	EnumItem AnimatorRetargetingMode.Default : 0
	EnumItem AnimatorRetargetingMode.Disabled : 1
	EnumItem AnimatorRetargetingMode.Enabled : 2
Enum AnnotationEditingMode
	EnumItem AnnotationEditingMode.None : 0
	EnumItem AnnotationEditingMode.PlacingNew : 1
	EnumItem AnnotationEditingMode.WritingNew : 2
Enum AppLifecycleManagerState
	EnumItem AppLifecycleManagerState.Detached : 0
	EnumItem AppLifecycleManagerState.Active : 1
	EnumItem AppLifecycleManagerState.Inactive : 2
	EnumItem AppLifecycleManagerState.Hidden : 3
Enum AppShellActionType
	EnumItem AppShellActionType.None : 0
	EnumItem AppShellActionType.OpenApp : 1
	EnumItem AppShellActionType.TapChatTab : 2
	EnumItem AppShellActionType.TapConversationEntry : 3
	EnumItem AppShellActionType.TapAvatarTab : 4
	EnumItem AppShellActionType.ReadConversation : 5
	EnumItem AppShellActionType.TapGamePageTab : 6
	EnumItem AppShellActionType.TapHomePageTab : 7
	EnumItem AppShellActionType.GamePageLoaded : 8
	EnumItem AppShellActionType.HomePageLoaded : 9
	EnumItem AppShellActionType.AvatarEditorPageLoaded : 10
Enum AppShellFeature
	EnumItem AppShellFeature.None : 0
	EnumItem AppShellFeature.Chat : 1
	EnumItem AppShellFeature.AvatarEditor : 2
	EnumItem AppShellFeature.GamePage : 3
	EnumItem AppShellFeature.HomePage : 4
	EnumItem AppShellFeature.More : 5
	EnumItem AppShellFeature.Landing : 6
Enum AppUpdateStatus
	EnumItem AppUpdateStatus.Unknown : 0
	EnumItem AppUpdateStatus.NotSupported : 1
	EnumItem AppUpdateStatus.Failed : 2
	EnumItem AppUpdateStatus.NotAvailable : 3
	EnumItem AppUpdateStatus.Available : 4
	EnumItem AppUpdateStatus.AvailableBoundChannel : 5
Enum ApplyStrokeMode
	EnumItem ApplyStrokeMode.Contextual : 0
	EnumItem ApplyStrokeMode.Border : 1
Enum AspectType
	EnumItem AspectType.FitWithinMaxSize : 0
	EnumItem AspectType.ScaleWithParentSize : 1
Enum AssetCreatorType
	EnumItem AssetCreatorType.User : 0
	EnumItem AssetCreatorType.Group : 1
Enum AssetFetchStatus
	EnumItem AssetFetchStatus.Success : 0
	EnumItem AssetFetchStatus.Failure : 1
	EnumItem AssetFetchStatus.None : 2
	EnumItem AssetFetchStatus.Loading : 3
	EnumItem AssetFetchStatus.TimedOut : 4
Enum AssetType
	EnumItem AssetType.Image : 1
	EnumItem AssetType.TShirt : 2
	EnumItem AssetType.Audio : 3
	EnumItem AssetType.Mesh : 4
	EnumItem AssetType.Lua : 5
	EnumItem AssetType.Hat : 8
	EnumItem AssetType.Place : 9
	EnumItem AssetType.Model : 10
	EnumItem AssetType.Shirt : 11
	EnumItem AssetType.Pants : 12
	EnumItem AssetType.Decal : 13
	EnumItem AssetType.Head : 17
	EnumItem AssetType.Face : 18
	EnumItem AssetType.Gear : 19
	EnumItem AssetType.Badge : 21
	EnumItem AssetType.Animation : 24
	EnumItem AssetType.Torso : 27
	EnumItem AssetType.RightArm : 28
	EnumItem AssetType.LeftArm : 29
	EnumItem AssetType.LeftLeg : 30
	EnumItem AssetType.RightLeg : 31
	EnumItem AssetType.Package : 32
	EnumItem AssetType.GamePass : 34
	EnumItem AssetType.Plugin : 38
	EnumItem AssetType.MeshPart : 40
	EnumItem AssetType.HairAccessory : 41
	EnumItem AssetType.FaceAccessory : 42
	EnumItem AssetType.NeckAccessory : 43
	EnumItem AssetType.ShoulderAccessory : 44
	EnumItem AssetType.FrontAccessory : 45
	EnumItem AssetType.BackAccessory : 46
	EnumItem AssetType.WaistAccessory : 47
	EnumItem AssetType.ClimbAnimation : 48
	EnumItem AssetType.DeathAnimation : 49
	EnumItem AssetType.FallAnimation : 50
	EnumItem AssetType.IdleAnimation : 51
	EnumItem AssetType.JumpAnimation : 52
	EnumItem AssetType.RunAnimation : 53
	EnumItem AssetType.SwimAnimation : 54
	EnumItem AssetType.WalkAnimation : 55
	EnumItem AssetType.PoseAnimation : 56
	EnumItem AssetType.EarAccessory : 57
	EnumItem AssetType.EyeAccessory : 58
	EnumItem AssetType.EmoteAnimation : 61
	EnumItem AssetType.Video : 62
	EnumItem AssetType.TShirtAccessory : 64
	EnumItem AssetType.ShirtAccessory : 65
	EnumItem AssetType.PantsAccessory : 66
	EnumItem AssetType.JacketAccessory : 67
	EnumItem AssetType.SweaterAccessory : 68
	EnumItem AssetType.ShortsAccessory : 69
	EnumItem AssetType.LeftShoeAccessory : 70
	EnumItem AssetType.RightShoeAccessory : 71
	EnumItem AssetType.DressSkirtAccessory : 72
	EnumItem AssetType.FontFamily : 73
	EnumItem AssetType.EyebrowAccessory : 76
	EnumItem AssetType.EyelashAccessory : 77
	EnumItem AssetType.MoodAnimation : 78
	EnumItem AssetType.DynamicHead : 79
Enum AssetTypeVerification
	EnumItem AssetTypeVerification.Default : 1
	EnumItem AssetTypeVerification.ClientOnly : 2
	EnumItem AssetTypeVerification.Always : 3
Enum AudioApiRollout
	EnumItem AudioApiRollout.Disabled : 0
	EnumItem AudioApiRollout.Automatic : 1
	EnumItem AudioApiRollout.Enabled : 2
Enum AudioFilterType
	EnumItem AudioFilterType.Peak : 0
	EnumItem AudioFilterType.LowShelf : 1
	EnumItem AudioFilterType.HighShelf : 2
	EnumItem AudioFilterType.Lowpass12dB : 3
	EnumItem AudioFilterType.Lowpass24dB : 4
	EnumItem AudioFilterType.Lowpass48dB : 5
	EnumItem AudioFilterType.Highpass12dB : 6
	EnumItem AudioFilterType.Highpass24dB : 7
	EnumItem AudioFilterType.Highpass48dB : 8
	EnumItem AudioFilterType.Bandpass : 9
	EnumItem AudioFilterType.Notch : 10
Enum AudioSubType
	EnumItem AudioSubType.Music : 1
	EnumItem AudioSubType.SoundEffect : 2
Enum AudioWindowSize
	EnumItem AudioWindowSize.Small : 0
	EnumItem AudioWindowSize.Medium : 1
	EnumItem AudioWindowSize.Large : 2
Enum AutoIndentRule
	EnumItem AutoIndentRule.Off : 0
	EnumItem AutoIndentRule.Absolute : 1
	EnumItem AutoIndentRule.Relative : 2
Enum AutomaticSize
	EnumItem AutomaticSize.None : 0
	EnumItem AutomaticSize.X : 1
	EnumItem AutomaticSize.Y : 2
	EnumItem AutomaticSize.XY : 3
Enum AvatarAssetType
	EnumItem AvatarAssetType.TShirt : 2
	EnumItem AvatarAssetType.Hat : 8
	EnumItem AvatarAssetType.Shirt : 11
	EnumItem AvatarAssetType.Pants : 12
	EnumItem AvatarAssetType.Head : 17
	EnumItem AvatarAssetType.Face : 18
	EnumItem AvatarAssetType.Gear : 19
	EnumItem AvatarAssetType.Torso : 27
	EnumItem AvatarAssetType.RightArm : 28
	EnumItem AvatarAssetType.LeftArm : 29
	EnumItem AvatarAssetType.LeftLeg : 30
	EnumItem AvatarAssetType.RightLeg : 31
	EnumItem AvatarAssetType.HairAccessory : 41
	EnumItem AvatarAssetType.FaceAccessory : 42
	EnumItem AvatarAssetType.NeckAccessory : 43
	EnumItem AvatarAssetType.ShoulderAccessory : 44
	EnumItem AvatarAssetType.FrontAccessory : 45
	EnumItem AvatarAssetType.BackAccessory : 46
	EnumItem AvatarAssetType.WaistAccessory : 47
	EnumItem AvatarAssetType.ClimbAnimation : 48
	EnumItem AvatarAssetType.FallAnimation : 50
	EnumItem AvatarAssetType.IdleAnimation : 51
	EnumItem AvatarAssetType.JumpAnimation : 52
	EnumItem AvatarAssetType.RunAnimation : 53
	EnumItem AvatarAssetType.SwimAnimation : 54
	EnumItem AvatarAssetType.WalkAnimation : 55
	EnumItem AvatarAssetType.EmoteAnimation : 61
	EnumItem AvatarAssetType.TShirtAccessory : 64
	EnumItem AvatarAssetType.ShirtAccessory : 65
	EnumItem AvatarAssetType.PantsAccessory : 66
	EnumItem AvatarAssetType.JacketAccessory : 67
	EnumItem AvatarAssetType.SweaterAccessory : 68
	EnumItem AvatarAssetType.ShortsAccessory : 69
	EnumItem AvatarAssetType.LeftShoeAccessory : 70
	EnumItem AvatarAssetType.RightShoeAccessory : 71
	EnumItem AvatarAssetType.DressSkirtAccessory : 72
	EnumItem AvatarAssetType.EyebrowAccessory : 76
	EnumItem AvatarAssetType.EyelashAccessory : 77
	EnumItem AvatarAssetType.MoodAnimation : 78
	EnumItem AvatarAssetType.DynamicHead : 79
Enum AvatarChatServiceFeature
	EnumItem AvatarChatServiceFeature.None : 0
	EnumItem AvatarChatServiceFeature.UniverseAudio : 1
	EnumItem AvatarChatServiceFeature.UniverseVideo : 2
	EnumItem AvatarChatServiceFeature.PlaceAudio : 4
	EnumItem AvatarChatServiceFeature.PlaceVideo : 8
	EnumItem AvatarChatServiceFeature.UserAudioEligible : 16
	EnumItem AvatarChatServiceFeature.UserAudio : 32
	EnumItem AvatarChatServiceFeature.UserVideoEligible : 64
	EnumItem AvatarChatServiceFeature.UserVideo : 128
	EnumItem AvatarChatServiceFeature.UserBanned : 256
	EnumItem AvatarChatServiceFeature.UserVerifiedForVoice : 512
Enum AvatarContextMenuOption
	EnumItem AvatarContextMenuOption.Friend : 0
	EnumItem AvatarContextMenuOption.Chat : 1
	EnumItem AvatarContextMenuOption.Emote : 2
	EnumItem AvatarContextMenuOption.InspectMenu : 3
Enum AvatarGenerationError
	EnumItem AvatarGenerationError.None : 0
	EnumItem AvatarGenerationError.Unknown : 1
	EnumItem AvatarGenerationError.DownloadFailed : 2
	EnumItem AvatarGenerationError.Canceled : 3
	EnumItem AvatarGenerationError.Offensive : 4
	EnumItem AvatarGenerationError.Timeout : 5
	EnumItem AvatarGenerationError.JobNotFound : 6
Enum AvatarItemType
	EnumItem AvatarItemType.Asset : 1
	EnumItem AvatarItemType.Bundle : 2
Enum AvatarJointUpgrade
	EnumItem AvatarJointUpgrade.Default : 0
	EnumItem AvatarJointUpgrade.Enabled : 1
	EnumItem AvatarJointUpgrade.Disabled : 2
Enum AvatarPromptResult
	EnumItem AvatarPromptResult.Success : 1
	EnumItem AvatarPromptResult.PermissionDenied : 2
	EnumItem AvatarPromptResult.Failed : 3
Enum AvatarThumbnailCustomizationType
	EnumItem AvatarThumbnailCustomizationType.Closeup : 1
	EnumItem AvatarThumbnailCustomizationType.FullBody : 2
Enum AvatarUnificationMode
	EnumItem AvatarUnificationMode.Default : 0
	EnumItem AvatarUnificationMode.Disabled : 1
	EnumItem AvatarUnificationMode.Enabled : 2
Enum Axis
	EnumItem Axis.X : 0
	EnumItem Axis.Y : 1
	EnumItem Axis.Z : 2
Enum BinType
	EnumItem BinType.Script : 0
	EnumItem BinType.GameTool : 1
	EnumItem BinType.Grab : 2
	EnumItem BinType.Clone : 3
	EnumItem BinType.Hammer : 4
Enum BodyPart
	EnumItem BodyPart.Head : 0
	EnumItem BodyPart.Torso : 1
	EnumItem BodyPart.LeftArm : 2
	EnumItem BodyPart.RightArm : 3
	EnumItem BodyPart.LeftLeg : 4
	EnumItem BodyPart.RightLeg : 5
Enum BodyPartR15
	EnumItem BodyPartR15.Head : 0
	EnumItem BodyPartR15.UpperTorso : 1
	EnumItem BodyPartR15.LowerTorso : 2
	EnumItem BodyPartR15.LeftFoot : 3
	EnumItem BodyPartR15.LeftLowerLeg : 4
	EnumItem BodyPartR15.LeftUpperLeg : 5
	EnumItem BodyPartR15.RightFoot : 6
	EnumItem BodyPartR15.RightLowerLeg : 7
	EnumItem BodyPartR15.RightUpperLeg : 8
	EnumItem BodyPartR15.LeftHand : 9
	EnumItem BodyPartR15.LeftLowerArm : 10
	EnumItem BodyPartR15.LeftUpperArm : 11
	EnumItem BodyPartR15.RightHand : 12
	EnumItem BodyPartR15.RightLowerArm : 13
	EnumItem BodyPartR15.RightUpperArm : 14
	EnumItem BodyPartR15.RootPart : 15
	EnumItem BodyPartR15.Unknown : 17
Enum BorderMode
	EnumItem BorderMode.Outline : 0
	EnumItem BorderMode.Middle : 1
	EnumItem BorderMode.Inset : 2
Enum BreakReason
	EnumItem BreakReason.Other : 0
	EnumItem BreakReason.Error : 1
	EnumItem BreakReason.SpecialBreakpoint : 2
	EnumItem BreakReason.UserBreakpoint : 3
Enum BreakpointRemoveReason
	EnumItem BreakpointRemoveReason.Requested : 0
	EnumItem BreakpointRemoveReason.ScriptChanged : 1
	EnumItem BreakpointRemoveReason.ScriptRemoved : 2
Enum BulkMoveMode
	EnumItem BulkMoveMode.FireAllEvents : 0
	EnumItem BulkMoveMode.FireCFrameChanged : 1
Enum BundleType
	EnumItem BundleType.BodyParts : 1
	EnumItem BundleType.Animations : 2
	EnumItem BundleType.Shoes : 3
	EnumItem BundleType.DynamicHead : 4
	EnumItem BundleType.DynamicHeadAvatar : 5
Enum Button
	EnumItem Button.Dismount : 8
	EnumItem Button.Jump : 32
Enum ButtonStyle
	EnumItem ButtonStyle.Custom : 0
	EnumItem ButtonStyle.RobloxButtonDefault : 1
	EnumItem ButtonStyle.RobloxButton : 2
	EnumItem ButtonStyle.RobloxRoundButton : 3
	EnumItem ButtonStyle.RobloxRoundDefaultButton : 4
	EnumItem ButtonStyle.RobloxRoundDropdownButton : 5
Enum CSGAsyncDynamicCollision
	EnumItem CSGAsyncDynamicCollision.Default : 0
	EnumItem CSGAsyncDynamicCollision.Disabled : 1
	EnumItem CSGAsyncDynamicCollision.Enabled : 2
Enum CageType
	EnumItem CageType.Inner : 0
	EnumItem CageType.Outer : 1
Enum CameraMode
	EnumItem CameraMode.Classic : 0
	EnumItem CameraMode.LockFirstPerson : 1
Enum CameraPanMode
	EnumItem CameraPanMode.Classic : 0
	EnumItem CameraPanMode.EdgeBump : 1
Enum CameraSpeedAdjustBinding
	EnumItem CameraSpeedAdjustBinding.None : 0
	EnumItem CameraSpeedAdjustBinding.RmbScroll : 1
	EnumItem CameraSpeedAdjustBinding.AltScroll : 2
Enum CameraType
	EnumItem CameraType.Fixed : 0
	EnumItem CameraType.Attach : 1
	EnumItem CameraType.Watch : 2
	EnumItem CameraType.Track : 3
	EnumItem CameraType.Follow : 4
	EnumItem CameraType.Custom : 5
	EnumItem CameraType.Scriptable : 6
	EnumItem CameraType.Orbital : 7
Enum CatalogCategoryFilter
	EnumItem CatalogCategoryFilter.None : 1
	EnumItem CatalogCategoryFilter.Featured : 2
	EnumItem CatalogCategoryFilter.Collectibles : 3
	EnumItem CatalogCategoryFilter.CommunityCreations : 4
	EnumItem CatalogCategoryFilter.Premium : 5
	EnumItem CatalogCategoryFilter.Recommended : 6
Enum CatalogSortAggregation
	EnumItem CatalogSortAggregation.Past12Hours : 1
	EnumItem CatalogSortAggregation.PastDay : 2
	EnumItem CatalogSortAggregation.Past3Days : 3
	EnumItem CatalogSortAggregation.PastWeek : 4
	EnumItem CatalogSortAggregation.PastMonth : 5
	EnumItem CatalogSortAggregation.AllTime : 6
Enum CatalogSortType
	EnumItem CatalogSortType.Relevance : 1
	EnumItem CatalogSortType.PriceHighToLow : 2
	EnumItem CatalogSortType.PriceLowToHigh : 3
	EnumItem CatalogSortType.MostFavorited : 5
	EnumItem CatalogSortType.RecentlyCreated : 6
	EnumItem CatalogSortType.Bestselling : 7
Enum CellBlock
	EnumItem CellBlock.Solid : 0
	EnumItem CellBlock.VerticalWedge : 1
	EnumItem CellBlock.CornerWedge : 2
	EnumItem CellBlock.InverseCornerWedge : 3
	EnumItem CellBlock.HorizontalWedge : 4
Enum CellMaterial
	EnumItem CellMaterial.Empty : 0
	EnumItem CellMaterial.Grass : 1
	EnumItem CellMaterial.Sand : 2
	EnumItem CellMaterial.Brick : 3
	EnumItem CellMaterial.Granite : 4
	EnumItem CellMaterial.Asphalt : 5
	EnumItem CellMaterial.Iron : 6
	EnumItem CellMaterial.Aluminum : 7
	EnumItem CellMaterial.Gold : 8
	EnumItem CellMaterial.WoodPlank : 9
	EnumItem CellMaterial.WoodLog : 10
	EnumItem CellMaterial.Gravel : 11
	EnumItem CellMaterial.CinderBlock : 12
	EnumItem CellMaterial.MossyStone : 13
	EnumItem CellMaterial.Cement : 14
	EnumItem CellMaterial.RedPlastic : 15
	EnumItem CellMaterial.BluePlastic : 16
	EnumItem CellMaterial.Water : 17
Enum CellOrientation
	EnumItem CellOrientation.NegZ : 0
	EnumItem CellOrientation.X : 1
	EnumItem CellOrientation.Z : 2
	EnumItem CellOrientation.NegX : 3
Enum CenterDialogType
	EnumItem CenterDialogType.UnsolicitedDialog : 1
	EnumItem CenterDialogType.PlayerInitiatedDialog : 2
	EnumItem CenterDialogType.ModalDialog : 3
	EnumItem CenterDialogType.QuitDialog : 4
Enum CharacterControlMode
	EnumItem CharacterControlMode.Default : 0
	EnumItem CharacterControlMode.Legacy : 1
	EnumItem CharacterControlMode.NoCharacterController : 2
	EnumItem CharacterControlMode.LuaCharacterController : 3
Enum ChatCallbackType
	EnumItem ChatCallbackType.OnCreatingChatWindow : 1
	EnumItem ChatCallbackType.OnClientSendingMessage : 2
	EnumItem ChatCallbackType.OnClientFormattingMessage : 3
	EnumItem ChatCallbackType.OnServerReceivingMessage : 17
Enum ChatColor
	EnumItem ChatColor.Blue : 0
	EnumItem ChatColor.Green : 1
	EnumItem ChatColor.Red : 2
	EnumItem ChatColor.White : 3
Enum ChatMode
	EnumItem ChatMode.Menu : 0
	EnumItem ChatMode.TextAndMenu : 1
Enum ChatPrivacyMode
	EnumItem ChatPrivacyMode.AllUsers : 0
	EnumItem ChatPrivacyMode.NoOne : 1
	EnumItem ChatPrivacyMode.Friends : 2
Enum ChatRestrictionStatus
	EnumItem ChatRestrictionStatus.Unknown : 0
	EnumItem ChatRestrictionStatus.NotRestricted : 1
	EnumItem ChatRestrictionStatus.Restricted : 2
Enum ChatStyle
	EnumItem ChatStyle.Classic : 0
	EnumItem ChatStyle.Bubble : 1
	EnumItem ChatStyle.ClassicAndBubble : 2
Enum ChatVersion
	EnumItem ChatVersion.LegacyChatService : 0
	EnumItem ChatVersion.TextChatService : 1
Enum ClientAnimatorThrottlingMode
	EnumItem ClientAnimatorThrottlingMode.Default : 0
	EnumItem ClientAnimatorThrottlingMode.Disabled : 1
	EnumItem ClientAnimatorThrottlingMode.Enabled : 2
Enum CloseReason
	EnumItem CloseReason.Unknown : 0
	EnumItem CloseReason.RobloxMaintenance : 1
	EnumItem CloseReason.DeveloperShutdown : 2
	EnumItem CloseReason.DeveloperUpdate : 3
	EnumItem CloseReason.ServerEmpty : 4
	EnumItem CloseReason.OutOfMemory : 5
Enum CollaboratorStatus
	EnumItem CollaboratorStatus.None : 0
	EnumItem CollaboratorStatus.Editing3D : 1
	EnumItem CollaboratorStatus.Scripting : 2
	EnumItem CollaboratorStatus.PrivateScripting : 3
Enum CollisionFidelity
	EnumItem CollisionFidelity.Default : 0
	EnumItem CollisionFidelity.Hull : 1
	EnumItem CollisionFidelity.Box : 2
	EnumItem CollisionFidelity.PreciseConvexDecomposition : 3
Enum CommandPermission
	EnumItem CommandPermission.Plugin : 0
	EnumItem CommandPermission.LocalUser : 1
Enum CompileTarget
	EnumItem CompileTarget.Client : 0
	EnumItem CompileTarget.CoreScript : 1
	EnumItem CompileTarget.Studio : 2
	EnumItem CompileTarget.CoreScriptRaw : 3
Enum CompletionItemKind
	EnumItem CompletionItemKind.Text : 1
	EnumItem CompletionItemKind.Method : 2
	EnumItem CompletionItemKind.Function : 3
	EnumItem CompletionItemKind.Constructor : 4
	EnumItem CompletionItemKind.Field : 5
	EnumItem CompletionItemKind.Variable : 6
	EnumItem CompletionItemKind.Class : 7
	EnumItem CompletionItemKind.Interface : 8
	EnumItem CompletionItemKind.Module : 9
	EnumItem CompletionItemKind.Property : 10
	EnumItem CompletionItemKind.Unit : 11
	EnumItem CompletionItemKind.Value : 12
	EnumItem CompletionItemKind.Enum : 13
	EnumItem CompletionItemKind.Keyword : 14
	EnumItem CompletionItemKind.Snippet : 15
	EnumItem CompletionItemKind.Color : 16
	EnumItem CompletionItemKind.File : 17
	EnumItem CompletionItemKind.Reference : 18
	EnumItem CompletionItemKind.Folder : 19
	EnumItem CompletionItemKind.EnumMember : 20
	EnumItem CompletionItemKind.Constant : 21
	EnumItem CompletionItemKind.Struct : 22
	EnumItem CompletionItemKind.Event : 23
	EnumItem CompletionItemKind.Operator : 24
	EnumItem CompletionItemKind.TypeParameter : 25
Enum CompletionItemTag
	EnumItem CompletionItemTag.Deprecated : 1
	EnumItem CompletionItemTag.IncorrectIndexType : 2
	EnumItem CompletionItemTag.PluginPermissions : 3
	EnumItem CompletionItemTag.CommandLinePermissions : 4
	EnumItem CompletionItemTag.RobloxPermissions : 5
	EnumItem CompletionItemTag.AddParens : 6
	EnumItem CompletionItemTag.PutCursorInParens : 7
	EnumItem CompletionItemTag.TypeCorrect : 8
	EnumItem CompletionItemTag.ClientServerBoundaryViolation : 9
	EnumItem CompletionItemTag.Invalidated : 10
	EnumItem CompletionItemTag.PutCursorBeforeEnd : 11
Enum CompletionTriggerKind
	EnumItem CompletionTriggerKind.Invoked : 1
	EnumItem CompletionTriggerKind.TriggerCharacter : 2
	EnumItem CompletionTriggerKind.TriggerForIncompleteCompletions : 3
Enum ComputerCameraMovementMode
	EnumItem ComputerCameraMovementMode.Default : 0
	EnumItem ComputerCameraMovementMode.Classic : 1
	EnumItem ComputerCameraMovementMode.Follow : 2
	EnumItem ComputerCameraMovementMode.Orbital : 3
	EnumItem ComputerCameraMovementMode.CameraToggle : 4
Enum ComputerMovementMode
	EnumItem ComputerMovementMode.Default : 0
	EnumItem ComputerMovementMode.KeyboardMouse : 1
	EnumItem ComputerMovementMode.ClickToMove : 2
Enum ConnectionError
	EnumItem ConnectionError.OK : 0
	EnumItem ConnectionError.Unknown : 1
	EnumItem ConnectionError.DisconnectErrors : 256
	EnumItem ConnectionError.DisconnectBadhash : 257
	EnumItem ConnectionError.DisconnectSecurityKeyMismatch : 258
	EnumItem ConnectionError.DisconnectProtocolMismatch : 259
	EnumItem ConnectionError.DisconnectReceivePacketError : 260
	EnumItem ConnectionError.DisconnectReceivePacketStreamError : 261
	EnumItem ConnectionError.DisconnectSendPacketError : 262
	EnumItem ConnectionError.DisconnectIllegalTeleport : 263
	EnumItem ConnectionError.DisconnectDuplicatePlayer : 264
	EnumItem ConnectionError.DisconnectDuplicateTicket : 265
	EnumItem ConnectionError.DisconnectTimeout : 266
	EnumItem ConnectionError.DisconnectLuaKick : 267
	EnumItem ConnectionError.DisconnectOnRemoteSysStats : 268
	EnumItem ConnectionError.DisconnectHashTimeout : 269
	EnumItem ConnectionError.DisconnectCloudEditKick : 270
	EnumItem ConnectionError.DisconnectPlayerless : 271
	EnumItem ConnectionError.DisconnectNewSecurityKeyMismatch : 272
	EnumItem ConnectionError.DisconnectEvicted : 273
	EnumItem ConnectionError.DisconnectDevMaintenance : 274
	EnumItem ConnectionError.DisconnectRobloxMaintenance : 275
	EnumItem ConnectionError.DisconnectRejoin : 276
	EnumItem ConnectionError.DisconnectConnectionLost : 277
	EnumItem ConnectionError.DisconnectIdle : 278
	EnumItem ConnectionError.DisconnectRaknetErrors : 279
	EnumItem ConnectionError.DisconnectWrongVersion : 280
	EnumItem ConnectionError.DisconnectBySecurityPolicy : 281
	EnumItem ConnectionError.DisconnectBlockedIP : 282
	EnumItem ConnectionError.DisconnectClientFailure : 284
	EnumItem ConnectionError.DisconnectClientRequest : 285
	EnumItem ConnectionError.DisconnectPrivateServerKickout : 286
	EnumItem ConnectionError.DisconnectModeratedGame : 287
	EnumItem ConnectionError.ServerShutdown : 288
	EnumItem ConnectionError.ReplicatorTimeout : 290
	EnumItem ConnectionError.PlayerRemoved : 291
	EnumItem ConnectionError.DisconnectOutOfMemoryKeepPlayingLeave : 292
	EnumItem ConnectionError.DisconnectRomarkEndOfTest : 293
	EnumItem ConnectionError.DisconnectCollaboratorPermissionRevoked : 294
	EnumItem ConnectionError.DisconnectCollaboratorUnderage : 295
	EnumItem ConnectionError.NetworkInternal : 296
	EnumItem ConnectionError.NetworkSend : 297
	EnumItem ConnectionError.NetworkTimeout : 298
	EnumItem ConnectionError.NetworkMisbehavior : 299
	EnumItem ConnectionError.NetworkSecurity : 300
	EnumItem ConnectionError.ReplacementReady : 301
	EnumItem ConnectionError.ServerEmpty : 302
	EnumItem ConnectionError.PlacelaunchErrors : 512
	EnumItem ConnectionError.PlacelaunchDisabled : 515
	EnumItem ConnectionError.PlacelaunchError : 516
	EnumItem ConnectionError.PlacelaunchGameEnded : 517
	EnumItem ConnectionError.PlacelaunchGameFull : 518
	EnumItem ConnectionError.PlacelaunchUserLeft : 522
	EnumItem ConnectionError.PlacelaunchRestricted : 523
	EnumItem ConnectionError.PlacelaunchUnauthorized : 524
	EnumItem ConnectionError.PlacelaunchFlooded : 525
	EnumItem ConnectionError.PlacelaunchHashExpired : 526
	EnumItem ConnectionError.PlacelaunchHashException : 527
	EnumItem ConnectionError.PlacelaunchPartyCannotFit : 528
	EnumItem ConnectionError.PlacelaunchHttpError : 529
	EnumItem ConnectionError.PlacelaunchUserPrivacyUnauthorized : 533
	EnumItem ConnectionError.PlacelaunchCreatorBan : 600
	EnumItem ConnectionError.PlacelaunchCustomMessage : 610
	EnumItem ConnectionError.PlacelaunchOtherError : 611
	EnumItem ConnectionError.TeleportErrors : 768
	EnumItem ConnectionError.TeleportFailure : 769
	EnumItem ConnectionError.TeleportGameNotFound : 770
	EnumItem ConnectionError.TeleportGameEnded : 771
	EnumItem ConnectionError.TeleportGameFull : 772
	EnumItem ConnectionError.TeleportUnauthorized : 773
	EnumItem ConnectionError.TeleportFlooded : 774
	EnumItem ConnectionError.TeleportIsTeleporting : 775
Enum ConnectionState
	EnumItem ConnectionState.Connected : 0
	EnumItem ConnectionState.Disconnected : 1
Enum ContentSourceType
	EnumItem ContentSourceType.None : 0
	EnumItem ContentSourceType.Uri : 1
	EnumItem ContentSourceType.Object : 2
Enum ContextActionPriority
	EnumItem ContextActionPriority.Low : 1000
	EnumItem ContextActionPriority.Medium : 2000
	EnumItem ContextActionPriority.High : 3000
Enum ContextActionResult
	EnumItem ContextActionResult.Sink : 0
	EnumItem ContextActionResult.Pass : 1
Enum ControlMode
	EnumItem ControlMode.Classic : 0
	EnumItem ControlMode.MouseLockSwitch : 1
Enum CoreGuiType
	EnumItem CoreGuiType.PlayerList : 0
	EnumItem CoreGuiType.Health : 1
	EnumItem CoreGuiType.Backpack : 2
	EnumItem CoreGuiType.Chat : 3
	EnumItem CoreGuiType.All : 4
	EnumItem CoreGuiType.EmotesMenu : 5
	EnumItem CoreGuiType.SelfView : 6
	EnumItem CoreGuiType.Captures : 7
Enum CreateOutfitFailure
	EnumItem CreateOutfitFailure.InvalidName : 1
	EnumItem CreateOutfitFailure.OutfitLimitReached : 2
	EnumItem CreateOutfitFailure.Other : 3
Enum CreatorType
	EnumItem CreatorType.User : 0
	EnumItem CreatorType.Group : 1
Enum CreatorTypeFilter
	EnumItem CreatorTypeFilter.User : 0
	EnumItem CreatorTypeFilter.Group : 1
	EnumItem CreatorTypeFilter.All : 2
Enum CurrencyType
	EnumItem CurrencyType.Default : 0
	EnumItem CurrencyType.Robux : 1
	EnumItem CurrencyType.Tix : 2
Enum CustomCameraMode
	EnumItem CustomCameraMode.Default : 0
	EnumItem CustomCameraMode.Classic : 1
	EnumItem CustomCameraMode.Follow : 2
Enum DataStoreRequestType
	EnumItem DataStoreRequestType.GetAsync : 0
	EnumItem DataStoreRequestType.SetIncrementAsync : 1
	EnumItem DataStoreRequestType.UpdateAsync : 2
	EnumItem DataStoreRequestType.GetSortedAsync : 3
	EnumItem DataStoreRequestType.SetIncrementSortedAsync : 4
	EnumItem DataStoreRequestType.OnUpdate : 5
	EnumItem DataStoreRequestType.ListAsync : 6
	EnumItem DataStoreRequestType.GetVersionAsync : 7
	EnumItem DataStoreRequestType.RemoveVersionAsync : 8
Enum DebuggerEndReason
	EnumItem DebuggerEndReason.ClientRequest : 0
	EnumItem DebuggerEndReason.Timeout : 1
	EnumItem DebuggerEndReason.InvalidHost : 2
	EnumItem DebuggerEndReason.Disconnected : 3
	EnumItem DebuggerEndReason.ServerShutdown : 4
	EnumItem DebuggerEndReason.ServerProtocolMismatch : 5
	EnumItem DebuggerEndReason.ConfigurationFailed : 6
	EnumItem DebuggerEndReason.RpcError : 7
Enum DebuggerExceptionBreakMode
	EnumItem DebuggerExceptionBreakMode.Never : 0
	EnumItem DebuggerExceptionBreakMode.Always : 1
	EnumItem DebuggerExceptionBreakMode.Unhandled : 2
Enum DebuggerFrameType
	EnumItem DebuggerFrameType.C : 0
	EnumItem DebuggerFrameType.Lua : 1
Enum DebuggerPauseReason
	EnumItem DebuggerPauseReason.Unknown : 0
	EnumItem DebuggerPauseReason.Requested : 1
	EnumItem DebuggerPauseReason.Breakpoint : 2
	EnumItem DebuggerPauseReason.Exception : 3
	EnumItem DebuggerPauseReason.SingleStep : 4
	EnumItem DebuggerPauseReason.Entrypoint : 5
Enum DebuggerStatus
	EnumItem DebuggerStatus.Success : 0
	EnumItem DebuggerStatus.Timeout : 1
	EnumItem DebuggerStatus.ConnectionLost : 2
	EnumItem DebuggerStatus.InvalidResponse : 3
	EnumItem DebuggerStatus.InternalError : 4
	EnumItem DebuggerStatus.InvalidState : 5
	EnumItem DebuggerStatus.RpcError : 6
	EnumItem DebuggerStatus.InvalidArgument : 7
	EnumItem DebuggerStatus.ConnectionClosed : 8
Enum DecreaseMinimumPartDensityMode
	EnumItem DecreaseMinimumPartDensityMode.Default : 0
	EnumItem DecreaseMinimumPartDensityMode.Disabled : 1
	EnumItem DecreaseMinimumPartDensityMode.Enabled : 2
Enum DevCameraOcclusionMode
	EnumItem DevCameraOcclusionMode.Zoom : 0
	EnumItem DevCameraOcclusionMode.Invisicam : 1
Enum DevComputerCameraMovementMode
	EnumItem DevComputerCameraMovementMode.UserChoice : 0
	EnumItem DevComputerCameraMovementMode.Classic : 1
	EnumItem DevComputerCameraMovementMode.Follow : 2
	EnumItem DevComputerCameraMovementMode.Orbital : 3
	EnumItem DevComputerCameraMovementMode.CameraToggle : 4
Enum DevComputerMovementMode
	EnumItem DevComputerMovementMode.UserChoice : 0
	EnumItem DevComputerMovementMode.KeyboardMouse : 1
	EnumItem DevComputerMovementMode.ClickToMove : 2
	EnumItem DevComputerMovementMode.Scriptable : 3
Enum DevTouchCameraMovementMode
	EnumItem DevTouchCameraMovementMode.UserChoice : 0
	EnumItem DevTouchCameraMovementMode.Classic : 1
	EnumItem DevTouchCameraMovementMode.Follow : 2
	EnumItem DevTouchCameraMovementMode.Orbital : 3
Enum DevTouchMovementMode
	EnumItem DevTouchMovementMode.UserChoice : 0
	EnumItem DevTouchMovementMode.Thumbstick : 1
	EnumItem DevTouchMovementMode.DPad : 2
	EnumItem DevTouchMovementMode.Thumbpad : 3
	EnumItem DevTouchMovementMode.ClickToMove : 4
	EnumItem DevTouchMovementMode.Scriptable : 5
	EnumItem DevTouchMovementMode.DynamicThumbstick : 6
Enum DeveloperMemoryTag
	EnumItem DeveloperMemoryTag.Internal : 0
	EnumItem DeveloperMemoryTag.HttpCache : 1
	EnumItem DeveloperMemoryTag.Instances : 2
	EnumItem DeveloperMemoryTag.Signals : 3
	EnumItem DeveloperMemoryTag.LuaHeap : 4
	EnumItem DeveloperMemoryTag.Script : 5
	EnumItem DeveloperMemoryTag.PhysicsCollision : 6
	EnumItem DeveloperMemoryTag.PhysicsParts : 7
	EnumItem DeveloperMemoryTag.GraphicsSolidModels : 8
	EnumItem DeveloperMemoryTag.GraphicsMeshParts : 10
	EnumItem DeveloperMemoryTag.GraphicsParticles : 11
	EnumItem DeveloperMemoryTag.GraphicsParts : 12
	EnumItem DeveloperMemoryTag.GraphicsSpatialHash : 13
	EnumItem DeveloperMemoryTag.GraphicsTerrain : 14
	EnumItem DeveloperMemoryTag.GraphicsTexture : 15
	EnumItem DeveloperMemoryTag.GraphicsTextureCharacter : 16
	EnumItem DeveloperMemoryTag.Sounds : 17
	EnumItem DeveloperMemoryTag.StreamingSounds : 18
	EnumItem DeveloperMemoryTag.TerrainVoxels : 19
	EnumItem DeveloperMemoryTag.Gui : 21
	EnumItem DeveloperMemoryTag.Animation : 22
	EnumItem DeveloperMemoryTag.Navigation : 23
	EnumItem DeveloperMemoryTag.GeometryCSG : 24
Enum DeviceFeatureType
	EnumItem DeviceFeatureType.DeviceCapture : 0
Enum DeviceLevel
	EnumItem DeviceLevel.Low : 0
	EnumItem DeviceLevel.Medium : 1
	EnumItem DeviceLevel.High : 2
Enum DeviceType
	EnumItem DeviceType.Unknown : 0
	EnumItem DeviceType.Desktop : 1
	EnumItem DeviceType.Tablet : 2
	EnumItem DeviceType.Phone : 3
Enum DialogBehaviorType
	EnumItem DialogBehaviorType.SinglePlayer : 0
	EnumItem DialogBehaviorType.MultiplePlayers : 1
Enum DialogPurpose
	EnumItem DialogPurpose.Quest : 0
	EnumItem DialogPurpose.Help : 1
	EnumItem DialogPurpose.Shop : 2
Enum DialogTone
	EnumItem DialogTone.Neutral : 0
	EnumItem DialogTone.Friendly : 1
	EnumItem DialogTone.Enemy : 2
Enum DominantAxis
	EnumItem DominantAxis.Width : 0
	EnumItem DominantAxis.Height : 1
Enum DraftStatusCode
	EnumItem DraftStatusCode.OK : 0
	EnumItem DraftStatusCode.DraftOutdated : 1
	EnumItem DraftStatusCode.ScriptRemoved : 2
	EnumItem DraftStatusCode.DraftCommitted : 3
Enum DragDetectorDragStyle
	EnumItem DragDetectorDragStyle.TranslateLine : 0
	EnumItem DragDetectorDragStyle.TranslatePlane : 1
	EnumItem DragDetectorDragStyle.TranslatePlaneOrLine : 2
	EnumItem DragDetectorDragStyle.TranslateLineOrPlane : 3
	EnumItem DragDetectorDragStyle.TranslateViewPlane : 4
	EnumItem DragDetectorDragStyle.RotateAxis : 5
	EnumItem DragDetectorDragStyle.RotateTrackball : 6
	EnumItem DragDetectorDragStyle.Scriptable : 7
	EnumItem DragDetectorDragStyle.BestForDevice : 8
Enum DragDetectorPermissionPolicy
	EnumItem DragDetectorPermissionPolicy.Nobody : 0
	EnumItem DragDetectorPermissionPolicy.Everybody : 1
	EnumItem DragDetectorPermissionPolicy.Scriptable : 2
Enum DragDetectorResponseStyle
	EnumItem DragDetectorResponseStyle.Geometric : 0
	EnumItem DragDetectorResponseStyle.Physical : 1
	EnumItem DragDetectorResponseStyle.Custom : 2
Enum DraggerCoordinateSpace
	EnumItem DraggerCoordinateSpace.Object : 0
	EnumItem DraggerCoordinateSpace.World : 1
Enum DraggerMovementMode
	EnumItem DraggerMovementMode.Geometric : 0
	EnumItem DraggerMovementMode.Physical : 1
Enum EasingDirection
	EnumItem EasingDirection.In : 0
	EnumItem EasingDirection.Out : 1
	EnumItem EasingDirection.InOut : 2
Enum EasingStyle
	EnumItem EasingStyle.Linear : 0
	EnumItem EasingStyle.Sine : 1
	EnumItem EasingStyle.Back : 2
	EnumItem EasingStyle.Quad : 3
	EnumItem EasingStyle.Quart : 4
	EnumItem EasingStyle.Quint : 5
	EnumItem EasingStyle.Bounce : 6
	EnumItem EasingStyle.Elastic : 7
	EnumItem EasingStyle.Exponential : 8
	EnumItem EasingStyle.Circular : 9
	EnumItem EasingStyle.Cubic : 10
Enum EditableStatus
	EnumItem EditableStatus.Unknown : 0
	EnumItem EditableStatus.Allowed : 1
	EnumItem EditableStatus.Disallowed : 2
Enum ElasticBehavior
	EnumItem ElasticBehavior.WhenScrollable : 0
	EnumItem ElasticBehavior.Always : 1
	EnumItem ElasticBehavior.Never : 2
Enum EnviromentalPhysicsThrottle
	EnumItem EnviromentalPhysicsThrottle.DefaultAuto : 0
	EnumItem EnviromentalPhysicsThrottle.Disabled : 1
	EnumItem EnviromentalPhysicsThrottle.Always : 2
	EnumItem EnviromentalPhysicsThrottle.Skip2 : 3
	EnumItem EnviromentalPhysicsThrottle.Skip4 : 4
	EnumItem EnviromentalPhysicsThrottle.Skip8 : 5
	EnumItem EnviromentalPhysicsThrottle.Skip16 : 6
Enum ExperienceAuthScope
	EnumItem ExperienceAuthScope.DefaultScope : 0
	EnumItem ExperienceAuthScope.CreatorAssetsCreate : 1
Enum ExplosionType
	EnumItem ExplosionType.NoCraters : 0
	EnumItem ExplosionType.Craters : 1
Enum FACSDataLod
	EnumItem FACSDataLod.LOD0 : 0
	EnumItem FACSDataLod.LOD1 : 1
	EnumItem FACSDataLod.LODCount : 2
Enum FacialAnimationStreamingState
	EnumItem FacialAnimationStreamingState.None : 0
	EnumItem FacialAnimationStreamingState.Audio : 1
	EnumItem FacialAnimationStreamingState.Video : 2
	EnumItem FacialAnimationStreamingState.Place : 4
	EnumItem FacialAnimationStreamingState.Server : 8
Enum FieldOfViewMode
	EnumItem FieldOfViewMode.Vertical : 0
	EnumItem FieldOfViewMode.Diagonal : 1
	EnumItem FieldOfViewMode.MaxAxis : 2
Enum FillDirection
	EnumItem FillDirection.Horizontal : 0
	EnumItem FillDirection.Vertical : 1
Enum FilterErrorType
	EnumItem FilterErrorType.BackslashNotEscapingAnything : 0
	EnumItem FilterErrorType.BadBespokeFilter : 1
	EnumItem FilterErrorType.BadName : 2
	EnumItem FilterErrorType.IncompleteOr : 3
	EnumItem FilterErrorType.IncompleteParenthesis : 4
	EnumItem FilterErrorType.InvalidDoubleStar : 5
	EnumItem FilterErrorType.InvalidTilde : 6
	EnumItem FilterErrorType.PropertyBadOperator : 7
	EnumItem FilterErrorType.PropertyDoesNotExist : 8
	EnumItem FilterErrorType.PropertyInvalidField : 9
	EnumItem FilterErrorType.PropertyInvalidValue : 10
	EnumItem FilterErrorType.PropertyUnsupportedFields : 11
	EnumItem FilterErrorType.PropertyUnsupportedProperty : 12
	EnumItem FilterErrorType.UnexpectedNameIndex : 13
	EnumItem FilterErrorType.UnexpectedToken : 14
	EnumItem FilterErrorType.UnfinishedBinaryOperator : 15
	EnumItem FilterErrorType.UnfinishedQuote : 16
	EnumItem FilterErrorType.UnknownBespokeFilter : 17
	EnumItem FilterErrorType.WildcardInProperty : 18
Enum FilterResult
	EnumItem FilterResult.Accepted : 0
	EnumItem FilterResult.Rejected : 1
Enum FinishRecordingOperation
	EnumItem FinishRecordingOperation.Cancel : 0
	EnumItem FinishRecordingOperation.Commit : 1
	EnumItem FinishRecordingOperation.Append : 2
Enum FluidFidelity
	EnumItem FluidFidelity.Automatic : 0
	EnumItem FluidFidelity.UseCollisionGeometry : 1
	EnumItem FluidFidelity.UsePreciseGeometry : 2
Enum FluidForces
	EnumItem FluidForces.Default : 0
	EnumItem FluidForces.Experimental : 1
Enum Font
	EnumItem Font.Legacy : 0
	EnumItem Font.Arial : 1
	EnumItem Font.ArialBold : 2
	EnumItem Font.SourceSans : 3
	EnumItem Font.SourceSansBold : 4
	EnumItem Font.SourceSansLight : 5
	EnumItem Font.SourceSansItalic : 6
	EnumItem Font.Bodoni : 7
	EnumItem Font.Garamond : 8
	EnumItem Font.Cartoon : 9
	EnumItem Font.Code : 10
	EnumItem Font.Highway : 11
	EnumItem Font.SciFi : 12
	EnumItem Font.Arcade : 13
	EnumItem Font.Fantasy : 14
	EnumItem Font.Antique : 15
	EnumItem Font.SourceSansSemibold : 16
	EnumItem Font.Gotham : 17
	EnumItem Font.GothamMedium : 18
	EnumItem Font.GothamBold : 19
	EnumItem Font.GothamBlack : 20
	EnumItem Font.AmaticSC : 21
	EnumItem Font.Bangers : 22
	EnumItem Font.Creepster : 23
	EnumItem Font.DenkOne : 24
	EnumItem Font.Fondamento : 25
	EnumItem Font.FredokaOne : 26
	EnumItem Font.GrenzeGotisch : 27
	EnumItem Font.IndieFlower : 28
	EnumItem Font.JosefinSans : 29
	EnumItem Font.Jura : 30
	EnumItem Font.Kalam : 31
	EnumItem Font.LuckiestGuy : 32
	EnumItem Font.Merriweather : 33
	EnumItem Font.Michroma : 34
	EnumItem Font.Nunito : 35
	EnumItem Font.Oswald : 36
	EnumItem Font.PatrickHand : 37
	EnumItem Font.PermanentMarker : 38
	EnumItem Font.Roboto : 39
	EnumItem Font.RobotoCondensed : 40
	EnumItem Font.RobotoMono : 41
	EnumItem Font.Sarpanch : 42
	EnumItem Font.SpecialElite : 43
	EnumItem Font.TitilliumWeb : 44
	EnumItem Font.Ubuntu : 45
	EnumItem Font.BuilderSans : 46
	EnumItem Font.BuilderSansMedium : 47
	EnumItem Font.BuilderSansBold : 48
	EnumItem Font.BuilderSansExtraBold : 49
	EnumItem Font.Arimo : 50
	EnumItem Font.ArimoBold : 51
	EnumItem Font.Unknown : 100
Enum FontSize
	EnumItem FontSize.Size8 : 0
	EnumItem FontSize.Size9 : 1
	EnumItem FontSize.Size10 : 2
	EnumItem FontSize.Size11 : 3
	EnumItem FontSize.Size12 : 4
	EnumItem FontSize.Size14 : 5
	EnumItem FontSize.Size18 : 6
	EnumItem FontSize.Size24 : 7
	EnumItem FontSize.Size36 : 8
	EnumItem FontSize.Size48 : 9
	EnumItem FontSize.Size28 : 10
	EnumItem FontSize.Size32 : 11
	EnumItem FontSize.Size42 : 12
	EnumItem FontSize.Size60 : 13
	EnumItem FontSize.Size96 : 14
Enum FontStyle
	EnumItem FontStyle.Normal : 0
	EnumItem FontStyle.Italic : 1
Enum FontWeight
	EnumItem FontWeight.Thin : 100
	EnumItem FontWeight.ExtraLight : 200
	EnumItem FontWeight.Light : 300
	EnumItem FontWeight.Regular : 400
	EnumItem FontWeight.Medium : 500
	EnumItem FontWeight.SemiBold : 600
	EnumItem FontWeight.Bold : 700
	EnumItem FontWeight.ExtraBold : 800
	EnumItem FontWeight.Heavy : 900
Enum ForceLimitMode
	EnumItem ForceLimitMode.Magnitude : 0
	EnumItem ForceLimitMode.PerAxis : 1
Enum FormFactor
	EnumItem FormFactor.Symmetric : 0
	EnumItem FormFactor.Brick : 1
	EnumItem FormFactor.Plate : 2
	EnumItem FormFactor.Custom : 3
Enum FrameStyle
	EnumItem FrameStyle.Custom : 0
	EnumItem FrameStyle.ChatBlue : 1
	EnumItem FrameStyle.RobloxSquare : 2
	EnumItem FrameStyle.RobloxRound : 3
	EnumItem FrameStyle.ChatGreen : 4
	EnumItem FrameStyle.ChatRed : 5
	EnumItem FrameStyle.DropShadow : 6
Enum FramerateManagerMode
	EnumItem FramerateManagerMode.Automatic : 0
	EnumItem FramerateManagerMode.On : 1
	EnumItem FramerateManagerMode.Off : 2
Enum FriendRequestEvent
	EnumItem FriendRequestEvent.Issue : 0
	EnumItem FriendRequestEvent.Revoke : 1
	EnumItem FriendRequestEvent.Accept : 2
	EnumItem FriendRequestEvent.Deny : 3
Enum FriendStatus
	EnumItem FriendStatus.Unknown : 0
	EnumItem FriendStatus.NotFriend : 1
	EnumItem FriendStatus.Friend : 2
	EnumItem FriendStatus.FriendRequestSent : 3
	EnumItem FriendStatus.FriendRequestReceived : 4
Enum FunctionalTestResult
	EnumItem FunctionalTestResult.Passed : 0
	EnumItem FunctionalTestResult.Warning : 1
	EnumItem FunctionalTestResult.Error : 2
Enum GameAvatarType
	EnumItem GameAvatarType.R6 : 0
	EnumItem GameAvatarType.R15 : 1
	EnumItem GameAvatarType.PlayerChoice : 2
Enum GamepadType
	EnumItem GamepadType.Unknown : 0
	EnumItem GamepadType.PS4 : 1
	EnumItem GamepadType.PS5 : 2
	EnumItem GamepadType.XboxOne : 3
Enum GearGenreSetting [Deprecated]
	EnumItem GearGenreSetting.AllGenres : 0 [Deprecated] [Deprecated]
	EnumItem GearGenreSetting.MatchingGenreOnly : 1 [Deprecated] [Deprecated]
Enum GearType [Deprecated]
	EnumItem GearType.MeleeWeapons : 0 [Deprecated] [Deprecated]
	EnumItem GearType.RangedWeapons : 1 [Deprecated] [Deprecated]
	EnumItem GearType.Explosives : 2 [Deprecated] [Deprecated]
	EnumItem GearType.PowerUps : 3 [Deprecated] [Deprecated]
	EnumItem GearType.NavigationEnhancers : 4 [Deprecated] [Deprecated]
	EnumItem GearType.MusicalInstruments : 5 [Deprecated] [Deprecated]
	EnumItem GearType.SocialItems : 6 [Deprecated] [Deprecated]
	EnumItem GearType.BuildingTools : 7 [Deprecated] [Deprecated]
	EnumItem GearType.Transport : 8 [Deprecated] [Deprecated]
Enum Genre [Deprecated]
	EnumItem Genre.All : 0 [Deprecated]
	EnumItem Genre.TownAndCity : 1 [Deprecated]
	EnumItem Genre.Fantasy : 2 [Deprecated]
	EnumItem Genre.SciFi : 3 [Deprecated]
	EnumItem Genre.Ninja : 4 [Deprecated]
	EnumItem Genre.Scary : 5 [Deprecated]
	EnumItem Genre.Pirate : 6 [Deprecated]
	EnumItem Genre.Adventure : 7 [Deprecated]
	EnumItem Genre.Sports : 8 [Deprecated]
	EnumItem Genre.Funny : 9 [Deprecated]
	EnumItem Genre.WildWest : 10 [Deprecated]
	EnumItem Genre.War : 11 [Deprecated]
	EnumItem Genre.SkatePark : 12 [Deprecated]
	EnumItem Genre.Tutorial : 13 [Deprecated]
Enum GraphicsMode
	EnumItem GraphicsMode.Automatic : 1
	EnumItem GraphicsMode.Direct3D11 : 2
	EnumItem GraphicsMode.OpenGL : 4
	EnumItem GraphicsMode.Metal : 5
	EnumItem GraphicsMode.Vulkan : 6
	EnumItem GraphicsMode.NoGraphics : 9
Enum GraphicsOptimizationMode
	EnumItem GraphicsOptimizationMode.Performance : 0
	EnumItem GraphicsOptimizationMode.Balanced : 1
	EnumItem GraphicsOptimizationMode.Quality : 2
Enum GuiState
	EnumItem GuiState.Idle : 0
	EnumItem GuiState.Hover : 1
	EnumItem GuiState.Press : 2
	EnumItem GuiState.NonInteractable : 3
Enum GuiType
	EnumItem GuiType.Core : 0
	EnumItem GuiType.Custom : 1
	EnumItem GuiType.PlayerNameplates : 2
	EnumItem GuiType.CustomBillboards : 3
	EnumItem GuiType.CoreBillboards : 4
Enum HandlesStyle
	EnumItem HandlesStyle.Resize : 0
	EnumItem HandlesStyle.Movement : 1
Enum HapticEffectType
	EnumItem HapticEffectType.UIHover : 0
	EnumItem HapticEffectType.UIClick : 1
	EnumItem HapticEffectType.UINotification : 2
	EnumItem HapticEffectType.GameplayExplosion : 3
	EnumItem HapticEffectType.GameplayCollision : 4
Enum HighlightDepthMode
	EnumItem HighlightDepthMode.AlwaysOnTop : 0
	EnumItem HighlightDepthMode.Occluded : 1
Enum HorizontalAlignment
	EnumItem HorizontalAlignment.Center : 0
	EnumItem HorizontalAlignment.Left : 1
	EnumItem HorizontalAlignment.Right : 2
Enum HoverAnimateSpeed
	EnumItem HoverAnimateSpeed.VerySlow : 0
	EnumItem HoverAnimateSpeed.Slow : 1
	EnumItem HoverAnimateSpeed.Medium : 2
	EnumItem HoverAnimateSpeed.Fast : 3
	EnumItem HoverAnimateSpeed.VeryFast : 4
Enum HttpCachePolicy
	EnumItem HttpCachePolicy.None : 0
	EnumItem HttpCachePolicy.Full : 1
	EnumItem HttpCachePolicy.DataOnly : 2
	EnumItem HttpCachePolicy.Default : 3
	EnumItem HttpCachePolicy.InternalRedirectRefresh : 4
Enum HttpCompression
	EnumItem HttpCompression.None : 0
	EnumItem HttpCompression.Gzip : 1
Enum HttpContentType
	EnumItem HttpContentType.ApplicationJson : 0
	EnumItem HttpContentType.ApplicationXml : 1
	EnumItem HttpContentType.ApplicationUrlEncoded : 2
	EnumItem HttpContentType.TextPlain : 3
	EnumItem HttpContentType.TextXml : 4
Enum HttpError
	EnumItem HttpError.OK : 0
	EnumItem HttpError.InvalidUrl : 1
	EnumItem HttpError.DnsResolve : 2
	EnumItem HttpError.ConnectFail : 3
	EnumItem HttpError.OutOfMemory : 4
	EnumItem HttpError.TimedOut : 5
	EnumItem HttpError.TooManyRedirects : 6
	EnumItem HttpError.InvalidRedirect : 7
	EnumItem HttpError.NetFail : 8
	EnumItem HttpError.Aborted : 9
	EnumItem HttpError.SslConnectFail : 10
	EnumItem HttpError.SslVerificationFail : 11
	EnumItem HttpError.Unknown : 12
Enum HttpRequestType
	EnumItem HttpRequestType.Default : 0
	EnumItem HttpRequestType.MarketplaceService : 2
	EnumItem HttpRequestType.Players : 7
	EnumItem HttpRequestType.Chat : 15
	EnumItem HttpRequestType.Avatar : 16
	EnumItem HttpRequestType.Analytics : 23
	EnumItem HttpRequestType.Localization : 25
Enum HumanoidCollisionType
	EnumItem HumanoidCollisionType.OuterBox : 0
	EnumItem HumanoidCollisionType.InnerBox : 1
Enum HumanoidDisplayDistanceType
	EnumItem HumanoidDisplayDistanceType.Viewer : 0
	EnumItem HumanoidDisplayDistanceType.Subject : 1
	EnumItem HumanoidDisplayDistanceType.None : 2
Enum HumanoidHealthDisplayType
	EnumItem HumanoidHealthDisplayType.DisplayWhenDamaged : 0
	EnumItem HumanoidHealthDisplayType.AlwaysOn : 1
	EnumItem HumanoidHealthDisplayType.AlwaysOff : 2
Enum HumanoidRigType
	EnumItem HumanoidRigType.R6 : 0
	EnumItem HumanoidRigType.R15 : 1
Enum HumanoidStateType
	EnumItem HumanoidStateType.FallingDown : 0
	EnumItem HumanoidStateType.Ragdoll : 1
	EnumItem HumanoidStateType.GettingUp : 2
	EnumItem HumanoidStateType.Jumping : 3
	EnumItem HumanoidStateType.Swimming : 4
	EnumItem HumanoidStateType.Freefall : 5
	EnumItem HumanoidStateType.Flying : 6
	EnumItem HumanoidStateType.Landed : 7
	EnumItem HumanoidStateType.Running : 8
	EnumItem HumanoidStateType.RunningNoPhysics : 10
	EnumItem HumanoidStateType.StrafingNoPhysics : 11
	EnumItem HumanoidStateType.Climbing : 12
	EnumItem HumanoidStateType.Seated : 13
	EnumItem HumanoidStateType.PlatformStanding : 14
	EnumItem HumanoidStateType.Dead : 15
	EnumItem HumanoidStateType.Physics : 16
	EnumItem HumanoidStateType.None : 18
Enum IKCollisionsMode
	EnumItem IKCollisionsMode.NoCollisions : 0
	EnumItem IKCollisionsMode.OtherMechanismsAnchored : 1
	EnumItem IKCollisionsMode.IncludeContactedMechanisms : 2
Enum IKControlConstraintSupport
	EnumItem IKControlConstraintSupport.Default : 0
	EnumItem IKControlConstraintSupport.Disabled : 1
	EnumItem IKControlConstraintSupport.Enabled : 2
Enum IKControlType
	EnumItem IKControlType.Transform : 0
	EnumItem IKControlType.Position : 1
	EnumItem IKControlType.Rotation : 2
	EnumItem IKControlType.LookAt : 3
Enum IXPLoadingStatus
	EnumItem IXPLoadingStatus.None : 0
	EnumItem IXPLoadingStatus.Pending : 1
	EnumItem IXPLoadingStatus.Initialized : 2
	EnumItem IXPLoadingStatus.ErrorInvalidUser : 3
	EnumItem IXPLoadingStatus.ErrorConnection : 4
	EnumItem IXPLoadingStatus.ErrorJsonParse : 5
	EnumItem IXPLoadingStatus.ErrorTimedOut : 6
Enum ImageAlphaType
	EnumItem ImageAlphaType.Default : 1
	EnumItem ImageAlphaType.LockCanvasAlpha : 2
	EnumItem ImageAlphaType.LockCanvasColor : 3
Enum ImageCombineType
	EnumItem ImageCombineType.BlendSourceOver : 1
	EnumItem ImageCombineType.Overwrite : 2
	EnumItem ImageCombineType.Add : 3
	EnumItem ImageCombineType.Multiply : 4
	EnumItem ImageCombineType.AlphaBlend : 5
Enum InOut
	EnumItem InOut.Edge : 0
	EnumItem InOut.Inset : 1
	EnumItem InOut.Center : 2
Enum InfoType
	EnumItem InfoType.Asset : 0
	EnumItem InfoType.Product : 1
	EnumItem InfoType.GamePass : 2
	EnumItem InfoType.Subscription : 3
	EnumItem InfoType.Bundle : 4
Enum InitialDockState
	EnumItem InitialDockState.Top : 0
	EnumItem InitialDockState.Bottom : 1
	EnumItem InitialDockState.Left : 2
	EnumItem InitialDockState.Right : 3
	EnumItem InitialDockState.Float : 4
Enum InputType
	EnumItem InputType.NoInput : 0
	EnumItem InputType.Constant : 12
	EnumItem InputType.Sin : 13
Enum Intent
	EnumItem Intent.Realistic : 0
	EnumItem Intent.Flat : 1
Enum InterpolationThrottlingMode
	EnumItem InterpolationThrottlingMode.Default : 0
	EnumItem InterpolationThrottlingMode.Disabled : 1
	EnumItem InterpolationThrottlingMode.Enabled : 2
Enum InviteState
	EnumItem InviteState.Placed : 0
	EnumItem InviteState.Accepted : 1
	EnumItem InviteState.Declined : 2
	EnumItem InviteState.Missed : 3
Enum ItemLineAlignment
	EnumItem ItemLineAlignment.Automatic : 0
	EnumItem ItemLineAlignment.Start : 1
	EnumItem ItemLineAlignment.Center : 2
	EnumItem ItemLineAlignment.End : 3
	EnumItem ItemLineAlignment.Stretch : 4
Enum JoinSource
	EnumItem JoinSource.CreatedItemAttribution : 1
Enum JointCreationMode
	EnumItem JointCreationMode.All : 0
	EnumItem JointCreationMode.Surface : 1
	EnumItem JointCreationMode.None : 2
Enum KeyCode
	EnumItem KeyCode.Unknown : 0
	EnumItem KeyCode.Backspace : 8
	EnumItem KeyCode.Tab : 9
	EnumItem KeyCode.Clear : 12
	EnumItem KeyCode.Return : 13
	EnumItem KeyCode.Pause : 19
	EnumItem KeyCode.Escape : 27
	EnumItem KeyCode.Space : 32
	EnumItem KeyCode.QuotedDouble : 34
	EnumItem KeyCode.Hash : 35
	EnumItem KeyCode.Dollar : 36
	EnumItem KeyCode.Percent : 37
	EnumItem KeyCode.Ampersand : 38
	EnumItem KeyCode.Quote : 39
	EnumItem KeyCode.LeftParenthesis : 40
	EnumItem KeyCode.RightParenthesis : 41
	EnumItem KeyCode.Asterisk : 42
	EnumItem KeyCode.Plus : 43
	EnumItem KeyCode.Comma : 44
	EnumItem KeyCode.Minus : 45
	EnumItem KeyCode.Period : 46
	EnumItem KeyCode.Slash : 47
	EnumItem KeyCode.Zero : 48
	EnumItem KeyCode.One : 49
	EnumItem KeyCode.Two : 50
	EnumItem KeyCode.Three : 51
	EnumItem KeyCode.Four : 52
	EnumItem KeyCode.Five : 53
	EnumItem KeyCode.Six : 54
	EnumItem KeyCode.Seven : 55
	EnumItem KeyCode.Eight : 56
	EnumItem KeyCode.Nine : 57
	EnumItem KeyCode.Colon : 58
	EnumItem KeyCode.Semicolon : 59
	EnumItem KeyCode.LessThan : 60
	EnumItem KeyCode.Equals : 61
	EnumItem KeyCode.GreaterThan : 62
	EnumItem KeyCode.Question : 63
	EnumItem KeyCode.At : 64
	EnumItem KeyCode.LeftBracket : 91
	EnumItem KeyCode.BackSlash : 92
	EnumItem KeyCode.RightBracket : 93
	EnumItem KeyCode.Caret : 94
	EnumItem KeyCode.Underscore : 95
	EnumItem KeyCode.Backquote : 96
	EnumItem KeyCode.A : 97
	EnumItem KeyCode.B : 98
	EnumItem KeyCode.C : 99
	EnumItem KeyCode.D : 100
	EnumItem KeyCode.E : 101
	EnumItem KeyCode.F : 102
	EnumItem KeyCode.G : 103
	EnumItem KeyCode.H : 104
	EnumItem KeyCode.I : 105
	EnumItem KeyCode.J : 106
	EnumItem KeyCode.K : 107
	EnumItem KeyCode.L : 108
	EnumItem KeyCode.M : 109
	EnumItem KeyCode.N : 110
	EnumItem KeyCode.O : 111
	EnumItem KeyCode.P : 112
	EnumItem KeyCode.Q : 113
	EnumItem KeyCode.R : 114
	EnumItem KeyCode.S : 115
	EnumItem KeyCode.T : 116
	EnumItem KeyCode.U : 117
	EnumItem KeyCode.V : 118
	EnumItem KeyCode.W : 119
	EnumItem KeyCode.X : 120
	EnumItem KeyCode.Y : 121
	EnumItem KeyCode.Z : 122
	EnumItem KeyCode.LeftCurly : 123
	EnumItem KeyCode.Pipe : 124
	EnumItem KeyCode.RightCurly : 125
	EnumItem KeyCode.Tilde : 126
	EnumItem KeyCode.Delete : 127
	EnumItem KeyCode.World0 : 160
	EnumItem KeyCode.World1 : 161
	EnumItem KeyCode.World2 : 162
	EnumItem KeyCode.World3 : 163
	EnumItem KeyCode.World4 : 164
	EnumItem KeyCode.World5 : 165
	EnumItem KeyCode.World6 : 166
	EnumItem KeyCode.World7 : 167
	EnumItem KeyCode.World8 : 168
	EnumItem KeyCode.World9 : 169
	EnumItem KeyCode.World10 : 170
	EnumItem KeyCode.World11 : 171
	EnumItem KeyCode.World12 : 172
	EnumItem KeyCode.World13 : 173
	EnumItem KeyCode.World14 : 174
	EnumItem KeyCode.World15 : 175
	EnumItem KeyCode.World16 : 176
	EnumItem KeyCode.World17 : 177
	EnumItem KeyCode.World18 : 178
	EnumItem KeyCode.World19 : 179
	EnumItem KeyCode.World20 : 180
	EnumItem KeyCode.World21 : 181
	EnumItem KeyCode.World22 : 182
	EnumItem KeyCode.World23 : 183
	EnumItem KeyCode.World24 : 184
	EnumItem KeyCode.World25 : 185
	EnumItem KeyCode.World26 : 186
	EnumItem KeyCode.World27 : 187
	EnumItem KeyCode.World28 : 188
	EnumItem KeyCode.World29 : 189
	EnumItem KeyCode.World30 : 190
	EnumItem KeyCode.World31 : 191
	EnumItem KeyCode.World32 : 192
	EnumItem KeyCode.World33 : 193
	EnumItem KeyCode.World34 : 194
	EnumItem KeyCode.World35 : 195
	EnumItem KeyCode.World36 : 196
	EnumItem KeyCode.World37 : 197
	EnumItem KeyCode.World38 : 198
	EnumItem KeyCode.World39 : 199
	EnumItem KeyCode.World40 : 200
	EnumItem KeyCode.World41 : 201
	EnumItem KeyCode.World42 : 202
	EnumItem KeyCode.World43 : 203
	EnumItem KeyCode.World44 : 204
	EnumItem KeyCode.World45 : 205
	EnumItem KeyCode.World46 : 206
	EnumItem KeyCode.World47 : 207
	EnumItem KeyCode.World48 : 208
	EnumItem KeyCode.World49 : 209
	EnumItem KeyCode.World50 : 210
	EnumItem KeyCode.World51 : 211
	EnumItem KeyCode.World52 : 212
	EnumItem KeyCode.World53 : 213
	EnumItem KeyCode.World54 : 214
	EnumItem KeyCode.World55 : 215
	EnumItem KeyCode.World56 : 216
	EnumItem KeyCode.World57 : 217
	EnumItem KeyCode.World58 : 218
	EnumItem KeyCode.World59 : 219
	EnumItem KeyCode.World60 : 220
	EnumItem KeyCode.World61 : 221
	EnumItem KeyCode.World62 : 222
	EnumItem KeyCode.World63 : 223
	EnumItem KeyCode.World64 : 224
	EnumItem KeyCode.World65 : 225
	EnumItem KeyCode.World66 : 226
	EnumItem KeyCode.World67 : 227
	EnumItem KeyCode.World68 : 228
	EnumItem KeyCode.World69 : 229
	EnumItem KeyCode.World70 : 230
	EnumItem KeyCode.World71 : 231
	EnumItem KeyCode.World72 : 232
	EnumItem KeyCode.World73 : 233
	EnumItem KeyCode.World74 : 234
	EnumItem KeyCode.World75 : 235
	EnumItem KeyCode.World76 : 236
	EnumItem KeyCode.World77 : 237
	EnumItem KeyCode.World78 : 238
	EnumItem KeyCode.World79 : 239
	EnumItem KeyCode.World80 : 240
	EnumItem KeyCode.World81 : 241
	EnumItem KeyCode.World82 : 242
	EnumItem KeyCode.World83 : 243
	EnumItem KeyCode.World84 : 244
	EnumItem KeyCode.World85 : 245
	EnumItem KeyCode.World86 : 246
	EnumItem KeyCode.World87 : 247
	EnumItem KeyCode.World88 : 248
	EnumItem KeyCode.World89 : 249
	EnumItem KeyCode.World90 : 250
	EnumItem KeyCode.World91 : 251
	EnumItem KeyCode.World92 : 252
	EnumItem KeyCode.World93 : 253
	EnumItem KeyCode.World94 : 254
	EnumItem KeyCode.World95 : 255
	EnumItem KeyCode.KeypadZero : 256
	EnumItem KeyCode.KeypadOne : 257
	EnumItem KeyCode.KeypadTwo : 258
	EnumItem KeyCode.KeypadThree : 259
	EnumItem KeyCode.KeypadFour : 260
	EnumItem KeyCode.KeypadFive : 261
	EnumItem KeyCode.KeypadSix : 262
	EnumItem KeyCode.KeypadSeven : 263
	EnumItem KeyCode.KeypadEight : 264
	EnumItem KeyCode.KeypadNine : 265
	EnumItem KeyCode.KeypadPeriod : 266
	EnumItem KeyCode.KeypadDivide : 267
	EnumItem KeyCode.KeypadMultiply : 268
	EnumItem KeyCode.KeypadMinus : 269
	EnumItem KeyCode.KeypadPlus : 270
	EnumItem KeyCode.KeypadEnter : 271
	EnumItem KeyCode.KeypadEquals : 272
	EnumItem KeyCode.Up : 273
	EnumItem KeyCode.Down : 274
	EnumItem KeyCode.Right : 275
	EnumItem KeyCode.Left : 276
	EnumItem KeyCode.Insert : 277
	EnumItem KeyCode.Home : 278
	EnumItem KeyCode.End : 279
	EnumItem KeyCode.PageUp : 280
	EnumItem KeyCode.PageDown : 281
	EnumItem KeyCode.F1 : 282
	EnumItem KeyCode.F2 : 283
	EnumItem KeyCode.F3 : 284
	EnumItem KeyCode.F4 : 285
	EnumItem KeyCode.F5 : 286
	EnumItem KeyCode.F6 : 287
	EnumItem KeyCode.F7 : 288
	EnumItem KeyCode.F8 : 289
	EnumItem KeyCode.F9 : 290
	EnumItem KeyCode.F10 : 291
	EnumItem KeyCode.F11 : 292
	EnumItem KeyCode.F12 : 293
	EnumItem KeyCode.F13 : 294
	EnumItem KeyCode.F14 : 295
	EnumItem KeyCode.F15 : 296
	EnumItem KeyCode.NumLock : 300
	EnumItem KeyCode.CapsLock : 301
	EnumItem KeyCode.ScrollLock : 302
	EnumItem KeyCode.RightShift : 303
	EnumItem KeyCode.LeftShift : 304
	EnumItem KeyCode.RightControl : 305
	EnumItem KeyCode.LeftControl : 306
	EnumItem KeyCode.RightAlt : 307
	EnumItem KeyCode.LeftAlt : 308
	EnumItem KeyCode.RightMeta : 309
	EnumItem KeyCode.LeftMeta : 310
	EnumItem KeyCode.LeftSuper : 311
	EnumItem KeyCode.RightSuper : 312
	EnumItem KeyCode.Mode : 313
	EnumItem KeyCode.Compose : 314
	EnumItem KeyCode.Help : 315
	EnumItem KeyCode.Print : 316
	EnumItem KeyCode.SysReq : 317
	EnumItem KeyCode.Break : 318
	EnumItem KeyCode.Menu : 319
	EnumItem KeyCode.Power : 320
	EnumItem KeyCode.Euro : 321
	EnumItem KeyCode.Undo : 322
	EnumItem KeyCode.ButtonX : 1000
	EnumItem KeyCode.ButtonY : 1001
	EnumItem KeyCode.ButtonA : 1002
	EnumItem KeyCode.ButtonB : 1003
	EnumItem KeyCode.ButtonR1 : 1004
	EnumItem KeyCode.ButtonL1 : 1005
	EnumItem KeyCode.ButtonR2 : 1006
	EnumItem KeyCode.ButtonL2 : 1007
	EnumItem KeyCode.ButtonR3 : 1008
	EnumItem KeyCode.ButtonL3 : 1009
	EnumItem KeyCode.ButtonStart : 1010
	EnumItem KeyCode.ButtonSelect : 1011
	EnumItem KeyCode.DPadLeft : 1012
	EnumItem KeyCode.DPadRight : 1013
	EnumItem KeyCode.DPadUp : 1014
	EnumItem KeyCode.DPadDown : 1015
	EnumItem KeyCode.Thumbstick1 : 1016
	EnumItem KeyCode.Thumbstick2 : 1017
	EnumItem KeyCode.MouseLeftButton : 1018
	EnumItem KeyCode.MouseRightButton : 1019
	EnumItem KeyCode.MouseMiddleButton : 1020
	EnumItem KeyCode.MouseBackButton : 1021
	EnumItem KeyCode.MouseNoButton : 1022
	EnumItem KeyCode.MouseX : 1023
	EnumItem KeyCode.MouseY : 1024
Enum KeyInterpolationMode
	EnumItem KeyInterpolationMode.Constant : 0
	EnumItem KeyInterpolationMode.Linear : 1
	EnumItem KeyInterpolationMode.Cubic : 2
Enum KeywordFilterType
	EnumItem KeywordFilterType.Include : 0
	EnumItem KeywordFilterType.Exclude : 1
Enum Language
	EnumItem Language.Default : 0
Enum LeftRight
	EnumItem LeftRight.Left : 0
	EnumItem LeftRight.Center : 1
	EnumItem LeftRight.Right : 2
Enum LexemeType
	EnumItem LexemeType.Eof : 0
	EnumItem LexemeType.Name : 1
	EnumItem LexemeType.QuotedString : 2
	EnumItem LexemeType.Number : 3
	EnumItem LexemeType.And : 4
	EnumItem LexemeType.Or : 5
	EnumItem LexemeType.Equal : 6
	EnumItem LexemeType.TildeEqual : 7
	EnumItem LexemeType.GreaterThan : 8
	EnumItem LexemeType.GreaterThanEqual : 9
	EnumItem LexemeType.LessThan : 10
	EnumItem LexemeType.LessThanEqual : 11
	EnumItem LexemeType.Colon : 12
	EnumItem LexemeType.Dot : 13
	EnumItem LexemeType.LeftParenthesis : 14
	EnumItem LexemeType.RightParenthesis : 15
	EnumItem LexemeType.Star : 16
	EnumItem LexemeType.DoubleStar : 17
	EnumItem LexemeType.ReservedSpecial : 18
Enum Limb
	EnumItem Limb.Head : 0
	EnumItem Limb.Torso : 1
	EnumItem Limb.LeftArm : 2
	EnumItem Limb.RightArm : 3
	EnumItem Limb.LeftLeg : 4
	EnumItem Limb.RightLeg : 5
	EnumItem Limb.Unknown : 6
Enum LineJoinMode
	EnumItem LineJoinMode.Round : 0
	EnumItem LineJoinMode.Bevel : 1
	EnumItem LineJoinMode.Miter : 2
Enum ListDisplayMode
	EnumItem ListDisplayMode.Horizontal : 0
	EnumItem ListDisplayMode.Vertical : 1
Enum ListenerLocation
	EnumItem ListenerLocation.Default : 0
	EnumItem ListenerLocation.None : 1
	EnumItem ListenerLocation.Character : 2
	EnumItem ListenerLocation.Camera : 3
Enum ListenerType
	EnumItem ListenerType.Camera : 0
	EnumItem ListenerType.CFrame : 1
	EnumItem ListenerType.ObjectPosition : 2
	EnumItem ListenerType.ObjectCFrame : 3
Enum LiveEditingAtomicUpdateResponse
	EnumItem LiveEditingAtomicUpdateResponse.Success : 0
	EnumItem LiveEditingAtomicUpdateResponse.FailureGuidNotFound : 1
	EnumItem LiveEditingAtomicUpdateResponse.FailureHashMismatch : 2
	EnumItem LiveEditingAtomicUpdateResponse.FailureOperationIllegal : 3
Enum LiveEditingBroadcastMessageType
	EnumItem LiveEditingBroadcastMessageType.Normal : 0
	EnumItem LiveEditingBroadcastMessageType.Warning : 1
	EnumItem LiveEditingBroadcastMessageType.Error : 2
Enum LoadCharacterLayeredClothing
	EnumItem LoadCharacterLayeredClothing.Default : 0
	EnumItem LoadCharacterLayeredClothing.Disabled : 1
	EnumItem LoadCharacterLayeredClothing.Enabled : 2
Enum LoadDynamicHeads
	EnumItem LoadDynamicHeads.Default : 0
	EnumItem LoadDynamicHeads.Disabled : 1
	EnumItem LoadDynamicHeads.Enabled : 2
Enum LocationType
	EnumItem LocationType.Character : 0
	EnumItem LocationType.Camera : 1
	EnumItem LocationType.ObjectPosition : 2
Enum MarketplaceBulkPurchasePromptStatus
	EnumItem MarketplaceBulkPurchasePromptStatus.Completed : 1
	EnumItem MarketplaceBulkPurchasePromptStatus.Aborted : 2
	EnumItem MarketplaceBulkPurchasePromptStatus.Error : 3
Enum MarketplaceItemPurchaseStatus
	EnumItem MarketplaceItemPurchaseStatus.Success : 1
	EnumItem MarketplaceItemPurchaseStatus.SystemError : 2
	EnumItem MarketplaceItemPurchaseStatus.AlreadyOwned : 3
	EnumItem MarketplaceItemPurchaseStatus.InsufficientRobux : 4
	EnumItem MarketplaceItemPurchaseStatus.QuantityLimitExceeded : 5
	EnumItem MarketplaceItemPurchaseStatus.QuotaExceeded : 6
	EnumItem MarketplaceItemPurchaseStatus.NotForSale : 7
	EnumItem MarketplaceItemPurchaseStatus.NotAvailableForPurchaser : 8
	EnumItem MarketplaceItemPurchaseStatus.PriceMismatch : 9
	EnumItem MarketplaceItemPurchaseStatus.SoldOut : 10
	EnumItem MarketplaceItemPurchaseStatus.PurchaserIsSeller : 11
	EnumItem MarketplaceItemPurchaseStatus.InsufficientMembership : 12
	EnumItem MarketplaceItemPurchaseStatus.PlaceInvalid : 13
Enum MarketplaceProductType
	EnumItem MarketplaceProductType.AvatarAsset : 1
	EnumItem MarketplaceProductType.AvatarBundle : 2
Enum MarkupKind
	EnumItem MarkupKind.PlainText : 0
	EnumItem MarkupKind.Markdown : 1
Enum Material
	EnumItem Material.Plastic : 256
	EnumItem Material.SmoothPlastic : 272
	EnumItem Material.Neon : 288
	EnumItem Material.Wood : 512
	EnumItem Material.WoodPlanks : 528
	EnumItem Material.Marble : 784
	EnumItem Material.Basalt : 788
	EnumItem Material.Slate : 800
	EnumItem Material.CrackedLava : 804
	EnumItem Material.Concrete : 816
	EnumItem Material.Limestone : 820
	EnumItem Material.Granite : 832
	EnumItem Material.Pavement : 836
	EnumItem Material.Brick : 848
	EnumItem Material.Pebble : 864
	EnumItem Material.Cobblestone : 880
	EnumItem Material.Rock : 896
	EnumItem Material.Sandstone : 912
	EnumItem Material.CorrodedMetal : 1040
	EnumItem Material.DiamondPlate : 1056
	EnumItem Material.Foil : 1072
	EnumItem Material.Metal : 1088
	EnumItem Material.Grass : 1280
	EnumItem Material.LeafyGrass : 1284
	EnumItem Material.Sand : 1296
	EnumItem Material.Fabric : 1312
	EnumItem Material.Snow : 1328
	EnumItem Material.Mud : 1344
	EnumItem Material.Ground : 1360
	EnumItem Material.Asphalt : 1376
	EnumItem Material.Salt : 1392
	EnumItem Material.Ice : 1536
	EnumItem Material.Glacier : 1552
	EnumItem Material.Glass : 1568
	EnumItem Material.ForceField : 1584
	EnumItem Material.Air : 1792 [NotBrowsable]
	EnumItem Material.Water : 2048 [NotBrowsable]
	EnumItem Material.Cardboard : 2304
	EnumItem Material.Carpet : 2305
	EnumItem Material.CeramicTiles : 2306
	EnumItem Material.ClayRoofTiles : 2307
	EnumItem Material.RoofShingles : 2308
	EnumItem Material.Leather : 2309
	EnumItem Material.Plaster : 2310
	EnumItem Material.Rubber : 2311
Enum MaterialPattern
	EnumItem MaterialPattern.Regular : 0
	EnumItem MaterialPattern.Organic : 1
Enum MembershipType
	EnumItem MembershipType.None : 0
	EnumItem MembershipType.BuildersClub : 1
	EnumItem MembershipType.TurboBuildersClub : 2
	EnumItem MembershipType.OutrageousBuildersClub : 3
	EnumItem MembershipType.Premium : 4
Enum MeshPartDetailLevel
	EnumItem MeshPartDetailLevel.DistanceBased : 0
	EnumItem MeshPartDetailLevel.Level00 : 1
	EnumItem MeshPartDetailLevel.Level01 : 2
	EnumItem MeshPartDetailLevel.Level02 : 3
	EnumItem MeshPartDetailLevel.Level03 : 4
	EnumItem MeshPartDetailLevel.Level04 : 5
Enum MeshPartHeadsAndAccessories
	EnumItem MeshPartHeadsAndAccessories.Default : 0
	EnumItem MeshPartHeadsAndAccessories.Disabled : 1
	EnumItem MeshPartHeadsAndAccessories.Enabled : 2
Enum MeshScaleUnit
	EnumItem MeshScaleUnit.Stud : 0
	EnumItem MeshScaleUnit.Meter : 1
	EnumItem MeshScaleUnit.CM : 2
	EnumItem MeshScaleUnit.MM : 3
	EnumItem MeshScaleUnit.Foot : 4
	EnumItem MeshScaleUnit.Inch : 5
Enum MeshType
	EnumItem MeshType.Head : 0
	EnumItem MeshType.Torso : 1
	EnumItem MeshType.Wedge : 2
	EnumItem MeshType.Sphere : 3
	EnumItem MeshType.Cylinder : 4
	EnumItem MeshType.FileMesh : 5
	EnumItem MeshType.Brick : 6
	EnumItem MeshType.Prism : 7 [Deprecated]
	EnumItem MeshType.Pyramid : 8 [Deprecated]
	EnumItem MeshType.ParallelRamp : 9 [Deprecated]
	EnumItem MeshType.RightAngleRamp : 10 [Deprecated]
	EnumItem MeshType.CornerWedge : 11 [Deprecated]
Enum MessageType
	EnumItem MessageType.MessageOutput : 0
	EnumItem MessageType.MessageInfo : 1
	EnumItem MessageType.MessageWarning : 2
	EnumItem MessageType.MessageError : 3
Enum ModelLevelOfDetail
	EnumItem ModelLevelOfDetail.Automatic : 0
	EnumItem ModelLevelOfDetail.StreamingMesh : 1
	EnumItem ModelLevelOfDetail.Disabled : 2
Enum ModelStreamingBehavior
	EnumItem ModelStreamingBehavior.Default : 0
	EnumItem ModelStreamingBehavior.Legacy : 1
	EnumItem ModelStreamingBehavior.Improved : 2
Enum ModelStreamingMode
	EnumItem ModelStreamingMode.Default : 0
	EnumItem ModelStreamingMode.Atomic : 1
	EnumItem ModelStreamingMode.Persistent : 2
	EnumItem ModelStreamingMode.PersistentPerPlayer : 3
	EnumItem ModelStreamingMode.Nonatomic : 4
Enum ModerationStatus
	EnumItem ModerationStatus.ReviewedApproved : 1
	EnumItem ModerationStatus.ReviewedRejected : 2
	EnumItem ModerationStatus.NotReviewed : 3
	EnumItem ModerationStatus.NotApplicable : 4
	EnumItem ModerationStatus.Invalid : 5
Enum ModifierKey
	EnumItem ModifierKey.Shift : 0
	EnumItem ModifierKey.Ctrl : 1
	EnumItem ModifierKey.Alt : 2
	EnumItem ModifierKey.Meta : 3
Enum MouseBehavior
	EnumItem MouseBehavior.Default : 0
	EnumItem MouseBehavior.LockCenter : 1
	EnumItem MouseBehavior.LockCurrentPosition : 2
Enum MoveState
	EnumItem MoveState.Stopped : 0
	EnumItem MoveState.Coasting : 1
	EnumItem MoveState.Pushing : 2
	EnumItem MoveState.Stopping : 3
	EnumItem MoveState.AirFree : 4
Enum MoverConstraintRootBehaviorMode
	EnumItem MoverConstraintRootBehaviorMode.Default : 0
	EnumItem MoverConstraintRootBehaviorMode.Disabled : 1
	EnumItem MoverConstraintRootBehaviorMode.Enabled : 2
Enum MuteState
	EnumItem MuteState.Unmuted : 0
	EnumItem MuteState.Muted : 1
Enum NameOcclusion
	EnumItem NameOcclusion.NoOcclusion : 0
	EnumItem NameOcclusion.EnemyOcclusion : 1
	EnumItem NameOcclusion.OccludeAll : 2
Enum NetworkOwnership
	EnumItem NetworkOwnership.Automatic : 0
	EnumItem NetworkOwnership.Manual : 1
	EnumItem NetworkOwnership.OnContact : 2
Enum NetworkStatus
	EnumItem NetworkStatus.Unknown : 0
	EnumItem NetworkStatus.Connected : 1
	EnumItem NetworkStatus.Disconnected : 2
Enum NoiseType
	EnumItem NoiseType.SimplexGabor : 0
Enum NormalId
	EnumItem NormalId.Right : 0
	EnumItem NormalId.Top : 1
	EnumItem NormalId.Back : 2
	EnumItem NormalId.Left : 3
	EnumItem NormalId.Bottom : 4
	EnumItem NormalId.Front : 5
Enum NotificationButtonType
	EnumItem NotificationButtonType.Primary : 0
	EnumItem NotificationButtonType.Secondary : 1
Enum OperationType
	EnumItem OperationType.Null : 0
	EnumItem OperationType.Union : 1
	EnumItem OperationType.Subtraction : 2
	EnumItem OperationType.Intersection : 3
	EnumItem OperationType.Primitive : 4
Enum OrientationAlignmentMode
	EnumItem OrientationAlignmentMode.OneAttachment : 0
	EnumItem OrientationAlignmentMode.TwoAttachment : 1
Enum OutfitSource
	EnumItem OutfitSource.All : 1
	EnumItem OutfitSource.Created : 2
	EnumItem OutfitSource.Purchased : 3
Enum OutfitType
	EnumItem OutfitType.All : 1
	EnumItem OutfitType.Avatar : 2
	EnumItem OutfitType.DynamicHead : 3
Enum OutputLayoutMode
	EnumItem OutputLayoutMode.Horizontal : 0
	EnumItem OutputLayoutMode.Vertical : 1
Enum OverrideMouseIconBehavior
	EnumItem OverrideMouseIconBehavior.None : 0
	EnumItem OverrideMouseIconBehavior.ForceShow : 1
	EnumItem OverrideMouseIconBehavior.ForceHide : 2
Enum PackagePermission
	EnumItem PackagePermission.None : 0
	EnumItem PackagePermission.NoAccess : 1
	EnumItem PackagePermission.Revoked : 2
	EnumItem PackagePermission.UseView : 3
	EnumItem PackagePermission.Edit : 4
	EnumItem PackagePermission.Own : 5
Enum PartType
	EnumItem PartType.Ball : 0
	EnumItem PartType.Block : 1
	EnumItem PartType.Cylinder : 2
	EnumItem PartType.Wedge : 3
	EnumItem PartType.CornerWedge : 4
Enum ParticleEmitterShape
	EnumItem ParticleEmitterShape.Box : 0
	EnumItem ParticleEmitterShape.Sphere : 1
	EnumItem ParticleEmitterShape.Cylinder : 2
	EnumItem ParticleEmitterShape.Disc : 3
Enum ParticleEmitterShapeInOut
	EnumItem ParticleEmitterShapeInOut.Outward : 0
	EnumItem ParticleEmitterShapeInOut.Inward : 1
	EnumItem ParticleEmitterShapeInOut.InAndOut : 2
Enum ParticleEmitterShapeStyle
	EnumItem ParticleEmitterShapeStyle.Volume : 0
	EnumItem ParticleEmitterShapeStyle.Surface : 1
Enum ParticleFlipbookLayout
	EnumItem ParticleFlipbookLayout.None : 0
	EnumItem ParticleFlipbookLayout.Grid2x2 : 1
	EnumItem ParticleFlipbookLayout.Grid4x4 : 2
	EnumItem ParticleFlipbookLayout.Grid8x8 : 3
Enum ParticleFlipbookMode
	EnumItem ParticleFlipbookMode.Loop : 0
	EnumItem ParticleFlipbookMode.OneShot : 1
	EnumItem ParticleFlipbookMode.PingPong : 2
	EnumItem ParticleFlipbookMode.Random : 3
Enum ParticleFlipbookTextureCompatible
	EnumItem ParticleFlipbookTextureCompatible.NotCompatible : 0
	EnumItem ParticleFlipbookTextureCompatible.Compatible : 1
	EnumItem ParticleFlipbookTextureCompatible.Unknown : 2
Enum ParticleOrientation
	EnumItem ParticleOrientation.FacingCamera : 0
	EnumItem ParticleOrientation.FacingCameraWorldUp : 1
	EnumItem ParticleOrientation.VelocityParallel : 2
	EnumItem ParticleOrientation.VelocityPerpendicular : 3
Enum PathStatus
	EnumItem PathStatus.Success : 0
	EnumItem PathStatus.ClosestNoPath : 1 [Deprecated]
	EnumItem PathStatus.ClosestOutOfRange : 2 [Deprecated]
	EnumItem PathStatus.FailStartNotEmpty : 3 [Deprecated]
	EnumItem PathStatus.FailFinishNotEmpty : 4 [Deprecated]
	EnumItem PathStatus.NoPath : 5
Enum PathWaypointAction
	EnumItem PathWaypointAction.Walk : 0
	EnumItem PathWaypointAction.Jump : 1
	EnumItem PathWaypointAction.Custom : 2
Enum PathfindingUseImprovedSearch
	EnumItem PathfindingUseImprovedSearch.Default : 0
	EnumItem PathfindingUseImprovedSearch.Disabled : 1
	EnumItem PathfindingUseImprovedSearch.Enabled : 2
Enum PermissionLevelShown
	EnumItem PermissionLevelShown.Game : 0
	EnumItem PermissionLevelShown.RobloxGame : 1
	EnumItem PermissionLevelShown.RobloxScript : 2
	EnumItem PermissionLevelShown.Studio : 3
	EnumItem PermissionLevelShown.Roblox : 4
Enum PhysicsSimulationRate
	EnumItem PhysicsSimulationRate.Fixed240Hz : 0
	EnumItem PhysicsSimulationRate.Fixed120Hz : 1
	EnumItem PhysicsSimulationRate.Fixed60Hz : 2
Enum PhysicsSteppingMethod
	EnumItem PhysicsSteppingMethod.Default : 0
	EnumItem PhysicsSteppingMethod.Fixed : 1
	EnumItem PhysicsSteppingMethod.Adaptive : 2
Enum Platform
	EnumItem Platform.Windows : 0
	EnumItem Platform.OSX : 1
	EnumItem Platform.IOS : 2
	EnumItem Platform.Android : 3
	EnumItem Platform.XBoxOne : 4
	EnumItem Platform.PS4 : 5
	EnumItem Platform.PS3 : 6
	EnumItem Platform.XBox360 : 7
	EnumItem Platform.WiiU : 8
	EnumItem Platform.NX : 9
	EnumItem Platform.Ouya : 10
	EnumItem Platform.AndroidTV : 11
	EnumItem Platform.Chromecast : 12
	EnumItem Platform.Linux : 13
	EnumItem Platform.SteamOS : 14
	EnumItem Platform.WebOS : 15
	EnumItem Platform.DOS : 16
	EnumItem Platform.BeOS : 17
	EnumItem Platform.UWP : 18
	EnumItem Platform.PS5 : 19
	EnumItem Platform.MetaOS : 20
	EnumItem Platform.None : 21
Enum PlaybackState
	EnumItem PlaybackState.Begin : 0
	EnumItem PlaybackState.Delayed : 1
	EnumItem PlaybackState.Playing : 2
	EnumItem PlaybackState.Paused : 3
	EnumItem PlaybackState.Completed : 4
	EnumItem PlaybackState.Cancelled : 5
Enum PlayerActions
	EnumItem PlayerActions.CharacterForward : 0
	EnumItem PlayerActions.CharacterBackward : 1
	EnumItem PlayerActions.CharacterLeft : 2
	EnumItem PlayerActions.CharacterRight : 3
	EnumItem PlayerActions.CharacterJump : 4
Enum PlayerCharacterDestroyBehavior
	EnumItem PlayerCharacterDestroyBehavior.Default : 0
	EnumItem PlayerCharacterDestroyBehavior.Disabled : 1
	EnumItem PlayerCharacterDestroyBehavior.Enabled : 2
Enum PlayerChatType
	EnumItem PlayerChatType.All : 0
	EnumItem PlayerChatType.Team : 1
	EnumItem PlayerChatType.Whisper : 2
Enum PoseEasingDirection
	EnumItem PoseEasingDirection.In : 0
	EnumItem PoseEasingDirection.Out : 1
	EnumItem PoseEasingDirection.InOut : 2
Enum PoseEasingStyle
	EnumItem PoseEasingStyle.Linear : 0
	EnumItem PoseEasingStyle.Constant : 1
	EnumItem PoseEasingStyle.Elastic : 2
	EnumItem PoseEasingStyle.Cubic : 3
	EnumItem PoseEasingStyle.Bounce : 4
	EnumItem PoseEasingStyle.CubicV2 : 5
Enum PositionAlignmentMode
	EnumItem PositionAlignmentMode.OneAttachment : 0
	EnumItem PositionAlignmentMode.TwoAttachment : 1
Enum PreferredTextSize
	EnumItem PreferredTextSize.Medium : 1
	EnumItem PreferredTextSize.Large : 2
	EnumItem PreferredTextSize.Larger : 3
	EnumItem PreferredTextSize.Largest : 4
Enum PrimalPhysicsSolver
	EnumItem PrimalPhysicsSolver.Default : 0
	EnumItem PrimalPhysicsSolver.Experimental : 1
	EnumItem PrimalPhysicsSolver.Disabled : 2
Enum PrimitiveType
	EnumItem PrimitiveType.Null : 0
	EnumItem PrimitiveType.Ball : 1
	EnumItem PrimitiveType.Cylinder : 2
	EnumItem PrimitiveType.Block : 3
	EnumItem PrimitiveType.Wedge : 4
	EnumItem PrimitiveType.CornerWedge : 5
Enum PrivilegeType [Deprecated]
	EnumItem PrivilegeType.Banned : 0 [Deprecated]
	EnumItem PrivilegeType.Visitor : 10 [Deprecated]
	EnumItem PrivilegeType.Member : 128 [Deprecated]
	EnumItem PrivilegeType.Admin : 240 [Deprecated]
	EnumItem PrivilegeType.Owner : 255 [Deprecated]
Enum ProductLocationRestriction
	EnumItem ProductLocationRestriction.AvatarShop : 0
	EnumItem ProductLocationRestriction.AllowedGames : 1
	EnumItem ProductLocationRestriction.AllGames : 2
Enum ProductPurchaseDecision
	EnumItem ProductPurchaseDecision.NotProcessedYet : 0
	EnumItem ProductPurchaseDecision.PurchaseGranted : 1
Enum PromptCreateAssetResult
	EnumItem PromptCreateAssetResult.Success : 1
	EnumItem PromptCreateAssetResult.PermissionDenied : 2
	EnumItem PromptCreateAssetResult.Timeout : 3
	EnumItem PromptCreateAssetResult.UploadFailed : 4
	EnumItem PromptCreateAssetResult.NoUserInput : 5
	EnumItem PromptCreateAssetResult.UnknownFailure : 6
Enum PromptCreateAvatarResult
	EnumItem PromptCreateAvatarResult.Success : 1
	EnumItem PromptCreateAvatarResult.PermissionDenied : 2
	EnumItem PromptCreateAvatarResult.Timeout : 3
	EnumItem PromptCreateAvatarResult.UploadFailed : 4
	EnumItem PromptCreateAvatarResult.NoUserInput : 5
	EnumItem PromptCreateAvatarResult.InvalidHumanoidDescription : 6
	EnumItem PromptCreateAvatarResult.UGCValidationFailed : 7
	EnumItem PromptCreateAvatarResult.ModeratedName : 8
	EnumItem PromptCreateAvatarResult.MaxOutfits : 9
	EnumItem PromptCreateAvatarResult.UnknownFailure : 10
Enum PromptPublishAssetResult
	EnumItem PromptPublishAssetResult.Success : 1
	EnumItem PromptPublishAssetResult.PermissionDenied : 2
	EnumItem PromptPublishAssetResult.Timeout : 3
	EnumItem PromptPublishAssetResult.UploadFailed : 4
	EnumItem PromptPublishAssetResult.NoUserInput : 5
	EnumItem PromptPublishAssetResult.UnknownFailure : 6
Enum PropertyStatus
	EnumItem PropertyStatus.Ok : 0
	EnumItem PropertyStatus.Warning : 1
	EnumItem PropertyStatus.Error : 2
Enum ProximityPromptExclusivity
	EnumItem ProximityPromptExclusivity.OnePerButton : 0
	EnumItem ProximityPromptExclusivity.OneGlobally : 1
	EnumItem ProximityPromptExclusivity.AlwaysShow : 2
Enum ProximityPromptInputType
	EnumItem ProximityPromptInputType.Keyboard : 0
	EnumItem ProximityPromptInputType.Gamepad : 1
	EnumItem ProximityPromptInputType.Touch : 2
Enum ProximityPromptStyle
	EnumItem ProximityPromptStyle.Default : 0
	EnumItem ProximityPromptStyle.Custom : 1
Enum Quality
	EnumItem Quality.Performance : 0
	EnumItem Quality.Quality : 1
Enum QualityLevel
	EnumItem QualityLevel.Automatic : 0
	EnumItem QualityLevel.Level01 : 1
	EnumItem QualityLevel.Level02 : 2
	EnumItem QualityLevel.Level03 : 3
	EnumItem QualityLevel.Level04 : 4
	EnumItem QualityLevel.Level05 : 5
	EnumItem QualityLevel.Level06 : 6
	EnumItem QualityLevel.Level07 : 7
	EnumItem QualityLevel.Level08 : 8
	EnumItem QualityLevel.Level09 : 9
	EnumItem QualityLevel.Level10 : 10
	EnumItem QualityLevel.Level11 : 11
	EnumItem QualityLevel.Level12 : 12
	EnumItem QualityLevel.Level13 : 13
	EnumItem QualityLevel.Level14 : 14
	EnumItem QualityLevel.Level15 : 15
	EnumItem QualityLevel.Level16 : 16
	EnumItem QualityLevel.Level17 : 17
	EnumItem QualityLevel.Level18 : 18
	EnumItem QualityLevel.Level19 : 19
	EnumItem QualityLevel.Level20 : 20
	EnumItem QualityLevel.Level21 : 21
Enum R15CollisionType
	EnumItem R15CollisionType.OuterBox : 0
	EnumItem R15CollisionType.InnerBox : 1
Enum RaycastFilterType
	EnumItem RaycastFilterType.Exclude : 0
	EnumItem RaycastFilterType.Include : 1
Enum RejectCharacterDeletions
	EnumItem RejectCharacterDeletions.Default : 0
	EnumItem RejectCharacterDeletions.Disabled : 1
	EnumItem RejectCharacterDeletions.Enabled : 2
Enum RenderFidelity
	EnumItem RenderFidelity.Automatic : 0
	EnumItem RenderFidelity.Precise : 1
	EnumItem RenderFidelity.Performance : 2
Enum RenderPriority
	EnumItem RenderPriority.First : 0
	EnumItem RenderPriority.Input : 100
	EnumItem RenderPriority.Camera : 200
	EnumItem RenderPriority.Character : 300
	EnumItem RenderPriority.Last : 2000
Enum RenderingCacheOptimizationMode
	EnumItem RenderingCacheOptimizationMode.Default : 0
	EnumItem RenderingCacheOptimizationMode.Disabled : 1
	EnumItem RenderingCacheOptimizationMode.Enabled : 2
Enum RenderingTestComparisonMethod
	EnumItem RenderingTestComparisonMethod.psnr : 0
	EnumItem RenderingTestComparisonMethod.diff : 1
Enum ReplicateInstanceDestroySetting
	EnumItem ReplicateInstanceDestroySetting.Default : 0
	EnumItem ReplicateInstanceDestroySetting.Disabled : 1
	EnumItem ReplicateInstanceDestroySetting.Enabled : 2
Enum ResamplerMode
	EnumItem ResamplerMode.Default : 0
	EnumItem ResamplerMode.Pixelated : 1
Enum ReservedHighlightId
	EnumItem ReservedHighlightId.Standard : 0
	EnumItem ReservedHighlightId.Active : 131072
	EnumItem ReservedHighlightId.Hover : 262144
	EnumItem ReservedHighlightId.Selection : 524288
Enum RestPose
	EnumItem RestPose.Default : 0
	EnumItem RestPose.RotationsReset : 1
	EnumItem RestPose.Custom : 2
Enum ReturnKeyType
	EnumItem ReturnKeyType.Default : 0
	EnumItem ReturnKeyType.Done : 1
	EnumItem ReturnKeyType.Go : 2
	EnumItem ReturnKeyType.Next : 3
	EnumItem ReturnKeyType.Search : 4
	EnumItem ReturnKeyType.Send : 5
Enum ReverbType
	EnumItem ReverbType.NoReverb : 0
	EnumItem ReverbType.GenericReverb : 1
	EnumItem ReverbType.PaddedCell : 2
	EnumItem ReverbType.Room : 3
	EnumItem ReverbType.Bathroom : 4
	EnumItem ReverbType.LivingRoom : 5
	EnumItem ReverbType.StoneRoom : 6
	EnumItem ReverbType.Auditorium : 7
	EnumItem ReverbType.ConcertHall : 8
	EnumItem ReverbType.Cave : 9
	EnumItem ReverbType.Arena : 10
	EnumItem ReverbType.Hangar : 11
	EnumItem ReverbType.CarpettedHallway : 12
	EnumItem ReverbType.Hallway : 13
	EnumItem ReverbType.StoneCorridor : 14
	EnumItem ReverbType.Alley : 15
	EnumItem ReverbType.Forest : 16
	EnumItem ReverbType.City : 17
	EnumItem ReverbType.Mountains : 18
	EnumItem ReverbType.Quarry : 19
	EnumItem ReverbType.Plain : 20
	EnumItem ReverbType.ParkingLot : 21
	EnumItem ReverbType.SewerPipe : 22
	EnumItem ReverbType.UnderWater : 23
Enum RibbonTool
	EnumItem RibbonTool.Select : 0
	EnumItem RibbonTool.Scale : 1
	EnumItem RibbonTool.Rotate : 2
	EnumItem RibbonTool.Move : 3
	EnumItem RibbonTool.Transform : 4
	EnumItem RibbonTool.ColorPicker : 5
	EnumItem RibbonTool.MaterialPicker : 6
	EnumItem RibbonTool.Group : 7
	EnumItem RibbonTool.Ungroup : 8
	EnumItem RibbonTool.None : 9
	EnumItem RibbonTool.PivotEditor : 10
Enum RigScale
	EnumItem RigScale.Default : 0
	EnumItem RigScale.Rthro : 1
	EnumItem RigScale.RthroNarrow : 2
Enum RigType
	EnumItem RigType.R15 : 0
	EnumItem RigType.Custom : 1
	EnumItem RigType.None : 2
Enum RollOffMode
	EnumItem RollOffMode.Inverse : 0
	EnumItem RollOffMode.Linear : 1
	EnumItem RollOffMode.LinearSquare : 2
	EnumItem RollOffMode.InverseTapered : 3
Enum RolloutState
	EnumItem RolloutState.Default : 0
	EnumItem RolloutState.Disabled : 1
	EnumItem RolloutState.Enabled : 2
Enum RotationOrder
	EnumItem RotationOrder.XYZ : 0
	EnumItem RotationOrder.XZY : 1
	EnumItem RotationOrder.YZX : 2
	EnumItem RotationOrder.YXZ : 3
	EnumItem RotationOrder.ZXY : 4
	EnumItem RotationOrder.ZYX : 5
Enum RotationType
	EnumItem RotationType.MovementRelative : 0
	EnumItem RotationType.CameraRelative : 1
Enum RtlTextSupport
	EnumItem RtlTextSupport.Default : 0
	EnumItem RtlTextSupport.Disabled : 1
	EnumItem RtlTextSupport.Enabled : 2
Enum RunContext
	EnumItem RunContext.Legacy : 0
	EnumItem RunContext.Server : 1
	EnumItem RunContext.Client : 2
	EnumItem RunContext.Plugin : 3
Enum RunState
	EnumItem RunState.Stopped : 0
	EnumItem RunState.Running : 1
	EnumItem RunState.Paused : 2
Enum RuntimeUndoBehavior
	EnumItem RuntimeUndoBehavior.Aggregate : 0
	EnumItem RuntimeUndoBehavior.Snapshot : 1
	EnumItem RuntimeUndoBehavior.Hybrid : 2
Enum SafeAreaCompatibility
	EnumItem SafeAreaCompatibility.None : 0
	EnumItem SafeAreaCompatibility.FullscreenExtension : 1
Enum SalesTypeFilter
	EnumItem SalesTypeFilter.All : 1
	EnumItem SalesTypeFilter.Collectibles : 2
	EnumItem SalesTypeFilter.Premium : 3
Enum SaveAvatarThumbnailCustomizationFailure
	EnumItem SaveAvatarThumbnailCustomizationFailure.BadThumbnailType : 1
	EnumItem SaveAvatarThumbnailCustomizationFailure.BadYRotDeg : 2
	EnumItem SaveAvatarThumbnailCustomizationFailure.BadFieldOfViewDeg : 3
	EnumItem SaveAvatarThumbnailCustomizationFailure.BadDistanceScale : 4
	EnumItem SaveAvatarThumbnailCustomizationFailure.Other : 5
	EnumItem SaveAvatarThumbnailCustomizationFailure.Throttled : 6
Enum SaveFilter [Deprecated]
	EnumItem SaveFilter.SaveWorld : 0 [Deprecated]
	EnumItem SaveFilter.SaveGame : 1 [Deprecated]
	EnumItem SaveFilter.SaveAll : 2 [Deprecated]
Enum SavedQualitySetting
	EnumItem SavedQualitySetting.Automatic : 0
	EnumItem SavedQualitySetting.QualityLevel1 : 1
	EnumItem SavedQualitySetting.QualityLevel2 : 2
	EnumItem SavedQualitySetting.QualityLevel3 : 3
	EnumItem SavedQualitySetting.QualityLevel4 : 4
	EnumItem SavedQualitySetting.QualityLevel5 : 5
	EnumItem SavedQualitySetting.QualityLevel6 : 6
	EnumItem SavedQualitySetting.QualityLevel7 : 7
	EnumItem SavedQualitySetting.QualityLevel8 : 8
	EnumItem SavedQualitySetting.QualityLevel9 : 9
	EnumItem SavedQualitySetting.QualityLevel10 : 10
Enum ScaleType
	EnumItem ScaleType.Stretch : 0
	EnumItem ScaleType.Slice : 1
	EnumItem ScaleType.Tile : 2
	EnumItem ScaleType.Fit : 3
	EnumItem ScaleType.Crop : 4
Enum ScopeCheckResult
	EnumItem ScopeCheckResult.ConsentAccepted : 0
	EnumItem ScopeCheckResult.InvalidScopes : 1
	EnumItem ScopeCheckResult.Timeout : 2
	EnumItem ScopeCheckResult.NoUserInput : 3
	EnumItem ScopeCheckResult.BackendError : 4
	EnumItem ScopeCheckResult.UnexpectedError : 5
	EnumItem ScopeCheckResult.InvalidArgument : 6
	EnumItem ScopeCheckResult.ConsentDenied : 7
Enum ScreenInsets
	EnumItem ScreenInsets.None : 0
	EnumItem ScreenInsets.DeviceSafeInsets : 1
	EnumItem ScreenInsets.CoreUISafeInsets : 2
	EnumItem ScreenInsets.TopbarSafeInsets : 3
Enum ScreenOrientation
	EnumItem ScreenOrientation.LandscapeLeft : 0
	EnumItem ScreenOrientation.LandscapeRight : 1
	EnumItem ScreenOrientation.LandscapeSensor : 2
	EnumItem ScreenOrientation.Portrait : 3
	EnumItem ScreenOrientation.Sensor : 4
Enum ScrollBarInset
	EnumItem ScrollBarInset.None : 0
	EnumItem ScrollBarInset.ScrollBar : 1
	EnumItem ScrollBarInset.Always : 2
Enum ScrollingDirection
	EnumItem ScrollingDirection.X : 1
	EnumItem ScrollingDirection.Y : 2
	EnumItem ScrollingDirection.XY : 4
Enum SecurityCapability
	EnumItem SecurityCapability.RunClientScript : 0
	EnumItem SecurityCapability.RunServerScript : 1
	EnumItem SecurityCapability.AccessOutsideWrite : 2
	EnumItem SecurityCapability.AssetRequire : 3
	EnumItem SecurityCapability.LoadString : 4
	EnumItem SecurityCapability.ScriptGlobals : 5
	EnumItem SecurityCapability.CreateInstances : 6
	EnumItem SecurityCapability.Basic : 7
	EnumItem SecurityCapability.Audio : 8
	EnumItem SecurityCapability.DataStore : 9
	EnumItem SecurityCapability.Network : 10
	EnumItem SecurityCapability.Physics : 11
	EnumItem SecurityCapability.UI : 12
	EnumItem SecurityCapability.CSG : 13
	EnumItem SecurityCapability.Chat : 14
	EnumItem SecurityCapability.Animation : 15
	EnumItem SecurityCapability.Avatar : 16
	EnumItem SecurityCapability.Input : 17
	EnumItem SecurityCapability.Environment : 18
	EnumItem SecurityCapability.RemoteEvent : 19
Enum SelectionBehavior
	EnumItem SelectionBehavior.Escape : 0
	EnumItem SelectionBehavior.Stop : 1
Enum SelectionRenderMode
	EnumItem SelectionRenderMode.Outlines : 0
	EnumItem SelectionRenderMode.BoundingBoxes : 1
	EnumItem SelectionRenderMode.Both : 2
Enum SelfViewPosition
	EnumItem SelfViewPosition.LastPosition : 0
	EnumItem SelfViewPosition.TopLeft : 1
	EnumItem SelfViewPosition.TopRight : 2
	EnumItem SelfViewPosition.BottomLeft : 3
	EnumItem SelfViewPosition.BottomRight : 4
Enum SensorMode
	EnumItem SensorMode.Floor : 0
	EnumItem SensorMode.Ladder : 1
Enum SensorUpdateType
	EnumItem SensorUpdateType.OnRead : 0
	EnumItem SensorUpdateType.Manual : 1
Enum ServerLiveEditingMode
	EnumItem ServerLiveEditingMode.Uninitialized : 0
	EnumItem ServerLiveEditingMode.Enabled : 1
	EnumItem ServerLiveEditingMode.Disabled : 2
Enum ServiceVisibility
	EnumItem ServiceVisibility.Always : 0
	EnumItem ServiceVisibility.Off : 1
	EnumItem ServiceVisibility.WithChildren : 2
Enum Severity
	EnumItem Severity.Error : 1
	EnumItem Severity.Warning : 2
	EnumItem Severity.Information : 3
	EnumItem Severity.Hint : 4
Enum SignalBehavior
	EnumItem SignalBehavior.Default : 0
	EnumItem SignalBehavior.Immediate : 1
	EnumItem SignalBehavior.Deferred : 2
	EnumItem SignalBehavior.AncestryDeferred : 3
Enum SizeConstraint
	EnumItem SizeConstraint.RelativeXY : 0
	EnumItem SizeConstraint.RelativeXX : 1
	EnumItem SizeConstraint.RelativeYY : 2
Enum SolverConvergenceMetricType
	EnumItem SolverConvergenceMetricType.IterationBased : 0
	EnumItem SolverConvergenceMetricType.AlgorithmAgnostic : 1
Enum SolverConvergenceVisualizationMode
	EnumItem SolverConvergenceVisualizationMode.Disabled : 0
	EnumItem SolverConvergenceVisualizationMode.PerIsland : 1
	EnumItem SolverConvergenceVisualizationMode.PerEdge : 2
Enum SortDirection
	EnumItem SortDirection.Ascending : 0
	EnumItem SortDirection.Descending : 1
Enum SortOrder
	EnumItem SortOrder.Name : 0
	EnumItem SortOrder.Custom : 1 [Deprecated]
	EnumItem SortOrder.LayoutOrder : 2
Enum SpecialKey
	EnumItem SpecialKey.Insert : 0
	EnumItem SpecialKey.Home : 1
	EnumItem SpecialKey.End : 2
	EnumItem SpecialKey.PageUp : 3
	EnumItem SpecialKey.PageDown : 4
	EnumItem SpecialKey.ChatHotkey : 5
Enum StartCorner
	EnumItem StartCorner.TopLeft : 0
	EnumItem StartCorner.TopRight : 1
	EnumItem StartCorner.BottomLeft : 2
	EnumItem StartCorner.BottomRight : 3
Enum Status [Deprecated]
	EnumItem Status.Poison : 0 [Deprecated] [Deprecated]
	EnumItem Status.Confusion : 1 [Deprecated] [Deprecated]
Enum StreamOutBehavior
	EnumItem StreamOutBehavior.Default : 0
	EnumItem StreamOutBehavior.LowMemory : 1
	EnumItem StreamOutBehavior.Opportunistic : 2
Enum StreamingIntegrityMode
	EnumItem StreamingIntegrityMode.Default : 0
	EnumItem StreamingIntegrityMode.Disabled : 1
	EnumItem StreamingIntegrityMode.MinimumRadiusPause : 2
	EnumItem StreamingIntegrityMode.PauseOutsideLoadedArea : 3
Enum StreamingPauseMode [Deprecated]
	EnumItem StreamingPauseMode.Default : 0 [Deprecated]
	EnumItem StreamingPauseMode.Disabled : 1 [Deprecated]
	EnumItem StreamingPauseMode.ClientPhysicsPause : 2 [Deprecated]
Enum StudioCloseMode
	EnumItem StudioCloseMode.None : 0
	EnumItem StudioCloseMode.CloseStudio : 1
	EnumItem StudioCloseMode.CloseDoc : 2
	EnumItem StudioCloseMode.LogOut : 3
Enum StudioDataModelType
	EnumItem StudioDataModelType.Edit : 0
	EnumItem StudioDataModelType.PlayClient : 1
	EnumItem StudioDataModelType.PlayServer : 2
	EnumItem StudioDataModelType.Standalone : 3
	EnumItem StudioDataModelType.None : 4
Enum StudioPlaceUpdateFailureReason
	EnumItem StudioPlaceUpdateFailureReason.Other : 0
	EnumItem StudioPlaceUpdateFailureReason.TeamCreateConflict : 1
Enum StudioScriptEditorColorCategories
	EnumItem StudioScriptEditorColorCategories.Default : 0
	EnumItem StudioScriptEditorColorCategories.Operator : 1
	EnumItem StudioScriptEditorColorCategories.Number : 2
	EnumItem StudioScriptEditorColorCategories.String : 3
	EnumItem StudioScriptEditorColorCategories.Comment : 4
	EnumItem StudioScriptEditorColorCategories.Keyword : 5
	EnumItem StudioScriptEditorColorCategories.Builtin : 6
	EnumItem StudioScriptEditorColorCategories.Method : 7
	EnumItem StudioScriptEditorColorCategories.Property : 8
	EnumItem StudioScriptEditorColorCategories.Nil : 9
	EnumItem StudioScriptEditorColorCategories.Bool : 10
	EnumItem StudioScriptEditorColorCategories.Function : 11
	EnumItem StudioScriptEditorColorCategories.Local : 12
	EnumItem StudioScriptEditorColorCategories.Self : 13
	EnumItem StudioScriptEditorColorCategories.LuauKeyword : 14
	EnumItem StudioScriptEditorColorCategories.FunctionName : 15
	EnumItem StudioScriptEditorColorCategories.TODO : 16
	EnumItem StudioScriptEditorColorCategories.Background : 17
	EnumItem StudioScriptEditorColorCategories.SelectionText : 18
	EnumItem StudioScriptEditorColorCategories.SelectionBackground : 19
	EnumItem StudioScriptEditorColorCategories.FindSelectionBackground : 20
	EnumItem StudioScriptEditorColorCategories.MatchingWordBackground : 21
	EnumItem StudioScriptEditorColorCategories.Warning : 22
	EnumItem StudioScriptEditorColorCategories.Error : 23
	EnumItem StudioScriptEditorColorCategories.Info : 24
	EnumItem StudioScriptEditorColorCategories.Hint : 25
	EnumItem StudioScriptEditorColorCategories.Whitespace : 26
	EnumItem StudioScriptEditorColorCategories.ActiveLine : 27
	EnumItem StudioScriptEditorColorCategories.DebuggerCurrentLine : 28
	EnumItem StudioScriptEditorColorCategories.DebuggerErrorLine : 29
	EnumItem StudioScriptEditorColorCategories.Ruler : 30
	EnumItem StudioScriptEditorColorCategories.Bracket : 31
	EnumItem StudioScriptEditorColorCategories.MenuPrimaryText : 32
	EnumItem StudioScriptEditorColorCategories.MenuSecondaryText : 33
	EnumItem StudioScriptEditorColorCategories.MenuSelectedText : 34
	EnumItem StudioScriptEditorColorCategories.MenuBackground : 35
	EnumItem StudioScriptEditorColorCategories.MenuSelectedBackground : 36
	EnumItem StudioScriptEditorColorCategories.MenuScrollbarBackground : 37
	EnumItem StudioScriptEditorColorCategories.MenuScrollbarHandle : 38
	EnumItem StudioScriptEditorColorCategories.MenuBorder : 39
	EnumItem StudioScriptEditorColorCategories.DocViewCodeBackground : 40
	EnumItem StudioScriptEditorColorCategories.AICOOverlayText : 41
	EnumItem StudioScriptEditorColorCategories.AICOOverlayButtonBackground : 42
	EnumItem StudioScriptEditorColorCategories.AICOOverlayButtonBackgroundHover : 43
	EnumItem StudioScriptEditorColorCategories.AICOOverlayButtonBackgroundPressed : 44
	EnumItem StudioScriptEditorColorCategories.IndentationRuler : 45
Enum StudioScriptEditorColorPresets
	EnumItem StudioScriptEditorColorPresets.RobloxDefault : 0
	EnumItem StudioScriptEditorColorPresets.Extra1 : 1
	EnumItem StudioScriptEditorColorPresets.Extra2 : 2
	EnumItem StudioScriptEditorColorPresets.Custom : 3
Enum StudioStyleGuideColor
	EnumItem StudioStyleGuideColor.MainBackground : 0
	EnumItem StudioStyleGuideColor.Titlebar : 1
	EnumItem StudioStyleGuideColor.Dropdown : 2
	EnumItem StudioStyleGuideColor.Tooltip : 3
	EnumItem StudioStyleGuideColor.Notification : 4
	EnumItem StudioStyleGuideColor.ScrollBar : 5
	EnumItem StudioStyleGuideColor.ScrollBarBackground : 6
	EnumItem StudioStyleGuideColor.TabBar : 7
	EnumItem StudioStyleGuideColor.Tab : 8
	EnumItem StudioStyleGuideColor.FilterButtonDefault : 9
	EnumItem StudioStyleGuideColor.FilterButtonHover : 10
	EnumItem StudioStyleGuideColor.FilterButtonChecked : 11
	EnumItem StudioStyleGuideColor.FilterButtonAccent : 12
	EnumItem StudioStyleGuideColor.FilterButtonBorder : 13
	EnumItem StudioStyleGuideColor.FilterButtonBorderAlt : 14
	EnumItem StudioStyleGuideColor.RibbonTab : 15
	EnumItem StudioStyleGuideColor.RibbonTabTopBar : 16
	EnumItem StudioStyleGuideColor.Button : 17
	EnumItem StudioStyleGuideColor.MainButton : 18
	EnumItem StudioStyleGuideColor.RibbonButton : 19
	EnumItem StudioStyleGuideColor.ViewPortBackground : 20
	EnumItem StudioStyleGuideColor.InputFieldBackground : 21
	EnumItem StudioStyleGuideColor.Item : 22
	EnumItem StudioStyleGuideColor.TableItem : 23
	EnumItem StudioStyleGuideColor.CategoryItem : 24
	EnumItem StudioStyleGuideColor.GameSettingsTableItem : 25
	EnumItem StudioStyleGuideColor.GameSettingsTooltip : 26
	EnumItem StudioStyleGuideColor.EmulatorBar : 27
	EnumItem StudioStyleGuideColor.EmulatorDropDown : 28
	EnumItem StudioStyleGuideColor.ColorPickerFrame : 29
	EnumItem StudioStyleGuideColor.CurrentMarker : 30
	EnumItem StudioStyleGuideColor.Border : 31
	EnumItem StudioStyleGuideColor.DropShadow : 32
	EnumItem StudioStyleGuideColor.Shadow : 33
	EnumItem StudioStyleGuideColor.Light : 34
	EnumItem StudioStyleGuideColor.Dark : 35
	EnumItem StudioStyleGuideColor.Mid : 36
	EnumItem StudioStyleGuideColor.MainText : 37
	EnumItem StudioStyleGuideColor.SubText : 38
	EnumItem StudioStyleGuideColor.TitlebarText : 39
	EnumItem StudioStyleGuideColor.BrightText : 40
	EnumItem StudioStyleGuideColor.DimmedText : 41
	EnumItem StudioStyleGuideColor.LinkText : 42
	EnumItem StudioStyleGuideColor.WarningText : 43
	EnumItem StudioStyleGuideColor.ErrorText : 44
	EnumItem StudioStyleGuideColor.InfoText : 45
	EnumItem StudioStyleGuideColor.SensitiveText : 46
	EnumItem StudioStyleGuideColor.ScriptSideWidget : 47
	EnumItem StudioStyleGuideColor.ScriptBackground : 48
	EnumItem StudioStyleGuideColor.ScriptText : 49
	EnumItem StudioStyleGuideColor.ScriptSelectionText : 50
	EnumItem StudioStyleGuideColor.ScriptSelectionBackground : 51
	EnumItem StudioStyleGuideColor.ScriptFindSelectionBackground : 52
	EnumItem StudioStyleGuideColor.ScriptMatchingWordSelectionBackground : 53
	EnumItem StudioStyleGuideColor.ScriptOperator : 54
	EnumItem StudioStyleGuideColor.ScriptNumber : 55
	EnumItem StudioStyleGuideColor.ScriptString : 56
	EnumItem StudioStyleGuideColor.ScriptComment : 57
	EnumItem StudioStyleGuideColor.ScriptKeyword : 58
	EnumItem StudioStyleGuideColor.ScriptBuiltInFunction : 59
	EnumItem StudioStyleGuideColor.ScriptWarning : 60
	EnumItem StudioStyleGuideColor.ScriptError : 61
	EnumItem StudioStyleGuideColor.ScriptInformation : 62
	EnumItem StudioStyleGuideColor.ScriptHint : 63
	EnumItem StudioStyleGuideColor.ScriptWhitespace : 64
	EnumItem StudioStyleGuideColor.ScriptRuler : 65
	EnumItem StudioStyleGuideColor.DocViewCodeBackground : 66
	EnumItem StudioStyleGuideColor.DebuggerCurrentLine : 67
	EnumItem StudioStyleGuideColor.DebuggerErrorLine : 68
	EnumItem StudioStyleGuideColor.DiffFilePathText : 69
	EnumItem StudioStyleGuideColor.DiffTextHunkInfo : 70
	EnumItem StudioStyleGuideColor.DiffTextNoChange : 71
	EnumItem StudioStyleGuideColor.DiffTextAddition : 72
	EnumItem StudioStyleGuideColor.DiffTextDeletion : 73
	EnumItem StudioStyleGuideColor.DiffTextSeparatorBackground : 74
	EnumItem StudioStyleGuideColor.DiffTextNoChangeBackground : 75
	EnumItem StudioStyleGuideColor.DiffTextAdditionBackground : 76
	EnumItem StudioStyleGuideColor.DiffTextDeletionBackground : 77
	EnumItem StudioStyleGuideColor.DiffLineNum : 78
	EnumItem StudioStyleGuideColor.DiffLineNumSeparatorBackground : 79
	EnumItem StudioStyleGuideColor.DiffLineNumNoChangeBackground : 80
	EnumItem StudioStyleGuideColor.DiffLineNumAdditionBackground : 81
	EnumItem StudioStyleGuideColor.DiffLineNumDeletionBackground : 82
	EnumItem StudioStyleGuideColor.DiffFilePathBackground : 83
	EnumItem StudioStyleGuideColor.DiffFilePathBorder : 84
	EnumItem StudioStyleGuideColor.ChatIncomingBgColor : 85
	EnumItem StudioStyleGuideColor.ChatIncomingTextColor : 86
	EnumItem StudioStyleGuideColor.ChatOutgoingBgColor : 87
	EnumItem StudioStyleGuideColor.ChatOutgoingTextColor : 88
	EnumItem StudioStyleGuideColor.ChatModeratedMessageColor : 89
	EnumItem StudioStyleGuideColor.Separator : 90
	EnumItem StudioStyleGuideColor.ButtonBorder : 91
	EnumItem StudioStyleGuideColor.ButtonText : 92
	EnumItem StudioStyleGuideColor.InputFieldBorder : 93
	EnumItem StudioStyleGuideColor.CheckedFieldBackground : 94
	EnumItem StudioStyleGuideColor.CheckedFieldBorder : 95
	EnumItem StudioStyleGuideColor.CheckedFieldIndicator : 96
	EnumItem StudioStyleGuideColor.HeaderSection : 97
	EnumItem StudioStyleGuideColor.Midlight : 98
	EnumItem StudioStyleGuideColor.StatusBar : 99
	EnumItem StudioStyleGuideColor.DialogButton : 100
	EnumItem StudioStyleGuideColor.DialogButtonText : 101
	EnumItem StudioStyleGuideColor.DialogButtonBorder : 102
	EnumItem StudioStyleGuideColor.DialogMainButton : 103
	EnumItem StudioStyleGuideColor.DialogMainButtonText : 104
	EnumItem StudioStyleGuideColor.InfoBarWarningBackground : 105
	EnumItem StudioStyleGuideColor.InfoBarWarningText : 106
	EnumItem StudioStyleGuideColor.ScriptEditorCurrentLine : 107
	EnumItem StudioStyleGuideColor.ScriptMethod : 108
	EnumItem StudioStyleGuideColor.ScriptProperty : 109
	EnumItem StudioStyleGuideColor.ScriptNil : 110
	EnumItem StudioStyleGuideColor.ScriptBool : 111
	EnumItem StudioStyleGuideColor.ScriptFunction : 112
	EnumItem StudioStyleGuideColor.ScriptLocal : 113
	EnumItem StudioStyleGuideColor.ScriptSelf : 114
	EnumItem StudioStyleGuideColor.ScriptLuauKeyword : 115
	EnumItem StudioStyleGuideColor.ScriptFunctionName : 116
	EnumItem StudioStyleGuideColor.ScriptTodo : 117
	EnumItem StudioStyleGuideColor.ScriptBracket : 118
	EnumItem StudioStyleGuideColor.AttributeCog : 119
	EnumItem StudioStyleGuideColor.AICOOverlayText : 128
	EnumItem StudioStyleGuideColor.AICOOverlayButtonBackground : 129
	EnumItem StudioStyleGuideColor.AICOOverlayButtonBackgroundHover : 130
	EnumItem StudioStyleGuideColor.AICOOverlayButtonBackgroundPressed : 131
	EnumItem StudioStyleGuideColor.OnboardingCover : 132
	EnumItem StudioStyleGuideColor.OnboardingHighlight : 133
	EnumItem StudioStyleGuideColor.OnboardingShadow : 134
	EnumItem StudioStyleGuideColor.BreakpointMarker : 136
	EnumItem StudioStyleGuideColor.DiffLineNumHover : 137
	EnumItem StudioStyleGuideColor.DiffLineNumSeparatorBackgroundHover : 138
Enum StudioStyleGuideModifier
	EnumItem StudioStyleGuideModifier.Default : 0
	EnumItem StudioStyleGuideModifier.Selected : 1
	EnumItem StudioStyleGuideModifier.Pressed : 2
	EnumItem StudioStyleGuideModifier.Disabled : 3
	EnumItem StudioStyleGuideModifier.Hover : 4
Enum Style
	EnumItem Style.AlternatingSupports : 0
	EnumItem Style.BridgeStyleSupports : 1
	EnumItem Style.NoSupports : 2
Enum SubscriptionExpirationReason
	EnumItem SubscriptionExpirationReason.ProductInactive : 0
	EnumItem SubscriptionExpirationReason.ProductDeleted : 1
	EnumItem SubscriptionExpirationReason.SubscriberCancelled : 2
	EnumItem SubscriptionExpirationReason.SubscriberRefunded : 3
	EnumItem SubscriptionExpirationReason.Lapsed : 4
Enum SubscriptionPaymentStatus
	EnumItem SubscriptionPaymentStatus.Paid : 0
	EnumItem SubscriptionPaymentStatus.Refunded : 1
Enum SubscriptionPeriod
	EnumItem SubscriptionPeriod.Month : 0
Enum SubscriptionState
	EnumItem SubscriptionState.NeverSubscribed : 0
	EnumItem SubscriptionState.SubscribedWillRenew : 1
	EnumItem SubscriptionState.SubscribedWillNotRenew : 2
	EnumItem SubscriptionState.SubscribedRenewalPaymentPending : 3
	EnumItem SubscriptionState.Expired : 4
Enum SurfaceConstraint
	EnumItem SurfaceConstraint.None : 0
	EnumItem SurfaceConstraint.Hinge : 1
	EnumItem SurfaceConstraint.SteppingMotor : 2
	EnumItem SurfaceConstraint.Motor : 3
Enum SurfaceGuiShape
	EnumItem SurfaceGuiShape.Flat : 0
	EnumItem SurfaceGuiShape.CurvedHorizontally : 1
Enum SurfaceGuiSizingMode
	EnumItem SurfaceGuiSizingMode.FixedSize : 0
	EnumItem SurfaceGuiSizingMode.PixelsPerStud : 1
Enum SurfaceType
	EnumItem SurfaceType.Smooth : 0
	EnumItem SurfaceType.Glue : 1
	EnumItem SurfaceType.Weld : 2
	EnumItem SurfaceType.Studs : 3
	EnumItem SurfaceType.Inlet : 4
	EnumItem SurfaceType.Universal : 5
	EnumItem SurfaceType.Hinge : 6
	EnumItem SurfaceType.Motor : 7
	EnumItem SurfaceType.SteppingMotor : 8
	EnumItem SurfaceType.SmoothNoOutlines : 10
Enum SwipeDirection
	EnumItem SwipeDirection.Right : 0
	EnumItem SwipeDirection.Left : 1
	EnumItem SwipeDirection.Up : 2
	EnumItem SwipeDirection.Down : 3
	EnumItem SwipeDirection.None : 4
Enum TableMajorAxis
	EnumItem TableMajorAxis.RowMajor : 0
	EnumItem TableMajorAxis.ColumnMajor : 1
Enum Technology
	EnumItem Technology.Legacy : 0 [Deprecated]
	EnumItem Technology.Voxel : 1
	EnumItem Technology.Compatibility : 2
	EnumItem Technology.ShadowMap : 3
	EnumItem Technology.Future : 4
	EnumItem Technology.Unified : 5 [Deprecated]
Enum TeleportMethod
	EnumItem TeleportMethod.TeleportToSpawnByName : 0
	EnumItem TeleportMethod.TeleportToPlaceInstance : 1
	EnumItem TeleportMethod.TeleportToPrivateServer : 2
	EnumItem TeleportMethod.TeleportPartyAsync : 3
	EnumItem TeleportMethod.TeleportToVIPServer : 4
	EnumItem TeleportMethod.TeleportToInstanceBack : 5
	EnumItem TeleportMethod.TeleportUnknown : 6
Enum TeleportResult
	EnumItem TeleportResult.Success : 0
	EnumItem TeleportResult.Failure : 1
	EnumItem TeleportResult.GameNotFound : 2
	EnumItem TeleportResult.GameEnded : 3
	EnumItem TeleportResult.GameFull : 4
	EnumItem TeleportResult.Unauthorized : 5
	EnumItem TeleportResult.Flooded : 6
	EnumItem TeleportResult.IsTeleporting : 7
Enum TeleportState
	EnumItem TeleportState.RequestedFromServer : 0
	EnumItem TeleportState.Started : 1
	EnumItem TeleportState.WaitingForServer : 2
	EnumItem TeleportState.Failed : 3
	EnumItem TeleportState.InProgress : 4
Enum TeleportType
	EnumItem TeleportType.ToPlace : 0
	EnumItem TeleportType.ToInstance : 1
	EnumItem TeleportType.ToReservedServer : 2
	EnumItem TeleportType.ToVIPServer : 3
	EnumItem TeleportType.ToInstanceBack : 4
Enum TerrainAcquisitionMethod
	EnumItem TerrainAcquisitionMethod.None : 0
	EnumItem TerrainAcquisitionMethod.Legacy : 1
	EnumItem TerrainAcquisitionMethod.Template : 2
	EnumItem TerrainAcquisitionMethod.Generate : 3
	EnumItem TerrainAcquisitionMethod.Import : 4
	EnumItem TerrainAcquisitionMethod.Convert : 5
	EnumItem TerrainAcquisitionMethod.EditAddTool : 6
	EnumItem TerrainAcquisitionMethod.EditSeaLevelTool : 7
	EnumItem TerrainAcquisitionMethod.EditReplaceTool : 8
	EnumItem TerrainAcquisitionMethod.RegionFillTool : 9
	EnumItem TerrainAcquisitionMethod.RegionPasteTool : 10
	EnumItem TerrainAcquisitionMethod.Other : 11
Enum TerrainFace
	EnumItem TerrainFace.Top : 0
	EnumItem TerrainFace.Side : 1
	EnumItem TerrainFace.Bottom : 2
Enum TextChatMessageStatus
	EnumItem TextChatMessageStatus.Unknown : 1
	EnumItem TextChatMessageStatus.Success : 2
	EnumItem TextChatMessageStatus.Sending : 3
	EnumItem TextChatMessageStatus.TextFilterFailed : 4
	EnumItem TextChatMessageStatus.Floodchecked : 5
	EnumItem TextChatMessageStatus.InvalidPrivacySettings : 6
	EnumItem TextChatMessageStatus.InvalidTextChannelPermissions : 7
	EnumItem TextChatMessageStatus.MessageTooLong : 8
Enum TextDirection
	EnumItem TextDirection.Auto : 0
	EnumItem TextDirection.LeftToRight : 1
	EnumItem TextDirection.RightToLeft : 2
Enum TextFilterContext
	EnumItem TextFilterContext.PublicChat : 1
	EnumItem TextFilterContext.PrivateChat : 2
Enum TextInputType
	EnumItem TextInputType.Default : 0
	EnumItem TextInputType.NoSuggestions : 1
	EnumItem TextInputType.Number : 2
	EnumItem TextInputType.Email : 3
	EnumItem TextInputType.Phone : 4
	EnumItem TextInputType.Password : 5
	EnumItem TextInputType.PasswordShown : 6
	EnumItem TextInputType.Username : 7
	EnumItem TextInputType.OneTimePassword : 8
Enum TextTruncate
	EnumItem TextTruncate.None : 0
	EnumItem TextTruncate.AtEnd : 1
	EnumItem TextTruncate.SplitWord : 2
Enum TextXAlignment
	EnumItem TextXAlignment.Left : 0
	EnumItem TextXAlignment.Right : 1
	EnumItem TextXAlignment.Center : 2
Enum TextYAlignment
	EnumItem TextYAlignment.Top : 0
	EnumItem TextYAlignment.Center : 1
	EnumItem TextYAlignment.Bottom : 2
Enum TextureMode
	EnumItem TextureMode.Stretch : 0
	EnumItem TextureMode.Wrap : 1
	EnumItem TextureMode.Static : 2
Enum TextureQueryType
	EnumItem TextureQueryType.NonHumanoid : 0
	EnumItem TextureQueryType.NonHumanoidOrphaned : 1
	EnumItem TextureQueryType.Humanoid : 2
	EnumItem TextureQueryType.HumanoidOrphaned : 3
Enum ThreadPoolConfig
	EnumItem ThreadPoolConfig.Auto : 0
	EnumItem ThreadPoolConfig.Threads1 : 1
	EnumItem ThreadPoolConfig.Threads2 : 2
	EnumItem ThreadPoolConfig.Threads3 : 3
	EnumItem ThreadPoolConfig.Threads4 : 4
	EnumItem ThreadPoolConfig.Threads8 : 8
	EnumItem ThreadPoolConfig.Threads16 : 16
	EnumItem ThreadPoolConfig.PerCore1 : 101
	EnumItem ThreadPoolConfig.PerCore2 : 102
	EnumItem ThreadPoolConfig.PerCore3 : 103
	EnumItem ThreadPoolConfig.PerCore4 : 104
Enum ThrottlingPriority
	EnumItem ThrottlingPriority.Default : 0
	EnumItem ThrottlingPriority.ElevatedOnServer : 1
	EnumItem ThrottlingPriority.Extreme : 2
Enum ThumbnailSize
	EnumItem ThumbnailSize.Size48x48 : 0
	EnumItem ThumbnailSize.Size180x180 : 1
	EnumItem ThumbnailSize.Size420x420 : 2
	EnumItem ThumbnailSize.Size60x60 : 3
	EnumItem ThumbnailSize.Size100x100 : 4
	EnumItem ThumbnailSize.Size150x150 : 5
	EnumItem ThumbnailSize.Size352x352 : 6
Enum ThumbnailType
	EnumItem ThumbnailType.HeadShot : 0
	EnumItem ThumbnailType.AvatarBust : 1
	EnumItem ThumbnailType.AvatarThumbnail : 2
Enum TickCountSampleMethod
	EnumItem TickCountSampleMethod.Fast : 0
	EnumItem TickCountSampleMethod.Benchmark : 1
	EnumItem TickCountSampleMethod.Precise : 2
Enum TonemapperPreset
	EnumItem TonemapperPreset.Default : 0
	EnumItem TonemapperPreset.Retro : 1
Enum TopBottom
	EnumItem TopBottom.Top : 0
	EnumItem TopBottom.Center : 1
	EnumItem TopBottom.Bottom : 2
Enum TouchCameraMovementMode
	EnumItem TouchCameraMovementMode.Default : 0
	EnumItem TouchCameraMovementMode.Classic : 1
	EnumItem TouchCameraMovementMode.Follow : 2
	EnumItem TouchCameraMovementMode.Orbital : 3
Enum TouchMovementMode
	EnumItem TouchMovementMode.Default : 0
	EnumItem TouchMovementMode.Thumbstick : 1
	EnumItem TouchMovementMode.DPad : 2
	EnumItem TouchMovementMode.Thumbpad : 3
	EnumItem TouchMovementMode.ClickToMove : 4
	EnumItem TouchMovementMode.DynamicThumbstick : 5
Enum TrackerError
	EnumItem TrackerError.Ok : 0
	EnumItem TrackerError.NoService : 1
	EnumItem TrackerError.InitFailed : 2
	EnumItem TrackerError.NoVideo : 3
	EnumItem TrackerError.VideoError : 4
	EnumItem TrackerError.VideoNoPermission : 5
	EnumItem TrackerError.VideoUnsupported : 6
	EnumItem TrackerError.NoAudio : 7
	EnumItem TrackerError.AudioError : 8
	EnumItem TrackerError.AudioNoPermission : 9
	EnumItem TrackerError.UnsupportedDevice : 10
Enum TrackerExtrapolationFlagMode
	EnumItem TrackerExtrapolationFlagMode.ForceDisabled : 0
	EnumItem TrackerExtrapolationFlagMode.ExtrapolateFacsAndPose : 1
	EnumItem TrackerExtrapolationFlagMode.ExtrapolateFacsOnly : 2
	EnumItem TrackerExtrapolationFlagMode.Auto : 3
Enum TrackerFaceTrackingStatus
	EnumItem TrackerFaceTrackingStatus.FaceTrackingSuccess : 0
	EnumItem TrackerFaceTrackingStatus.FaceTrackingNoFaceFound : 1
	EnumItem TrackerFaceTrackingStatus.FaceTrackingUnknown : 2
	EnumItem TrackerFaceTrackingStatus.FaceTrackingLost : 3
	EnumItem TrackerFaceTrackingStatus.FaceTrackingHasTrackingError : 4
	EnumItem TrackerFaceTrackingStatus.FaceTrackingIsOccluded : 5
	EnumItem TrackerFaceTrackingStatus.FaceTrackingUninitialized : 6
Enum TrackerLodFlagMode
	EnumItem TrackerLodFlagMode.ForceFalse : 0
	EnumItem TrackerLodFlagMode.ForceTrue : 1
	EnumItem TrackerLodFlagMode.Auto : 2
Enum TrackerLodValueMode
	EnumItem TrackerLodValueMode.Force0 : 0
	EnumItem TrackerLodValueMode.Force1 : 1
	EnumItem TrackerLodValueMode.Auto : 2
Enum TrackerMode
	EnumItem TrackerMode.None : 0
	EnumItem TrackerMode.Audio : 1
	EnumItem TrackerMode.Video : 2
	EnumItem TrackerMode.AudioVideo : 3
Enum TrackerPromptEvent
	EnumItem TrackerPromptEvent.LODCameraRecommendDisable : 0
Enum TrackerType
	EnumItem TrackerType.None : 0
	EnumItem TrackerType.Face : 1
	EnumItem TrackerType.UpperBody : 2
Enum TriStateBoolean
	EnumItem TriStateBoolean.Unknown : 0
	EnumItem TriStateBoolean.True : 1
	EnumItem TriStateBoolean.False : 2
Enum TweenStatus
	EnumItem TweenStatus.Canceled : 0
	EnumItem TweenStatus.Completed : 1
Enum UIDragDetectorBoundingBehavior
	EnumItem UIDragDetectorBoundingBehavior.Automatic : 0
	EnumItem UIDragDetectorBoundingBehavior.EntireObject : 1
	EnumItem UIDragDetectorBoundingBehavior.HitPoint : 2
Enum UIDragDetectorDragRelativity
	EnumItem UIDragDetectorDragRelativity.Absolute : 0
	EnumItem UIDragDetectorDragRelativity.Relative : 1
Enum UIDragDetectorDragSpace
	EnumItem UIDragDetectorDragSpace.Parent : 0
	EnumItem UIDragDetectorDragSpace.LayerCollector : 1
	EnumItem UIDragDetectorDragSpace.Reference : 2
Enum UIDragDetectorDragStyle
	EnumItem UIDragDetectorDragStyle.TranslatePlane : 0
	EnumItem UIDragDetectorDragStyle.TranslateLine : 1
	EnumItem UIDragDetectorDragStyle.Rotate : 2
	EnumItem UIDragDetectorDragStyle.Scriptable : 3
Enum UIDragDetectorResponseStyle
	EnumItem UIDragDetectorResponseStyle.Offset : 0
	EnumItem UIDragDetectorResponseStyle.Scale : 1
	EnumItem UIDragDetectorResponseStyle.CustomOffset : 2
	EnumItem UIDragDetectorResponseStyle.CustomScale : 3
Enum UIDragSpeedAxisMapping
	EnumItem UIDragSpeedAxisMapping.XY : 0
	EnumItem UIDragSpeedAxisMapping.XX : 1
	EnumItem UIDragSpeedAxisMapping.YY : 2
Enum UIFlexAlignment
	EnumItem UIFlexAlignment.None : 0
	EnumItem UIFlexAlignment.Fill : 1
	EnumItem UIFlexAlignment.SpaceAround : 2
	EnumItem UIFlexAlignment.SpaceBetween : 3
	EnumItem UIFlexAlignment.SpaceEvenly : 4
Enum UIFlexMode
	EnumItem UIFlexMode.None : 0
	EnumItem UIFlexMode.Grow : 1
	EnumItem UIFlexMode.Shrink : 2
	EnumItem UIFlexMode.Fill : 3
	EnumItem UIFlexMode.Custom : 4
Enum UITheme [Deprecated]
	EnumItem UITheme.Light : 0 [Deprecated]
	EnumItem UITheme.Dark : 1 [Deprecated]
Enum UiMessageType
	EnumItem UiMessageType.UiMessageError : 0
	EnumItem UiMessageType.UiMessageInfo : 1
Enum UsageContext
	EnumItem UsageContext.Default : 0
	EnumItem UsageContext.Preview : 1
Enum UserCFrame
	EnumItem UserCFrame.Head : 0
	EnumItem UserCFrame.LeftHand : 1
	EnumItem UserCFrame.RightHand : 2
	EnumItem UserCFrame.Floor : 3
Enum UserInputState
	EnumItem UserInputState.Begin : 0
	EnumItem UserInputState.Change : 1
	EnumItem UserInputState.End : 2
	EnumItem UserInputState.Cancel : 3
	EnumItem UserInputState.None : 4
Enum UserInputType
	EnumItem UserInputType.MouseButton1 : 0
	EnumItem UserInputType.MouseButton2 : 1
	EnumItem UserInputType.MouseButton3 : 2
	EnumItem UserInputType.MouseWheel : 3
	EnumItem UserInputType.MouseMovement : 4
	EnumItem UserInputType.Touch : 7
	EnumItem UserInputType.Keyboard : 8
	EnumItem UserInputType.Focus : 9
	EnumItem UserInputType.Accelerometer : 10
	EnumItem UserInputType.Gyro : 11
	EnumItem UserInputType.Gamepad1 : 12
	EnumItem UserInputType.Gamepad2 : 13
	EnumItem UserInputType.Gamepad3 : 14
	EnumItem UserInputType.Gamepad4 : 15
	EnumItem UserInputType.Gamepad5 : 16
	EnumItem UserInputType.Gamepad6 : 17
	EnumItem UserInputType.Gamepad7 : 18
	EnumItem UserInputType.Gamepad8 : 19
	EnumItem UserInputType.TextInput : 20
	EnumItem UserInputType.InputMethod : 21
	EnumItem UserInputType.None : 22
Enum VRComfortSetting
	EnumItem VRComfortSetting.Comfort : 0
	EnumItem VRComfortSetting.Normal : 1
	EnumItem VRComfortSetting.Expert : 2
	EnumItem VRComfortSetting.Custom : 3
Enum VRControllerModelMode
	EnumItem VRControllerModelMode.Disabled : 0
	EnumItem VRControllerModelMode.Transparent : 1
Enum VRDeviceType
	EnumItem VRDeviceType.Unknown : 0
	EnumItem VRDeviceType.OculusRift : 1
	EnumItem VRDeviceType.HTCVive : 2
	EnumItem VRDeviceType.ValveIndex : 3
	EnumItem VRDeviceType.OculusQuest : 4
Enum VRLaserPointerMode
	EnumItem VRLaserPointerMode.Disabled : 0
	EnumItem VRLaserPointerMode.Pointer : 1
	EnumItem VRLaserPointerMode.DualPointer : 2
Enum VRSafetyBubbleMode
	EnumItem VRSafetyBubbleMode.NoOne : 0
	EnumItem VRSafetyBubbleMode.OnlyFriends : 1
	EnumItem VRSafetyBubbleMode.Anyone : 2
Enum VRScaling
	EnumItem VRScaling.World : 0
	EnumItem VRScaling.Off : 1
Enum VRSessionState
	EnumItem VRSessionState.Undefined : 0
	EnumItem VRSessionState.Idle : 1
	EnumItem VRSessionState.Visible : 2
	EnumItem VRSessionState.Focused : 3
	EnumItem VRSessionState.Stopping : 4
Enum VRTouchpad
	EnumItem VRTouchpad.Left : 0
	EnumItem VRTouchpad.Right : 1
Enum VRTouchpadMode
	EnumItem VRTouchpadMode.Touch : 0
	EnumItem VRTouchpadMode.VirtualThumbstick : 1
	EnumItem VRTouchpadMode.ABXY : 2
Enum VelocityConstraintMode
	EnumItem VelocityConstraintMode.Line : 0
	EnumItem VelocityConstraintMode.Plane : 1
	EnumItem VelocityConstraintMode.Vector : 2
Enum VerticalAlignment
	EnumItem VerticalAlignment.Center : 0
	EnumItem VerticalAlignment.Top : 1
	EnumItem VerticalAlignment.Bottom : 2
Enum VerticalScrollBarPosition
	EnumItem VerticalScrollBarPosition.Right : 0
	EnumItem VerticalScrollBarPosition.Left : 1
Enum VibrationMotor
	EnumItem VibrationMotor.Large : 0
	EnumItem VibrationMotor.Small : 1
	EnumItem VibrationMotor.LeftTrigger : 2
	EnumItem VibrationMotor.RightTrigger : 3
	EnumItem VibrationMotor.LeftHand : 4
	EnumItem VibrationMotor.RightHand : 5
Enum VideoDeviceCaptureQuality
	EnumItem VideoDeviceCaptureQuality.Default : 0
	EnumItem VideoDeviceCaptureQuality.Low : 1
	EnumItem VideoDeviceCaptureQuality.Medium : 2
	EnumItem VideoDeviceCaptureQuality.High : 3
Enum VideoError
	EnumItem VideoError.Ok : 0
	EnumItem VideoError.Eof : 1
	EnumItem VideoError.EAgain : 2
	EnumItem VideoError.BadParameter : 3
	EnumItem VideoError.AllocFailed : 4
	EnumItem VideoError.CodecInitFailed : 5
	EnumItem VideoError.CodecCloseFailed : 6
	EnumItem VideoError.DecodeFailed : 7
	EnumItem VideoError.ParsingFailed : 8
	EnumItem VideoError.Unsupported : 9
	EnumItem VideoError.Generic : 10
	EnumItem VideoError.DownloadFailed : 11
	EnumItem VideoError.StreamNotFound : 12
	EnumItem VideoError.EncodeFailed : 13
	EnumItem VideoError.CreateFailed : 14
	EnumItem VideoError.NoPermission : 15
	EnumItem VideoError.NoService : 16
	EnumItem VideoError.ReleaseFailed : 17
	EnumItem VideoError.Unknown : 18
Enum ViewMode
	EnumItem ViewMode.None : 0
	EnumItem ViewMode.GeometryComplexity : 1
	EnumItem ViewMode.Transparent : 2
	EnumItem ViewMode.Decal : 3
Enum VirtualCursorMode
	EnumItem VirtualCursorMode.Default : 0
	EnumItem VirtualCursorMode.Disabled : 1
	EnumItem VirtualCursorMode.Enabled : 2
Enum VirtualInputMode
	EnumItem VirtualInputMode.None : 0
	EnumItem VirtualInputMode.Recording : 1
	EnumItem VirtualInputMode.Playing : 2
Enum VoiceChatState
	EnumItem VoiceChatState.Idle : 0
	EnumItem VoiceChatState.Joining : 1
	EnumItem VoiceChatState.JoiningRetry : 2
	EnumItem VoiceChatState.Joined : 3
	EnumItem VoiceChatState.Leaving : 4
	EnumItem VoiceChatState.Ended : 5
	EnumItem VoiceChatState.Failed : 6
Enum VoiceControlPath
	EnumItem VoiceControlPath.Publish : 0
	EnumItem VoiceControlPath.Subscribe : 1
	EnumItem VoiceControlPath.Join : 2
Enum VolumetricAudio
	EnumItem VolumetricAudio.Disabled : 0
	EnumItem VolumetricAudio.Automatic : 1
	EnumItem VolumetricAudio.Enabled : 2
Enum WaterDirection
	EnumItem WaterDirection.NegX : 0
	EnumItem WaterDirection.X : 1
	EnumItem WaterDirection.NegY : 2
	EnumItem WaterDirection.Y : 3
	EnumItem WaterDirection.NegZ : 4
	EnumItem WaterDirection.Z : 5
Enum WaterForce
	EnumItem WaterForce.None : 0
	EnumItem WaterForce.Small : 1
	EnumItem WaterForce.Medium : 2
	EnumItem WaterForce.Strong : 3
	EnumItem WaterForce.Max : 4
Enum WeldConstraintPreserve
	EnumItem WeldConstraintPreserve.All : 0
	EnumItem WeldConstraintPreserve.None : 1
	EnumItem WeldConstraintPreserve.Touching : 2
Enum WhisperChatPrivacyMode
	EnumItem WhisperChatPrivacyMode.AllUsers : 0
	EnumItem WhisperChatPrivacyMode.NoOne : 1
Enum WrapLayerAutoSkin
	EnumItem WrapLayerAutoSkin.Disabled : 0
	EnumItem WrapLayerAutoSkin.EnabledPreserve : 1
	EnumItem WrapLayerAutoSkin.EnabledOverride : 2
Enum WrapLayerDebugMode
	EnumItem WrapLayerDebugMode.None : 0
	EnumItem WrapLayerDebugMode.BoundCage : 1
	EnumItem WrapLayerDebugMode.LayerCage : 2
	EnumItem WrapLayerDebugMode.BoundCageAndLinks : 3
	EnumItem WrapLayerDebugMode.Reference : 4
	EnumItem WrapLayerDebugMode.Rbf : 5
	EnumItem WrapLayerDebugMode.OuterCage : 6
	EnumItem WrapLayerDebugMode.ReferenceMeshAfterMorph : 7
	EnumItem WrapLayerDebugMode.HSROuterDetail : 8
	EnumItem WrapLayerDebugMode.HSROuter : 9
	EnumItem WrapLayerDebugMode.HSRInner : 10
	EnumItem WrapLayerDebugMode.HSRInnerReverse : 11
	EnumItem WrapLayerDebugMode.LayerCageFittedToBase : 12
	EnumItem WrapLayerDebugMode.LayerCageFittedToPrev : 13
Enum WrapTargetDebugMode
	EnumItem WrapTargetDebugMode.None : 0
	EnumItem WrapTargetDebugMode.TargetCageOriginal : 1
	EnumItem WrapTargetDebugMode.TargetCageCompressed : 2
	EnumItem WrapTargetDebugMode.TargetCageInterface : 3
	EnumItem WrapTargetDebugMode.TargetLayerCageOriginal : 4
	EnumItem WrapTargetDebugMode.TargetLayerCageCompressed : 5
	EnumItem WrapTargetDebugMode.TargetLayerInterface : 6
	EnumItem WrapTargetDebugMode.Rbf : 7
	EnumItem WrapTargetDebugMode.OuterCageDetail : 8
Enum ZIndexBehavior
	EnumItem ZIndexBehavior.Global : 0
	EnumItem ZIndexBehavior.Sibling : 1
