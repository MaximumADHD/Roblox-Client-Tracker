PROTO_0:
  FASTCALL1 TYPE R0 [+3]
  MOVE R5 R0
  GETIMPORT R4 K1 [type]
  CALL R4 1 1
  JUMPIFEQKS R4 K2 ["string"] [+2]
  LOADB R3 0 +1
  LOADB R3 1
  FASTCALL2K ASSERT R3 K3 [+4]
  LOADK R4 K3 ["Expected the string to split to be a string"]
  GETIMPORT R2 K5 [assert]
  CALL R2 2 0
  LOADB R3 0
  FASTCALL1 TYPE R1 [+3]
  MOVE R5 R1
  GETIMPORT R4 K1 [type]
  CALL R4 1 1
  JUMPIFNOTEQKS R4 K6 ["table"] [+7]
  LENGTH R4 R1
  LOADN R5 0
  JUMPIFLT R5 R4 [+2]
  LOADB R3 0 +1
  LOADB R3 1
  FASTCALL2K ASSERT R3 K7 [+4]
  LOADK R4 K7 ["Expected matches to be an array"]
  GETIMPORT R2 K5 [assert]
  CALL R2 2 0
  GETIMPORT R2 K9 [ipairs]
  MOVE R3 R1
  CALL R2 1 3
  FORGPREP_INEXT R2
  GETIMPORT R7 K11 [string.find]
  MOVE R8 R0
  MOVE R9 R6
  LOADNIL R10
  LOADB R11 1
  CALL R7 4 2
  JUMPIFEQKNIL R7 [+17]
  LOADN R11 1
  SUBK R12 R7 K12 [1]
  FASTCALL3 STRING_SUB R0 R11 R12
  MOVE R10 R0
  GETIMPORT R9 K14 [string.sub]
  CALL R9 3 1
  ADDK R12 R8 K12 [1]
  FASTCALL2 STRING_SUB R0 R12 [+4]
  MOVE R11 R0
  GETIMPORT R10 K14 [string.sub]
  CALL R10 2 1
  RETURN R9 2
  FORGLOOP R2 2 [inext] [-26]
  MOVE R2 R0
  LOADK R3 K15 [""]
  RETURN R2 2

MAIN:
  PREPVARARGS 0
  DUPCLOSURE R0 K0 [PROTO_0]
  RETURN R0 1
